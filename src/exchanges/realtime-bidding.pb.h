// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: realtime-bidding.proto

#ifndef PROTOBUF_realtime_2dbidding_2eproto__INCLUDED
#define PROTOBUF_realtime_2dbidding_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_realtime_2dbidding_2eproto();
void protobuf_AssignDesc_realtime_2dbidding_2eproto();
void protobuf_ShutdownFile_realtime_2dbidding_2eproto();

class BidRequest;
class BidRequest_AdSlot;
class BidRequest_AdSlot_MatchingAdData;
class BidRequest_AdSlot_MatchingAdData_DirectDeal;
class BidRequest_BidResponseFeedback;
class BidRequest_Hyperlocal;
class BidRequest_HyperlocalSet;
class BidRequest_Hyperlocal_Point;
class BidRequest_KeyValue;
class BidRequest_MatchingNetwork;
class BidRequest_Mobile;
class BidRequest_Mobile_DeviceOsVersion;
class BidRequest_UserList;
class BidRequest_Vertical;
class BidRequest_Video;
class BidRequest_Video_CompanionSlot;
class BidResponse;
class BidResponse_Ad;
class BidResponse_Ad_AdSlot;
class BidResponse_Ad_TemplateParameter;

enum BidRequest_Mobile_MobileDeviceType {
  BidRequest_Mobile_MobileDeviceType_UNKNOWN = 0,
  BidRequest_Mobile_MobileDeviceType_HIGHEND_PHONE = 1,
  BidRequest_Mobile_MobileDeviceType_TABLET = 2
};
bool BidRequest_Mobile_MobileDeviceType_IsValid(int value);
const BidRequest_Mobile_MobileDeviceType BidRequest_Mobile_MobileDeviceType_MobileDeviceType_MIN = BidRequest_Mobile_MobileDeviceType_UNKNOWN;
const BidRequest_Mobile_MobileDeviceType BidRequest_Mobile_MobileDeviceType_MobileDeviceType_MAX = BidRequest_Mobile_MobileDeviceType_TABLET;
const int BidRequest_Mobile_MobileDeviceType_MobileDeviceType_ARRAYSIZE = BidRequest_Mobile_MobileDeviceType_MobileDeviceType_MAX + 1;

const ::google::protobuf::EnumDescriptor* BidRequest_Mobile_MobileDeviceType_descriptor();
inline const ::std::string& BidRequest_Mobile_MobileDeviceType_Name(BidRequest_Mobile_MobileDeviceType value) {
  return ::google::protobuf::internal::NameOfEnum(
    BidRequest_Mobile_MobileDeviceType_descriptor(), value);
}
inline bool BidRequest_Mobile_MobileDeviceType_Parse(
    const ::std::string& name, BidRequest_Mobile_MobileDeviceType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<BidRequest_Mobile_MobileDeviceType>(
    BidRequest_Mobile_MobileDeviceType_descriptor(), name, value);
}
enum BidRequest_Mobile_ScreenOrientation {
  BidRequest_Mobile_ScreenOrientation_SCREEN_ORIENTATION_UNKNOWN = 0,
  BidRequest_Mobile_ScreenOrientation_SCREEN_ORIENTATION_PORTRAIT = 1,
  BidRequest_Mobile_ScreenOrientation_SCREEN_ORIENTATION_LANDSCAPE = 2
};
bool BidRequest_Mobile_ScreenOrientation_IsValid(int value);
const BidRequest_Mobile_ScreenOrientation BidRequest_Mobile_ScreenOrientation_ScreenOrientation_MIN = BidRequest_Mobile_ScreenOrientation_SCREEN_ORIENTATION_UNKNOWN;
const BidRequest_Mobile_ScreenOrientation BidRequest_Mobile_ScreenOrientation_ScreenOrientation_MAX = BidRequest_Mobile_ScreenOrientation_SCREEN_ORIENTATION_LANDSCAPE;
const int BidRequest_Mobile_ScreenOrientation_ScreenOrientation_ARRAYSIZE = BidRequest_Mobile_ScreenOrientation_ScreenOrientation_MAX + 1;

const ::google::protobuf::EnumDescriptor* BidRequest_Mobile_ScreenOrientation_descriptor();
inline const ::std::string& BidRequest_Mobile_ScreenOrientation_Name(BidRequest_Mobile_ScreenOrientation value) {
  return ::google::protobuf::internal::NameOfEnum(
    BidRequest_Mobile_ScreenOrientation_descriptor(), value);
}
inline bool BidRequest_Mobile_ScreenOrientation_Parse(
    const ::std::string& name, BidRequest_Mobile_ScreenOrientation* value) {
  return ::google::protobuf::internal::ParseNamedEnum<BidRequest_Mobile_ScreenOrientation>(
    BidRequest_Mobile_ScreenOrientation_descriptor(), name, value);
}
enum BidRequest_Video_CompanionSlot_CreativeFormat {
  BidRequest_Video_CompanionSlot_CreativeFormat_IMAGE_CREATIVE = 0,
  BidRequest_Video_CompanionSlot_CreativeFormat_FLASH_CREATIVE = 1,
  BidRequest_Video_CompanionSlot_CreativeFormat_HTML_CREATIVE = 2
};
bool BidRequest_Video_CompanionSlot_CreativeFormat_IsValid(int value);
const BidRequest_Video_CompanionSlot_CreativeFormat BidRequest_Video_CompanionSlot_CreativeFormat_CreativeFormat_MIN = BidRequest_Video_CompanionSlot_CreativeFormat_IMAGE_CREATIVE;
const BidRequest_Video_CompanionSlot_CreativeFormat BidRequest_Video_CompanionSlot_CreativeFormat_CreativeFormat_MAX = BidRequest_Video_CompanionSlot_CreativeFormat_HTML_CREATIVE;
const int BidRequest_Video_CompanionSlot_CreativeFormat_CreativeFormat_ARRAYSIZE = BidRequest_Video_CompanionSlot_CreativeFormat_CreativeFormat_MAX + 1;

const ::google::protobuf::EnumDescriptor* BidRequest_Video_CompanionSlot_CreativeFormat_descriptor();
inline const ::std::string& BidRequest_Video_CompanionSlot_CreativeFormat_Name(BidRequest_Video_CompanionSlot_CreativeFormat value) {
  return ::google::protobuf::internal::NameOfEnum(
    BidRequest_Video_CompanionSlot_CreativeFormat_descriptor(), value);
}
inline bool BidRequest_Video_CompanionSlot_CreativeFormat_Parse(
    const ::std::string& name, BidRequest_Video_CompanionSlot_CreativeFormat* value) {
  return ::google::protobuf::internal::ParseNamedEnum<BidRequest_Video_CompanionSlot_CreativeFormat>(
    BidRequest_Video_CompanionSlot_CreativeFormat_descriptor(), name, value);
}
enum BidRequest_Video_InventoryType {
  BidRequest_Video_InventoryType_WEB_VIDEO = 0,
  BidRequest_Video_InventoryType_GAMES = 1,
  BidRequest_Video_InventoryType_MOBILE_INTERSTITIAL = 2
};
bool BidRequest_Video_InventoryType_IsValid(int value);
const BidRequest_Video_InventoryType BidRequest_Video_InventoryType_InventoryType_MIN = BidRequest_Video_InventoryType_WEB_VIDEO;
const BidRequest_Video_InventoryType BidRequest_Video_InventoryType_InventoryType_MAX = BidRequest_Video_InventoryType_MOBILE_INTERSTITIAL;
const int BidRequest_Video_InventoryType_InventoryType_ARRAYSIZE = BidRequest_Video_InventoryType_InventoryType_MAX + 1;

const ::google::protobuf::EnumDescriptor* BidRequest_Video_InventoryType_descriptor();
inline const ::std::string& BidRequest_Video_InventoryType_Name(BidRequest_Video_InventoryType value) {
  return ::google::protobuf::internal::NameOfEnum(
    BidRequest_Video_InventoryType_descriptor(), value);
}
inline bool BidRequest_Video_InventoryType_Parse(
    const ::std::string& name, BidRequest_Video_InventoryType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<BidRequest_Video_InventoryType>(
    BidRequest_Video_InventoryType_descriptor(), name, value);
}
enum BidRequest_Video_SkippableBidRequestType {
  BidRequest_Video_SkippableBidRequestType_ALLOW_SKIPPABLE = 0,
  BidRequest_Video_SkippableBidRequestType_REQUIRE_SKIPPABLE = 1,
  BidRequest_Video_SkippableBidRequestType_BLOCK_SKIPPABLE = 2
};
bool BidRequest_Video_SkippableBidRequestType_IsValid(int value);
const BidRequest_Video_SkippableBidRequestType BidRequest_Video_SkippableBidRequestType_SkippableBidRequestType_MIN = BidRequest_Video_SkippableBidRequestType_ALLOW_SKIPPABLE;
const BidRequest_Video_SkippableBidRequestType BidRequest_Video_SkippableBidRequestType_SkippableBidRequestType_MAX = BidRequest_Video_SkippableBidRequestType_BLOCK_SKIPPABLE;
const int BidRequest_Video_SkippableBidRequestType_SkippableBidRequestType_ARRAYSIZE = BidRequest_Video_SkippableBidRequestType_SkippableBidRequestType_MAX + 1;

const ::google::protobuf::EnumDescriptor* BidRequest_Video_SkippableBidRequestType_descriptor();
inline const ::std::string& BidRequest_Video_SkippableBidRequestType_Name(BidRequest_Video_SkippableBidRequestType value) {
  return ::google::protobuf::internal::NameOfEnum(
    BidRequest_Video_SkippableBidRequestType_descriptor(), value);
}
inline bool BidRequest_Video_SkippableBidRequestType_Parse(
    const ::std::string& name, BidRequest_Video_SkippableBidRequestType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<BidRequest_Video_SkippableBidRequestType>(
    BidRequest_Video_SkippableBidRequestType_descriptor(), name, value);
}
enum BidRequest_Video_VideoFormat {
  BidRequest_Video_VideoFormat_VIDEO_FLASH = 0,
  BidRequest_Video_VideoFormat_VIDEO_HTML5 = 1
};
bool BidRequest_Video_VideoFormat_IsValid(int value);
const BidRequest_Video_VideoFormat BidRequest_Video_VideoFormat_VideoFormat_MIN = BidRequest_Video_VideoFormat_VIDEO_FLASH;
const BidRequest_Video_VideoFormat BidRequest_Video_VideoFormat_VideoFormat_MAX = BidRequest_Video_VideoFormat_VIDEO_HTML5;
const int BidRequest_Video_VideoFormat_VideoFormat_ARRAYSIZE = BidRequest_Video_VideoFormat_VideoFormat_MAX + 1;

const ::google::protobuf::EnumDescriptor* BidRequest_Video_VideoFormat_descriptor();
inline const ::std::string& BidRequest_Video_VideoFormat_Name(BidRequest_Video_VideoFormat value) {
  return ::google::protobuf::internal::NameOfEnum(
    BidRequest_Video_VideoFormat_descriptor(), value);
}
inline bool BidRequest_Video_VideoFormat_Parse(
    const ::std::string& name, BidRequest_Video_VideoFormat* value) {
  return ::google::protobuf::internal::ParseNamedEnum<BidRequest_Video_VideoFormat>(
    BidRequest_Video_VideoFormat_descriptor(), name, value);
}
enum BidRequest_AdSlot_SlotVisibility {
  BidRequest_AdSlot_SlotVisibility_NO_DETECTION = 0,
  BidRequest_AdSlot_SlotVisibility_ABOVE_THE_FOLD = 1,
  BidRequest_AdSlot_SlotVisibility_BELOW_THE_FOLD = 2
};
bool BidRequest_AdSlot_SlotVisibility_IsValid(int value);
const BidRequest_AdSlot_SlotVisibility BidRequest_AdSlot_SlotVisibility_SlotVisibility_MIN = BidRequest_AdSlot_SlotVisibility_NO_DETECTION;
const BidRequest_AdSlot_SlotVisibility BidRequest_AdSlot_SlotVisibility_SlotVisibility_MAX = BidRequest_AdSlot_SlotVisibility_BELOW_THE_FOLD;
const int BidRequest_AdSlot_SlotVisibility_SlotVisibility_ARRAYSIZE = BidRequest_AdSlot_SlotVisibility_SlotVisibility_MAX + 1;

const ::google::protobuf::EnumDescriptor* BidRequest_AdSlot_SlotVisibility_descriptor();
inline const ::std::string& BidRequest_AdSlot_SlotVisibility_Name(BidRequest_AdSlot_SlotVisibility value) {
  return ::google::protobuf::internal::NameOfEnum(
    BidRequest_AdSlot_SlotVisibility_descriptor(), value);
}
inline bool BidRequest_AdSlot_SlotVisibility_Parse(
    const ::std::string& name, BidRequest_AdSlot_SlotVisibility* value) {
  return ::google::protobuf::internal::ParseNamedEnum<BidRequest_AdSlot_SlotVisibility>(
    BidRequest_AdSlot_SlotVisibility_descriptor(), name, value);
}
// ===================================================================

class BidRequest_Hyperlocal_Point : public ::google::protobuf::Message {
 public:
  BidRequest_Hyperlocal_Point();
  virtual ~BidRequest_Hyperlocal_Point();

  BidRequest_Hyperlocal_Point(const BidRequest_Hyperlocal_Point& from);

  inline BidRequest_Hyperlocal_Point& operator=(const BidRequest_Hyperlocal_Point& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BidRequest_Hyperlocal_Point& default_instance();

  void Swap(BidRequest_Hyperlocal_Point* other);

  // implements Message ----------------------------------------------

  inline BidRequest_Hyperlocal_Point* New() const { return New(NULL); }

  BidRequest_Hyperlocal_Point* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BidRequest_Hyperlocal_Point& from);
  void MergeFrom(const BidRequest_Hyperlocal_Point& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BidRequest_Hyperlocal_Point* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional float latitude = 1;
  bool has_latitude() const;
  void clear_latitude();
  static const int kLatitudeFieldNumber = 1;
  float latitude() const;
  void set_latitude(float value);

  // optional float longitude = 2;
  bool has_longitude() const;
  void clear_longitude();
  static const int kLongitudeFieldNumber = 2;
  float longitude() const;
  void set_longitude(float value);

  // @@protoc_insertion_point(class_scope:BidRequest.Hyperlocal.Point)
 private:
  inline void set_has_latitude();
  inline void clear_has_latitude();
  inline void set_has_longitude();
  inline void clear_has_longitude();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  float latitude_;
  float longitude_;
  friend void  protobuf_AddDesc_realtime_2dbidding_2eproto();
  friend void protobuf_AssignDesc_realtime_2dbidding_2eproto();
  friend void protobuf_ShutdownFile_realtime_2dbidding_2eproto();

  void InitAsDefaultInstance();
  static BidRequest_Hyperlocal_Point* default_instance_;
};
// -------------------------------------------------------------------

class BidRequest_Hyperlocal : public ::google::protobuf::Message {
 public:
  BidRequest_Hyperlocal();
  virtual ~BidRequest_Hyperlocal();

  BidRequest_Hyperlocal(const BidRequest_Hyperlocal& from);

  inline BidRequest_Hyperlocal& operator=(const BidRequest_Hyperlocal& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BidRequest_Hyperlocal& default_instance();

  void Swap(BidRequest_Hyperlocal* other);

  // implements Message ----------------------------------------------

  inline BidRequest_Hyperlocal* New() const { return New(NULL); }

  BidRequest_Hyperlocal* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BidRequest_Hyperlocal& from);
  void MergeFrom(const BidRequest_Hyperlocal& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BidRequest_Hyperlocal* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef BidRequest_Hyperlocal_Point Point;

  // accessors -------------------------------------------------------

  // repeated .BidRequest.Hyperlocal.Point corners = 1;
  int corners_size() const;
  void clear_corners();
  static const int kCornersFieldNumber = 1;
  const ::BidRequest_Hyperlocal_Point& corners(int index) const;
  ::BidRequest_Hyperlocal_Point* mutable_corners(int index);
  ::BidRequest_Hyperlocal_Point* add_corners();
  ::google::protobuf::RepeatedPtrField< ::BidRequest_Hyperlocal_Point >*
      mutable_corners();
  const ::google::protobuf::RepeatedPtrField< ::BidRequest_Hyperlocal_Point >&
      corners() const;

  // @@protoc_insertion_point(class_scope:BidRequest.Hyperlocal)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::BidRequest_Hyperlocal_Point > corners_;
  friend void  protobuf_AddDesc_realtime_2dbidding_2eproto();
  friend void protobuf_AssignDesc_realtime_2dbidding_2eproto();
  friend void protobuf_ShutdownFile_realtime_2dbidding_2eproto();

  void InitAsDefaultInstance();
  static BidRequest_Hyperlocal* default_instance_;
};
// -------------------------------------------------------------------

class BidRequest_HyperlocalSet : public ::google::protobuf::Message {
 public:
  BidRequest_HyperlocalSet();
  virtual ~BidRequest_HyperlocalSet();

  BidRequest_HyperlocalSet(const BidRequest_HyperlocalSet& from);

  inline BidRequest_HyperlocalSet& operator=(const BidRequest_HyperlocalSet& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BidRequest_HyperlocalSet& default_instance();

  void Swap(BidRequest_HyperlocalSet* other);

  // implements Message ----------------------------------------------

  inline BidRequest_HyperlocalSet* New() const { return New(NULL); }

  BidRequest_HyperlocalSet* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BidRequest_HyperlocalSet& from);
  void MergeFrom(const BidRequest_HyperlocalSet& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BidRequest_HyperlocalSet* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .BidRequest.Hyperlocal hyperlocal = 1;
  int hyperlocal_size() const;
  void clear_hyperlocal();
  static const int kHyperlocalFieldNumber = 1;
  const ::BidRequest_Hyperlocal& hyperlocal(int index) const;
  ::BidRequest_Hyperlocal* mutable_hyperlocal(int index);
  ::BidRequest_Hyperlocal* add_hyperlocal();
  ::google::protobuf::RepeatedPtrField< ::BidRequest_Hyperlocal >*
      mutable_hyperlocal();
  const ::google::protobuf::RepeatedPtrField< ::BidRequest_Hyperlocal >&
      hyperlocal() const;

  // optional .BidRequest.Hyperlocal.Point center_point = 2;
  bool has_center_point() const;
  void clear_center_point();
  static const int kCenterPointFieldNumber = 2;
  const ::BidRequest_Hyperlocal_Point& center_point() const;
  ::BidRequest_Hyperlocal_Point* mutable_center_point();
  ::BidRequest_Hyperlocal_Point* release_center_point();
  void set_allocated_center_point(::BidRequest_Hyperlocal_Point* center_point);

  // @@protoc_insertion_point(class_scope:BidRequest.HyperlocalSet)
 private:
  inline void set_has_center_point();
  inline void clear_has_center_point();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::BidRequest_Hyperlocal > hyperlocal_;
  ::BidRequest_Hyperlocal_Point* center_point_;
  friend void  protobuf_AddDesc_realtime_2dbidding_2eproto();
  friend void protobuf_AssignDesc_realtime_2dbidding_2eproto();
  friend void protobuf_ShutdownFile_realtime_2dbidding_2eproto();

  void InitAsDefaultInstance();
  static BidRequest_HyperlocalSet* default_instance_;
};
// -------------------------------------------------------------------

class BidRequest_UserList : public ::google::protobuf::Message {
 public:
  BidRequest_UserList();
  virtual ~BidRequest_UserList();

  BidRequest_UserList(const BidRequest_UserList& from);

  inline BidRequest_UserList& operator=(const BidRequest_UserList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BidRequest_UserList& default_instance();

  void Swap(BidRequest_UserList* other);

  // implements Message ----------------------------------------------

  inline BidRequest_UserList* New() const { return New(NULL); }

  BidRequest_UserList* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BidRequest_UserList& from);
  void MergeFrom(const BidRequest_UserList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BidRequest_UserList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int64 id() const;
  void set_id(::google::protobuf::int64 value);

  // optional int32 age_seconds = 2;
  bool has_age_seconds() const;
  void clear_age_seconds();
  static const int kAgeSecondsFieldNumber = 2;
  ::google::protobuf::int32 age_seconds() const;
  void set_age_seconds(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:BidRequest.UserList)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_age_seconds();
  inline void clear_has_age_seconds();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 id_;
  ::google::protobuf::int32 age_seconds_;
  friend void  protobuf_AddDesc_realtime_2dbidding_2eproto();
  friend void protobuf_AssignDesc_realtime_2dbidding_2eproto();
  friend void protobuf_ShutdownFile_realtime_2dbidding_2eproto();

  void InitAsDefaultInstance();
  static BidRequest_UserList* default_instance_;
};
// -------------------------------------------------------------------

class BidRequest_Vertical : public ::google::protobuf::Message {
 public:
  BidRequest_Vertical();
  virtual ~BidRequest_Vertical();

  BidRequest_Vertical(const BidRequest_Vertical& from);

  inline BidRequest_Vertical& operator=(const BidRequest_Vertical& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BidRequest_Vertical& default_instance();

  void Swap(BidRequest_Vertical* other);

  // implements Message ----------------------------------------------

  inline BidRequest_Vertical* New() const { return New(NULL); }

  BidRequest_Vertical* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BidRequest_Vertical& from);
  void MergeFrom(const BidRequest_Vertical& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BidRequest_Vertical* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // required float weight = 2;
  bool has_weight() const;
  void clear_weight();
  static const int kWeightFieldNumber = 2;
  float weight() const;
  void set_weight(float value);

  // @@protoc_insertion_point(class_scope:BidRequest.Vertical)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_weight();
  inline void clear_has_weight();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 id_;
  float weight_;
  friend void  protobuf_AddDesc_realtime_2dbidding_2eproto();
  friend void protobuf_AssignDesc_realtime_2dbidding_2eproto();
  friend void protobuf_ShutdownFile_realtime_2dbidding_2eproto();

  void InitAsDefaultInstance();
  static BidRequest_Vertical* default_instance_;
};
// -------------------------------------------------------------------

class BidRequest_KeyValue : public ::google::protobuf::Message {
 public:
  BidRequest_KeyValue();
  virtual ~BidRequest_KeyValue();

  BidRequest_KeyValue(const BidRequest_KeyValue& from);

  inline BidRequest_KeyValue& operator=(const BidRequest_KeyValue& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BidRequest_KeyValue& default_instance();

  void Swap(BidRequest_KeyValue* other);

  // implements Message ----------------------------------------------

  inline BidRequest_KeyValue* New() const { return New(NULL); }

  BidRequest_KeyValue* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BidRequest_KeyValue& from);
  void MergeFrom(const BidRequest_KeyValue& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BidRequest_KeyValue* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string key = 1;
  bool has_key() const;
  void clear_key();
  static const int kKeyFieldNumber = 1;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  void set_key(const char* value);
  void set_key(const char* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // optional string value = 2;
  bool has_value() const;
  void clear_value();
  static const int kValueFieldNumber = 2;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  void set_value(const char* value);
  void set_value(const char* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // @@protoc_insertion_point(class_scope:BidRequest.KeyValue)
 private:
  inline void set_has_key();
  inline void clear_has_key();
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  friend void  protobuf_AddDesc_realtime_2dbidding_2eproto();
  friend void protobuf_AssignDesc_realtime_2dbidding_2eproto();
  friend void protobuf_ShutdownFile_realtime_2dbidding_2eproto();

  void InitAsDefaultInstance();
  static BidRequest_KeyValue* default_instance_;
};
// -------------------------------------------------------------------

class BidRequest_Mobile_DeviceOsVersion : public ::google::protobuf::Message {
 public:
  BidRequest_Mobile_DeviceOsVersion();
  virtual ~BidRequest_Mobile_DeviceOsVersion();

  BidRequest_Mobile_DeviceOsVersion(const BidRequest_Mobile_DeviceOsVersion& from);

  inline BidRequest_Mobile_DeviceOsVersion& operator=(const BidRequest_Mobile_DeviceOsVersion& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BidRequest_Mobile_DeviceOsVersion& default_instance();

  void Swap(BidRequest_Mobile_DeviceOsVersion* other);

  // implements Message ----------------------------------------------

  inline BidRequest_Mobile_DeviceOsVersion* New() const { return New(NULL); }

  BidRequest_Mobile_DeviceOsVersion* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BidRequest_Mobile_DeviceOsVersion& from);
  void MergeFrom(const BidRequest_Mobile_DeviceOsVersion& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BidRequest_Mobile_DeviceOsVersion* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 os_version_major = 1;
  bool has_os_version_major() const;
  void clear_os_version_major();
  static const int kOsVersionMajorFieldNumber = 1;
  ::google::protobuf::int32 os_version_major() const;
  void set_os_version_major(::google::protobuf::int32 value);

  // optional int32 os_version_minor = 2;
  bool has_os_version_minor() const;
  void clear_os_version_minor();
  static const int kOsVersionMinorFieldNumber = 2;
  ::google::protobuf::int32 os_version_minor() const;
  void set_os_version_minor(::google::protobuf::int32 value);

  // optional int32 os_version_micro = 3;
  bool has_os_version_micro() const;
  void clear_os_version_micro();
  static const int kOsVersionMicroFieldNumber = 3;
  ::google::protobuf::int32 os_version_micro() const;
  void set_os_version_micro(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:BidRequest.Mobile.DeviceOsVersion)
 private:
  inline void set_has_os_version_major();
  inline void clear_has_os_version_major();
  inline void set_has_os_version_minor();
  inline void clear_has_os_version_minor();
  inline void set_has_os_version_micro();
  inline void clear_has_os_version_micro();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 os_version_major_;
  ::google::protobuf::int32 os_version_minor_;
  ::google::protobuf::int32 os_version_micro_;
  friend void  protobuf_AddDesc_realtime_2dbidding_2eproto();
  friend void protobuf_AssignDesc_realtime_2dbidding_2eproto();
  friend void protobuf_ShutdownFile_realtime_2dbidding_2eproto();

  void InitAsDefaultInstance();
  static BidRequest_Mobile_DeviceOsVersion* default_instance_;
};
// -------------------------------------------------------------------

class BidRequest_Mobile : public ::google::protobuf::Message {
 public:
  BidRequest_Mobile();
  virtual ~BidRequest_Mobile();

  BidRequest_Mobile(const BidRequest_Mobile& from);

  inline BidRequest_Mobile& operator=(const BidRequest_Mobile& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BidRequest_Mobile& default_instance();

  void Swap(BidRequest_Mobile* other);

  // implements Message ----------------------------------------------

  inline BidRequest_Mobile* New() const { return New(NULL); }

  BidRequest_Mobile* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BidRequest_Mobile& from);
  void MergeFrom(const BidRequest_Mobile& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BidRequest_Mobile* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef BidRequest_Mobile_DeviceOsVersion DeviceOsVersion;

  typedef BidRequest_Mobile_MobileDeviceType MobileDeviceType;
  static const MobileDeviceType UNKNOWN = BidRequest_Mobile_MobileDeviceType_UNKNOWN;
  static const MobileDeviceType HIGHEND_PHONE = BidRequest_Mobile_MobileDeviceType_HIGHEND_PHONE;
  static const MobileDeviceType TABLET = BidRequest_Mobile_MobileDeviceType_TABLET;
  static inline bool MobileDeviceType_IsValid(int value) {
    return BidRequest_Mobile_MobileDeviceType_IsValid(value);
  }
  static const MobileDeviceType MobileDeviceType_MIN =
    BidRequest_Mobile_MobileDeviceType_MobileDeviceType_MIN;
  static const MobileDeviceType MobileDeviceType_MAX =
    BidRequest_Mobile_MobileDeviceType_MobileDeviceType_MAX;
  static const int MobileDeviceType_ARRAYSIZE =
    BidRequest_Mobile_MobileDeviceType_MobileDeviceType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MobileDeviceType_descriptor() {
    return BidRequest_Mobile_MobileDeviceType_descriptor();
  }
  static inline const ::std::string& MobileDeviceType_Name(MobileDeviceType value) {
    return BidRequest_Mobile_MobileDeviceType_Name(value);
  }
  static inline bool MobileDeviceType_Parse(const ::std::string& name,
      MobileDeviceType* value) {
    return BidRequest_Mobile_MobileDeviceType_Parse(name, value);
  }

  typedef BidRequest_Mobile_ScreenOrientation ScreenOrientation;
  static const ScreenOrientation SCREEN_ORIENTATION_UNKNOWN = BidRequest_Mobile_ScreenOrientation_SCREEN_ORIENTATION_UNKNOWN;
  static const ScreenOrientation SCREEN_ORIENTATION_PORTRAIT = BidRequest_Mobile_ScreenOrientation_SCREEN_ORIENTATION_PORTRAIT;
  static const ScreenOrientation SCREEN_ORIENTATION_LANDSCAPE = BidRequest_Mobile_ScreenOrientation_SCREEN_ORIENTATION_LANDSCAPE;
  static inline bool ScreenOrientation_IsValid(int value) {
    return BidRequest_Mobile_ScreenOrientation_IsValid(value);
  }
  static const ScreenOrientation ScreenOrientation_MIN =
    BidRequest_Mobile_ScreenOrientation_ScreenOrientation_MIN;
  static const ScreenOrientation ScreenOrientation_MAX =
    BidRequest_Mobile_ScreenOrientation_ScreenOrientation_MAX;
  static const int ScreenOrientation_ARRAYSIZE =
    BidRequest_Mobile_ScreenOrientation_ScreenOrientation_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  ScreenOrientation_descriptor() {
    return BidRequest_Mobile_ScreenOrientation_descriptor();
  }
  static inline const ::std::string& ScreenOrientation_Name(ScreenOrientation value) {
    return BidRequest_Mobile_ScreenOrientation_Name(value);
  }
  static inline bool ScreenOrientation_Parse(const ::std::string& name,
      ScreenOrientation* value) {
    return BidRequest_Mobile_ScreenOrientation_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional string platform = 3;
  bool has_platform() const;
  void clear_platform();
  static const int kPlatformFieldNumber = 3;
  const ::std::string& platform() const;
  void set_platform(const ::std::string& value);
  void set_platform(const char* value);
  void set_platform(const char* value, size_t size);
  ::std::string* mutable_platform();
  ::std::string* release_platform();
  void set_allocated_platform(::std::string* platform);

  // optional string brand = 12;
  bool has_brand() const;
  void clear_brand();
  static const int kBrandFieldNumber = 12;
  const ::std::string& brand() const;
  void set_brand(const ::std::string& value);
  void set_brand(const char* value);
  void set_brand(const char* value, size_t size);
  ::std::string* mutable_brand();
  ::std::string* release_brand();
  void set_allocated_brand(::std::string* brand);

  // optional string model = 13;
  bool has_model() const;
  void clear_model();
  static const int kModelFieldNumber = 13;
  const ::std::string& model() const;
  void set_model(const ::std::string& value);
  void set_model(const char* value);
  void set_model(const char* value, size_t size);
  ::std::string* mutable_model();
  ::std::string* release_model();
  void set_allocated_model(::std::string* model);

  // optional .BidRequest.Mobile.DeviceOsVersion os_version = 14;
  bool has_os_version() const;
  void clear_os_version();
  static const int kOsVersionFieldNumber = 14;
  const ::BidRequest_Mobile_DeviceOsVersion& os_version() const;
  ::BidRequest_Mobile_DeviceOsVersion* mutable_os_version();
  ::BidRequest_Mobile_DeviceOsVersion* release_os_version();
  void set_allocated_os_version(::BidRequest_Mobile_DeviceOsVersion* os_version);

  // optional int64 carrier_id = 18;
  bool has_carrier_id() const;
  void clear_carrier_id();
  static const int kCarrierIdFieldNumber = 18;
  ::google::protobuf::int64 carrier_id() const;
  void set_carrier_id(::google::protobuf::int64 value);

  // optional bool is_app = 7 [default = false];
  bool has_is_app() const;
  void clear_is_app();
  static const int kIsAppFieldNumber = 7;
  bool is_app() const;
  void set_is_app(bool value);

  // optional string app_id = 6;
  bool has_app_id() const;
  void clear_app_id();
  static const int kAppIdFieldNumber = 6;
  const ::std::string& app_id() const;
  void set_app_id(const ::std::string& value);
  void set_app_id(const char* value);
  void set_app_id(const char* value, size_t size);
  ::std::string* mutable_app_id();
  ::std::string* release_app_id();
  void set_allocated_app_id(::std::string* app_id);

  // optional .BidRequest.Mobile.MobileDeviceType mobile_device_type = 8 [default = UNKNOWN];
  bool has_mobile_device_type() const;
  void clear_mobile_device_type();
  static const int kMobileDeviceTypeFieldNumber = 8;
  ::BidRequest_Mobile_MobileDeviceType mobile_device_type() const;
  void set_mobile_device_type(::BidRequest_Mobile_MobileDeviceType value);

  // optional int32 screen_width = 15;
  bool has_screen_width() const;
  void clear_screen_width();
  static const int kScreenWidthFieldNumber = 15;
  ::google::protobuf::int32 screen_width() const;
  void set_screen_width(::google::protobuf::int32 value);

  // optional int32 screen_height = 16;
  bool has_screen_height() const;
  void clear_screen_height();
  static const int kScreenHeightFieldNumber = 16;
  ::google::protobuf::int32 screen_height() const;
  void set_screen_height(::google::protobuf::int32 value);

  // optional int32 screen_orientation = 9 [default = 0];
  bool has_screen_orientation() const;
  void clear_screen_orientation();
  static const int kScreenOrientationFieldNumber = 9;
  ::google::protobuf::int32 screen_orientation() const;
  void set_screen_orientation(::google::protobuf::int32 value);

  // optional bool is_interstitial_request = 10 [default = false];
  bool has_is_interstitial_request() const;
  void clear_is_interstitial_request();
  static const int kIsInterstitialRequestFieldNumber = 10;
  bool is_interstitial_request() const;
  void set_is_interstitial_request(bool value);

  // repeated int32 app_category_ids = 11;
  int app_category_ids_size() const;
  void clear_app_category_ids();
  static const int kAppCategoryIdsFieldNumber = 11;
  ::google::protobuf::int32 app_category_ids(int index) const;
  void set_app_category_ids(int index, ::google::protobuf::int32 value);
  void add_app_category_ids(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      app_category_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_app_category_ids();

  // optional bool is_mobile_web_optimized = 17 [default = false];
  bool has_is_mobile_web_optimized() const;
  void clear_is_mobile_web_optimized();
  static const int kIsMobileWebOptimizedFieldNumber = 17;
  bool is_mobile_web_optimized() const;
  void set_is_mobile_web_optimized(bool value);

  // optional int32 device_pixel_ratio_millis = 19 [default = 1000];
  bool has_device_pixel_ratio_millis() const;
  void clear_device_pixel_ratio_millis();
  static const int kDevicePixelRatioMillisFieldNumber = 19;
  ::google::protobuf::int32 device_pixel_ratio_millis() const;
  void set_device_pixel_ratio_millis(::google::protobuf::int32 value);

  // optional bytes encrypted_advertising_id = 20;
  bool has_encrypted_advertising_id() const;
  void clear_encrypted_advertising_id();
  static const int kEncryptedAdvertisingIdFieldNumber = 20;
  const ::std::string& encrypted_advertising_id() const;
  void set_encrypted_advertising_id(const ::std::string& value);
  void set_encrypted_advertising_id(const char* value);
  void set_encrypted_advertising_id(const void* value, size_t size);
  ::std::string* mutable_encrypted_advertising_id();
  ::std::string* release_encrypted_advertising_id();
  void set_allocated_encrypted_advertising_id(::std::string* encrypted_advertising_id);

  // optional bytes encrypted_hashed_idfa = 21;
  bool has_encrypted_hashed_idfa() const;
  void clear_encrypted_hashed_idfa();
  static const int kEncryptedHashedIdfaFieldNumber = 21;
  const ::std::string& encrypted_hashed_idfa() const;
  void set_encrypted_hashed_idfa(const ::std::string& value);
  void set_encrypted_hashed_idfa(const char* value);
  void set_encrypted_hashed_idfa(const void* value, size_t size);
  ::std::string* mutable_encrypted_hashed_idfa();
  ::std::string* release_encrypted_hashed_idfa();
  void set_allocated_encrypted_hashed_idfa(::std::string* encrypted_hashed_idfa);

  // optional string DEPRECATED_app_name = 1;
  bool has_deprecated_app_name() const;
  void clear_deprecated_app_name();
  static const int kDEPRECATEDAppNameFieldNumber = 1;
  const ::std::string& deprecated_app_name() const;
  void set_deprecated_app_name(const ::std::string& value);
  void set_deprecated_app_name(const char* value);
  void set_deprecated_app_name(const char* value, size_t size);
  ::std::string* mutable_deprecated_app_name();
  ::std::string* release_deprecated_app_name();
  void set_allocated_deprecated_app_name(::std::string* deprecated_app_name);

  // optional string DEPRECATED_company_name = 2;
  bool has_deprecated_company_name() const;
  void clear_deprecated_company_name();
  static const int kDEPRECATEDCompanyNameFieldNumber = 2;
  const ::std::string& deprecated_company_name() const;
  void set_deprecated_company_name(const ::std::string& value);
  void set_deprecated_company_name(const char* value);
  void set_deprecated_company_name(const char* value, size_t size);
  ::std::string* mutable_deprecated_company_name();
  ::std::string* release_deprecated_company_name();
  void set_allocated_deprecated_company_name(::std::string* deprecated_company_name);

  // optional string DEPRECATED_carrier_name = 4;
  bool has_deprecated_carrier_name() const;
  void clear_deprecated_carrier_name();
  static const int kDEPRECATEDCarrierNameFieldNumber = 4;
  const ::std::string& deprecated_carrier_name() const;
  void set_deprecated_carrier_name(const ::std::string& value);
  void set_deprecated_carrier_name(const char* value);
  void set_deprecated_carrier_name(const char* value, size_t size);
  ::std::string* mutable_deprecated_carrier_name();
  ::std::string* release_deprecated_carrier_name();
  void set_allocated_deprecated_carrier_name(::std::string* deprecated_carrier_name);

  // optional string DEPRECATED_carrier_country = 5;
  bool has_deprecated_carrier_country() const;
  void clear_deprecated_carrier_country();
  static const int kDEPRECATEDCarrierCountryFieldNumber = 5;
  const ::std::string& deprecated_carrier_country() const;
  void set_deprecated_carrier_country(const ::std::string& value);
  void set_deprecated_carrier_country(const char* value);
  void set_deprecated_carrier_country(const char* value, size_t size);
  ::std::string* mutable_deprecated_carrier_country();
  ::std::string* release_deprecated_carrier_country();
  void set_allocated_deprecated_carrier_country(::std::string* deprecated_carrier_country);

  // @@protoc_insertion_point(class_scope:BidRequest.Mobile)
 private:
  inline void set_has_platform();
  inline void clear_has_platform();
  inline void set_has_brand();
  inline void clear_has_brand();
  inline void set_has_model();
  inline void clear_has_model();
  inline void set_has_os_version();
  inline void clear_has_os_version();
  inline void set_has_carrier_id();
  inline void clear_has_carrier_id();
  inline void set_has_is_app();
  inline void clear_has_is_app();
  inline void set_has_app_id();
  inline void clear_has_app_id();
  inline void set_has_mobile_device_type();
  inline void clear_has_mobile_device_type();
  inline void set_has_screen_width();
  inline void clear_has_screen_width();
  inline void set_has_screen_height();
  inline void clear_has_screen_height();
  inline void set_has_screen_orientation();
  inline void clear_has_screen_orientation();
  inline void set_has_is_interstitial_request();
  inline void clear_has_is_interstitial_request();
  inline void set_has_is_mobile_web_optimized();
  inline void clear_has_is_mobile_web_optimized();
  inline void set_has_device_pixel_ratio_millis();
  inline void clear_has_device_pixel_ratio_millis();
  inline void set_has_encrypted_advertising_id();
  inline void clear_has_encrypted_advertising_id();
  inline void set_has_encrypted_hashed_idfa();
  inline void clear_has_encrypted_hashed_idfa();
  inline void set_has_deprecated_app_name();
  inline void clear_has_deprecated_app_name();
  inline void set_has_deprecated_company_name();
  inline void clear_has_deprecated_company_name();
  inline void set_has_deprecated_carrier_name();
  inline void clear_has_deprecated_carrier_name();
  inline void set_has_deprecated_carrier_country();
  inline void clear_has_deprecated_carrier_country();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr platform_;
  ::google::protobuf::internal::ArenaStringPtr brand_;
  ::google::protobuf::internal::ArenaStringPtr model_;
  ::BidRequest_Mobile_DeviceOsVersion* os_version_;
  ::google::protobuf::int64 carrier_id_;
  ::google::protobuf::internal::ArenaStringPtr app_id_;
  int mobile_device_type_;
  ::google::protobuf::int32 screen_width_;
  ::google::protobuf::int32 screen_height_;
  bool is_app_;
  bool is_interstitial_request_;
  bool is_mobile_web_optimized_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > app_category_ids_;
  ::google::protobuf::int32 screen_orientation_;
  ::google::protobuf::int32 device_pixel_ratio_millis_;
  ::google::protobuf::internal::ArenaStringPtr encrypted_advertising_id_;
  ::google::protobuf::internal::ArenaStringPtr encrypted_hashed_idfa_;
  ::google::protobuf::internal::ArenaStringPtr deprecated_app_name_;
  ::google::protobuf::internal::ArenaStringPtr deprecated_company_name_;
  ::google::protobuf::internal::ArenaStringPtr deprecated_carrier_name_;
  ::google::protobuf::internal::ArenaStringPtr deprecated_carrier_country_;
  friend void  protobuf_AddDesc_realtime_2dbidding_2eproto();
  friend void protobuf_AssignDesc_realtime_2dbidding_2eproto();
  friend void protobuf_ShutdownFile_realtime_2dbidding_2eproto();

  void InitAsDefaultInstance();
  static BidRequest_Mobile* default_instance_;
};
// -------------------------------------------------------------------

class BidRequest_Video_CompanionSlot : public ::google::protobuf::Message {
 public:
  BidRequest_Video_CompanionSlot();
  virtual ~BidRequest_Video_CompanionSlot();

  BidRequest_Video_CompanionSlot(const BidRequest_Video_CompanionSlot& from);

  inline BidRequest_Video_CompanionSlot& operator=(const BidRequest_Video_CompanionSlot& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BidRequest_Video_CompanionSlot& default_instance();

  void Swap(BidRequest_Video_CompanionSlot* other);

  // implements Message ----------------------------------------------

  inline BidRequest_Video_CompanionSlot* New() const { return New(NULL); }

  BidRequest_Video_CompanionSlot* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BidRequest_Video_CompanionSlot& from);
  void MergeFrom(const BidRequest_Video_CompanionSlot& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BidRequest_Video_CompanionSlot* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef BidRequest_Video_CompanionSlot_CreativeFormat CreativeFormat;
  static const CreativeFormat IMAGE_CREATIVE = BidRequest_Video_CompanionSlot_CreativeFormat_IMAGE_CREATIVE;
  static const CreativeFormat FLASH_CREATIVE = BidRequest_Video_CompanionSlot_CreativeFormat_FLASH_CREATIVE;
  static const CreativeFormat HTML_CREATIVE = BidRequest_Video_CompanionSlot_CreativeFormat_HTML_CREATIVE;
  static inline bool CreativeFormat_IsValid(int value) {
    return BidRequest_Video_CompanionSlot_CreativeFormat_IsValid(value);
  }
  static const CreativeFormat CreativeFormat_MIN =
    BidRequest_Video_CompanionSlot_CreativeFormat_CreativeFormat_MIN;
  static const CreativeFormat CreativeFormat_MAX =
    BidRequest_Video_CompanionSlot_CreativeFormat_CreativeFormat_MAX;
  static const int CreativeFormat_ARRAYSIZE =
    BidRequest_Video_CompanionSlot_CreativeFormat_CreativeFormat_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CreativeFormat_descriptor() {
    return BidRequest_Video_CompanionSlot_CreativeFormat_descriptor();
  }
  static inline const ::std::string& CreativeFormat_Name(CreativeFormat value) {
    return BidRequest_Video_CompanionSlot_CreativeFormat_Name(value);
  }
  static inline bool CreativeFormat_Parse(const ::std::string& name,
      CreativeFormat* value) {
    return BidRequest_Video_CompanionSlot_CreativeFormat_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated int32 height = 1 [packed = true];
  int height_size() const;
  void clear_height();
  static const int kHeightFieldNumber = 1;
  ::google::protobuf::int32 height(int index) const;
  void set_height(int index, ::google::protobuf::int32 value);
  void add_height(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      height() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_height();

  // repeated int32 width = 2 [packed = true];
  int width_size() const;
  void clear_width();
  static const int kWidthFieldNumber = 2;
  ::google::protobuf::int32 width(int index) const;
  void set_width(int index, ::google::protobuf::int32 value);
  void add_width(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      width() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_width();

  // repeated .BidRequest.Video.CompanionSlot.CreativeFormat creative_format = 3;
  int creative_format_size() const;
  void clear_creative_format();
  static const int kCreativeFormatFieldNumber = 3;
  ::BidRequest_Video_CompanionSlot_CreativeFormat creative_format(int index) const;
  void set_creative_format(int index, ::BidRequest_Video_CompanionSlot_CreativeFormat value);
  void add_creative_format(::BidRequest_Video_CompanionSlot_CreativeFormat value);
  const ::google::protobuf::RepeatedField<int>& creative_format() const;
  ::google::protobuf::RepeatedField<int>* mutable_creative_format();

  // @@protoc_insertion_point(class_scope:BidRequest.Video.CompanionSlot)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > height_;
  mutable int _height_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > width_;
  mutable int _width_cached_byte_size_;
  ::google::protobuf::RepeatedField<int> creative_format_;
  friend void  protobuf_AddDesc_realtime_2dbidding_2eproto();
  friend void protobuf_AssignDesc_realtime_2dbidding_2eproto();
  friend void protobuf_ShutdownFile_realtime_2dbidding_2eproto();

  void InitAsDefaultInstance();
  static BidRequest_Video_CompanionSlot* default_instance_;
};
// -------------------------------------------------------------------

class BidRequest_Video : public ::google::protobuf::Message {
 public:
  BidRequest_Video();
  virtual ~BidRequest_Video();

  BidRequest_Video(const BidRequest_Video& from);

  inline BidRequest_Video& operator=(const BidRequest_Video& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BidRequest_Video& default_instance();

  void Swap(BidRequest_Video* other);

  // implements Message ----------------------------------------------

  inline BidRequest_Video* New() const { return New(NULL); }

  BidRequest_Video* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BidRequest_Video& from);
  void MergeFrom(const BidRequest_Video& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BidRequest_Video* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef BidRequest_Video_CompanionSlot CompanionSlot;

  typedef BidRequest_Video_InventoryType InventoryType;
  static const InventoryType WEB_VIDEO = BidRequest_Video_InventoryType_WEB_VIDEO;
  static const InventoryType GAMES = BidRequest_Video_InventoryType_GAMES;
  static const InventoryType MOBILE_INTERSTITIAL = BidRequest_Video_InventoryType_MOBILE_INTERSTITIAL;
  static inline bool InventoryType_IsValid(int value) {
    return BidRequest_Video_InventoryType_IsValid(value);
  }
  static const InventoryType InventoryType_MIN =
    BidRequest_Video_InventoryType_InventoryType_MIN;
  static const InventoryType InventoryType_MAX =
    BidRequest_Video_InventoryType_InventoryType_MAX;
  static const int InventoryType_ARRAYSIZE =
    BidRequest_Video_InventoryType_InventoryType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  InventoryType_descriptor() {
    return BidRequest_Video_InventoryType_descriptor();
  }
  static inline const ::std::string& InventoryType_Name(InventoryType value) {
    return BidRequest_Video_InventoryType_Name(value);
  }
  static inline bool InventoryType_Parse(const ::std::string& name,
      InventoryType* value) {
    return BidRequest_Video_InventoryType_Parse(name, value);
  }

  typedef BidRequest_Video_SkippableBidRequestType SkippableBidRequestType;
  static const SkippableBidRequestType ALLOW_SKIPPABLE = BidRequest_Video_SkippableBidRequestType_ALLOW_SKIPPABLE;
  static const SkippableBidRequestType REQUIRE_SKIPPABLE = BidRequest_Video_SkippableBidRequestType_REQUIRE_SKIPPABLE;
  static const SkippableBidRequestType BLOCK_SKIPPABLE = BidRequest_Video_SkippableBidRequestType_BLOCK_SKIPPABLE;
  static inline bool SkippableBidRequestType_IsValid(int value) {
    return BidRequest_Video_SkippableBidRequestType_IsValid(value);
  }
  static const SkippableBidRequestType SkippableBidRequestType_MIN =
    BidRequest_Video_SkippableBidRequestType_SkippableBidRequestType_MIN;
  static const SkippableBidRequestType SkippableBidRequestType_MAX =
    BidRequest_Video_SkippableBidRequestType_SkippableBidRequestType_MAX;
  static const int SkippableBidRequestType_ARRAYSIZE =
    BidRequest_Video_SkippableBidRequestType_SkippableBidRequestType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  SkippableBidRequestType_descriptor() {
    return BidRequest_Video_SkippableBidRequestType_descriptor();
  }
  static inline const ::std::string& SkippableBidRequestType_Name(SkippableBidRequestType value) {
    return BidRequest_Video_SkippableBidRequestType_Name(value);
  }
  static inline bool SkippableBidRequestType_Parse(const ::std::string& name,
      SkippableBidRequestType* value) {
    return BidRequest_Video_SkippableBidRequestType_Parse(name, value);
  }

  typedef BidRequest_Video_VideoFormat VideoFormat;
  static const VideoFormat VIDEO_FLASH = BidRequest_Video_VideoFormat_VIDEO_FLASH;
  static const VideoFormat VIDEO_HTML5 = BidRequest_Video_VideoFormat_VIDEO_HTML5;
  static inline bool VideoFormat_IsValid(int value) {
    return BidRequest_Video_VideoFormat_IsValid(value);
  }
  static const VideoFormat VideoFormat_MIN =
    BidRequest_Video_VideoFormat_VideoFormat_MIN;
  static const VideoFormat VideoFormat_MAX =
    BidRequest_Video_VideoFormat_VideoFormat_MAX;
  static const int VideoFormat_ARRAYSIZE =
    BidRequest_Video_VideoFormat_VideoFormat_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  VideoFormat_descriptor() {
    return BidRequest_Video_VideoFormat_descriptor();
  }
  static inline const ::std::string& VideoFormat_Name(VideoFormat value) {
    return BidRequest_Video_VideoFormat_Name(value);
  }
  static inline bool VideoFormat_Parse(const ::std::string& name,
      VideoFormat* value) {
    return BidRequest_Video_VideoFormat_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional string description_url = 10;
  bool has_description_url() const;
  void clear_description_url();
  static const int kDescriptionUrlFieldNumber = 10;
  const ::std::string& description_url() const;
  void set_description_url(const ::std::string& value);
  void set_description_url(const char* value);
  void set_description_url(const char* value, size_t size);
  ::std::string* mutable_description_url();
  ::std::string* release_description_url();
  void set_allocated_description_url(::std::string* description_url);

  // optional bool is_embedded_offsite = 11 [default = false];
  bool has_is_embedded_offsite() const;
  void clear_is_embedded_offsite();
  static const int kIsEmbeddedOffsiteFieldNumber = 11;
  bool is_embedded_offsite() const;
  void set_is_embedded_offsite(bool value);

  // optional int32 videoad_start_delay = 1;
  bool has_videoad_start_delay() const;
  void clear_videoad_start_delay();
  static const int kVideoadStartDelayFieldNumber = 1;
  ::google::protobuf::int32 videoad_start_delay() const;
  void set_videoad_start_delay(::google::protobuf::int32 value);

  // optional int32 max_ad_duration = 2;
  bool has_max_ad_duration() const;
  void clear_max_ad_duration();
  static const int kMaxAdDurationFieldNumber = 2;
  ::google::protobuf::int32 max_ad_duration() const;
  void set_max_ad_duration(::google::protobuf::int32 value);

  // optional int32 min_ad_duration = 8;
  bool has_min_ad_duration() const;
  void clear_min_ad_duration();
  static const int kMinAdDurationFieldNumber = 8;
  ::google::protobuf::int32 min_ad_duration() const;
  void set_min_ad_duration(::google::protobuf::int32 value);

  // optional int32 inventory_type = 3 [default = 0];
  bool has_inventory_type() const;
  void clear_inventory_type();
  static const int kInventoryTypeFieldNumber = 3;
  ::google::protobuf::int32 inventory_type() const;
  void set_inventory_type(::google::protobuf::int32 value);

  // optional .BidRequest.Video.SkippableBidRequestType video_ad_skippable = 4 [default = ALLOW_SKIPPABLE];
  bool has_video_ad_skippable() const;
  void clear_video_ad_skippable();
  static const int kVideoAdSkippableFieldNumber = 4;
  ::BidRequest_Video_SkippableBidRequestType video_ad_skippable() const;
  void set_video_ad_skippable(::BidRequest_Video_SkippableBidRequestType value);

  // optional int32 skippable_max_ad_duration = 5;
  bool has_skippable_max_ad_duration() const;
  void clear_skippable_max_ad_duration();
  static const int kSkippableMaxAdDurationFieldNumber = 5;
  ::google::protobuf::int32 skippable_max_ad_duration() const;
  void set_skippable_max_ad_duration(::google::protobuf::int32 value);

  // repeated .BidRequest.Video.VideoFormat allowed_video_formats = 6;
  int allowed_video_formats_size() const;
  void clear_allowed_video_formats();
  static const int kAllowedVideoFormatsFieldNumber = 6;
  ::BidRequest_Video_VideoFormat allowed_video_formats(int index) const;
  void set_allowed_video_formats(int index, ::BidRequest_Video_VideoFormat value);
  void add_allowed_video_formats(::BidRequest_Video_VideoFormat value);
  const ::google::protobuf::RepeatedField<int>& allowed_video_formats() const;
  ::google::protobuf::RepeatedField<int>* mutable_allowed_video_formats();

  // repeated .BidRequest.Video.CompanionSlot companion_slot = 7;
  int companion_slot_size() const;
  void clear_companion_slot();
  static const int kCompanionSlotFieldNumber = 7;
  const ::BidRequest_Video_CompanionSlot& companion_slot(int index) const;
  ::BidRequest_Video_CompanionSlot* mutable_companion_slot(int index);
  ::BidRequest_Video_CompanionSlot* add_companion_slot();
  ::google::protobuf::RepeatedPtrField< ::BidRequest_Video_CompanionSlot >*
      mutable_companion_slot();
  const ::google::protobuf::RepeatedPtrField< ::BidRequest_Video_CompanionSlot >&
      companion_slot() const;

  // @@protoc_insertion_point(class_scope:BidRequest.Video)
 private:
  inline void set_has_description_url();
  inline void clear_has_description_url();
  inline void set_has_is_embedded_offsite();
  inline void clear_has_is_embedded_offsite();
  inline void set_has_videoad_start_delay();
  inline void clear_has_videoad_start_delay();
  inline void set_has_max_ad_duration();
  inline void clear_has_max_ad_duration();
  inline void set_has_min_ad_duration();
  inline void clear_has_min_ad_duration();
  inline void set_has_inventory_type();
  inline void clear_has_inventory_type();
  inline void set_has_video_ad_skippable();
  inline void clear_has_video_ad_skippable();
  inline void set_has_skippable_max_ad_duration();
  inline void clear_has_skippable_max_ad_duration();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr description_url_;
  bool is_embedded_offsite_;
  ::google::protobuf::int32 videoad_start_delay_;
  ::google::protobuf::int32 max_ad_duration_;
  ::google::protobuf::int32 min_ad_duration_;
  ::google::protobuf::int32 inventory_type_;
  int video_ad_skippable_;
  ::google::protobuf::RepeatedField<int> allowed_video_formats_;
  ::google::protobuf::RepeatedPtrField< ::BidRequest_Video_CompanionSlot > companion_slot_;
  ::google::protobuf::int32 skippable_max_ad_duration_;
  friend void  protobuf_AddDesc_realtime_2dbidding_2eproto();
  friend void protobuf_AssignDesc_realtime_2dbidding_2eproto();
  friend void protobuf_ShutdownFile_realtime_2dbidding_2eproto();

  void InitAsDefaultInstance();
  static BidRequest_Video* default_instance_;
};
// -------------------------------------------------------------------

class BidRequest_AdSlot_MatchingAdData_DirectDeal : public ::google::protobuf::Message {
 public:
  BidRequest_AdSlot_MatchingAdData_DirectDeal();
  virtual ~BidRequest_AdSlot_MatchingAdData_DirectDeal();

  BidRequest_AdSlot_MatchingAdData_DirectDeal(const BidRequest_AdSlot_MatchingAdData_DirectDeal& from);

  inline BidRequest_AdSlot_MatchingAdData_DirectDeal& operator=(const BidRequest_AdSlot_MatchingAdData_DirectDeal& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BidRequest_AdSlot_MatchingAdData_DirectDeal& default_instance();

  void Swap(BidRequest_AdSlot_MatchingAdData_DirectDeal* other);

  // implements Message ----------------------------------------------

  inline BidRequest_AdSlot_MatchingAdData_DirectDeal* New() const { return New(NULL); }

  BidRequest_AdSlot_MatchingAdData_DirectDeal* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BidRequest_AdSlot_MatchingAdData_DirectDeal& from);
  void MergeFrom(const BidRequest_AdSlot_MatchingAdData_DirectDeal& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BidRequest_AdSlot_MatchingAdData_DirectDeal* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 direct_deal_id = 1;
  bool has_direct_deal_id() const;
  void clear_direct_deal_id();
  static const int kDirectDealIdFieldNumber = 1;
  ::google::protobuf::int64 direct_deal_id() const;
  void set_direct_deal_id(::google::protobuf::int64 value);

  // optional int64 fixed_cpm_micros = 2;
  bool has_fixed_cpm_micros() const;
  void clear_fixed_cpm_micros();
  static const int kFixedCpmMicrosFieldNumber = 2;
  ::google::protobuf::int64 fixed_cpm_micros() const;
  void set_fixed_cpm_micros(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:BidRequest.AdSlot.MatchingAdData.DirectDeal)
 private:
  inline void set_has_direct_deal_id();
  inline void clear_has_direct_deal_id();
  inline void set_has_fixed_cpm_micros();
  inline void clear_has_fixed_cpm_micros();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 direct_deal_id_;
  ::google::protobuf::int64 fixed_cpm_micros_;
  friend void  protobuf_AddDesc_realtime_2dbidding_2eproto();
  friend void protobuf_AssignDesc_realtime_2dbidding_2eproto();
  friend void protobuf_ShutdownFile_realtime_2dbidding_2eproto();

  void InitAsDefaultInstance();
  static BidRequest_AdSlot_MatchingAdData_DirectDeal* default_instance_;
};
// -------------------------------------------------------------------

class BidRequest_AdSlot_MatchingAdData : public ::google::protobuf::Message {
 public:
  BidRequest_AdSlot_MatchingAdData();
  virtual ~BidRequest_AdSlot_MatchingAdData();

  BidRequest_AdSlot_MatchingAdData(const BidRequest_AdSlot_MatchingAdData& from);

  inline BidRequest_AdSlot_MatchingAdData& operator=(const BidRequest_AdSlot_MatchingAdData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BidRequest_AdSlot_MatchingAdData& default_instance();

  void Swap(BidRequest_AdSlot_MatchingAdData* other);

  // implements Message ----------------------------------------------

  inline BidRequest_AdSlot_MatchingAdData* New() const { return New(NULL); }

  BidRequest_AdSlot_MatchingAdData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BidRequest_AdSlot_MatchingAdData& from);
  void MergeFrom(const BidRequest_AdSlot_MatchingAdData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BidRequest_AdSlot_MatchingAdData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef BidRequest_AdSlot_MatchingAdData_DirectDeal DirectDeal;

  // accessors -------------------------------------------------------

  // optional int64 adgroup_id = 2;
  bool has_adgroup_id() const;
  void clear_adgroup_id();
  static const int kAdgroupIdFieldNumber = 2;
  ::google::protobuf::int64 adgroup_id() const;
  void set_adgroup_id(::google::protobuf::int64 value);

  // optional int64 minimum_cpm_micros = 5;
  bool has_minimum_cpm_micros() const;
  void clear_minimum_cpm_micros();
  static const int kMinimumCpmMicrosFieldNumber = 5;
  ::google::protobuf::int64 minimum_cpm_micros() const;
  void set_minimum_cpm_micros(::google::protobuf::int64 value);

  // repeated .BidRequest.AdSlot.MatchingAdData.DirectDeal direct_deal = 6;
  int direct_deal_size() const;
  void clear_direct_deal();
  static const int kDirectDealFieldNumber = 6;
  const ::BidRequest_AdSlot_MatchingAdData_DirectDeal& direct_deal(int index) const;
  ::BidRequest_AdSlot_MatchingAdData_DirectDeal* mutable_direct_deal(int index);
  ::BidRequest_AdSlot_MatchingAdData_DirectDeal* add_direct_deal();
  ::google::protobuf::RepeatedPtrField< ::BidRequest_AdSlot_MatchingAdData_DirectDeal >*
      mutable_direct_deal();
  const ::google::protobuf::RepeatedPtrField< ::BidRequest_AdSlot_MatchingAdData_DirectDeal >&
      direct_deal() const;

  // optional int64 DEPRECATED_campaign_id = 1;
  bool has_deprecated_campaign_id() const;
  void clear_deprecated_campaign_id();
  static const int kDEPRECATEDCampaignIdFieldNumber = 1;
  ::google::protobuf::int64 deprecated_campaign_id() const;
  void set_deprecated_campaign_id(::google::protobuf::int64 value);

  // optional bool DEPRECATED_per_buyer_minimum_cpm = 3;
  bool has_deprecated_per_buyer_minimum_cpm() const;
  void clear_deprecated_per_buyer_minimum_cpm();
  static const int kDEPRECATEDPerBuyerMinimumCpmFieldNumber = 3;
  bool deprecated_per_buyer_minimum_cpm() const;
  void set_deprecated_per_buyer_minimum_cpm(bool value);

  // optional int64 DEPRECATED_fixed_cpm_micros = 4;
  bool has_deprecated_fixed_cpm_micros() const;
  void clear_deprecated_fixed_cpm_micros();
  static const int kDEPRECATEDFixedCpmMicrosFieldNumber = 4;
  ::google::protobuf::int64 deprecated_fixed_cpm_micros() const;
  void set_deprecated_fixed_cpm_micros(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:BidRequest.AdSlot.MatchingAdData)
 private:
  inline void set_has_adgroup_id();
  inline void clear_has_adgroup_id();
  inline void set_has_minimum_cpm_micros();
  inline void clear_has_minimum_cpm_micros();
  inline void set_has_deprecated_campaign_id();
  inline void clear_has_deprecated_campaign_id();
  inline void set_has_deprecated_per_buyer_minimum_cpm();
  inline void clear_has_deprecated_per_buyer_minimum_cpm();
  inline void set_has_deprecated_fixed_cpm_micros();
  inline void clear_has_deprecated_fixed_cpm_micros();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 adgroup_id_;
  ::google::protobuf::int64 minimum_cpm_micros_;
  ::google::protobuf::RepeatedPtrField< ::BidRequest_AdSlot_MatchingAdData_DirectDeal > direct_deal_;
  ::google::protobuf::int64 deprecated_campaign_id_;
  ::google::protobuf::int64 deprecated_fixed_cpm_micros_;
  bool deprecated_per_buyer_minimum_cpm_;
  friend void  protobuf_AddDesc_realtime_2dbidding_2eproto();
  friend void protobuf_AssignDesc_realtime_2dbidding_2eproto();
  friend void protobuf_ShutdownFile_realtime_2dbidding_2eproto();

  void InitAsDefaultInstance();
  static BidRequest_AdSlot_MatchingAdData* default_instance_;
};
// -------------------------------------------------------------------

class BidRequest_AdSlot : public ::google::protobuf::Message {
 public:
  BidRequest_AdSlot();
  virtual ~BidRequest_AdSlot();

  BidRequest_AdSlot(const BidRequest_AdSlot& from);

  inline BidRequest_AdSlot& operator=(const BidRequest_AdSlot& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BidRequest_AdSlot& default_instance();

  void Swap(BidRequest_AdSlot* other);

  // implements Message ----------------------------------------------

  inline BidRequest_AdSlot* New() const { return New(NULL); }

  BidRequest_AdSlot* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BidRequest_AdSlot& from);
  void MergeFrom(const BidRequest_AdSlot& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BidRequest_AdSlot* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef BidRequest_AdSlot_MatchingAdData MatchingAdData;

  typedef BidRequest_AdSlot_SlotVisibility SlotVisibility;
  static const SlotVisibility NO_DETECTION = BidRequest_AdSlot_SlotVisibility_NO_DETECTION;
  static const SlotVisibility ABOVE_THE_FOLD = BidRequest_AdSlot_SlotVisibility_ABOVE_THE_FOLD;
  static const SlotVisibility BELOW_THE_FOLD = BidRequest_AdSlot_SlotVisibility_BELOW_THE_FOLD;
  static inline bool SlotVisibility_IsValid(int value) {
    return BidRequest_AdSlot_SlotVisibility_IsValid(value);
  }
  static const SlotVisibility SlotVisibility_MIN =
    BidRequest_AdSlot_SlotVisibility_SlotVisibility_MIN;
  static const SlotVisibility SlotVisibility_MAX =
    BidRequest_AdSlot_SlotVisibility_SlotVisibility_MAX;
  static const int SlotVisibility_ARRAYSIZE =
    BidRequest_AdSlot_SlotVisibility_SlotVisibility_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  SlotVisibility_descriptor() {
    return BidRequest_AdSlot_SlotVisibility_descriptor();
  }
  static inline const ::std::string& SlotVisibility_Name(SlotVisibility value) {
    return BidRequest_AdSlot_SlotVisibility_Name(value);
  }
  static inline bool SlotVisibility_Parse(const ::std::string& name,
      SlotVisibility* value) {
    return BidRequest_AdSlot_SlotVisibility_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required int32 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // optional uint64 ad_block_key = 14;
  bool has_ad_block_key() const;
  void clear_ad_block_key();
  static const int kAdBlockKeyFieldNumber = 14;
  ::google::protobuf::uint64 ad_block_key() const;
  void set_ad_block_key(::google::protobuf::uint64 value);

  // repeated string targetable_channel = 10;
  int targetable_channel_size() const;
  void clear_targetable_channel();
  static const int kTargetableChannelFieldNumber = 10;
  const ::std::string& targetable_channel(int index) const;
  ::std::string* mutable_targetable_channel(int index);
  void set_targetable_channel(int index, const ::std::string& value);
  void set_targetable_channel(int index, const char* value);
  void set_targetable_channel(int index, const char* value, size_t size);
  ::std::string* add_targetable_channel();
  void add_targetable_channel(const ::std::string& value);
  void add_targetable_channel(const char* value);
  void add_targetable_channel(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& targetable_channel() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_targetable_channel();

  // repeated int32 width = 2;
  int width_size() const;
  void clear_width();
  static const int kWidthFieldNumber = 2;
  ::google::protobuf::int32 width(int index) const;
  void set_width(int index, ::google::protobuf::int32 value);
  void add_width(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      width() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_width();

  // repeated int32 height = 3;
  int height_size() const;
  void clear_height();
  static const int kHeightFieldNumber = 3;
  ::google::protobuf::int32 height(int index) const;
  void set_height(int index, ::google::protobuf::int32 value);
  void add_height(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      height() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_height();

  // repeated int32 excluded_attribute = 4 [packed = true];
  int excluded_attribute_size() const;
  void clear_excluded_attribute();
  static const int kExcludedAttributeFieldNumber = 4;
  ::google::protobuf::int32 excluded_attribute(int index) const;
  void set_excluded_attribute(int index, ::google::protobuf::int32 value);
  void add_excluded_attribute(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      excluded_attribute() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_excluded_attribute();

  // repeated int32 allowed_vendor_type = 6 [packed = true];
  int allowed_vendor_type_size() const;
  void clear_allowed_vendor_type();
  static const int kAllowedVendorTypeFieldNumber = 6;
  ::google::protobuf::int32 allowed_vendor_type(int index) const;
  void set_allowed_vendor_type(int index, ::google::protobuf::int32 value);
  void add_allowed_vendor_type(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      allowed_vendor_type() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_allowed_vendor_type();

  // repeated int32 excluded_sensitive_category = 7 [packed = true];
  int excluded_sensitive_category_size() const;
  void clear_excluded_sensitive_category();
  static const int kExcludedSensitiveCategoryFieldNumber = 7;
  ::google::protobuf::int32 excluded_sensitive_category(int index) const;
  void set_excluded_sensitive_category(int index, ::google::protobuf::int32 value);
  void add_excluded_sensitive_category(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      excluded_sensitive_category() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_excluded_sensitive_category();

  // repeated int32 allowed_restricted_category = 16 [packed = true];
  int allowed_restricted_category_size() const;
  void clear_allowed_restricted_category();
  static const int kAllowedRestrictedCategoryFieldNumber = 16;
  ::google::protobuf::int32 allowed_restricted_category(int index) const;
  void set_allowed_restricted_category(int index, ::google::protobuf::int32 value);
  void add_allowed_restricted_category(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      allowed_restricted_category() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_allowed_restricted_category();

  // repeated int32 excluded_product_category = 13 [packed = true];
  int excluded_product_category_size() const;
  void clear_excluded_product_category();
  static const int kExcludedProductCategoryFieldNumber = 13;
  ::google::protobuf::int32 excluded_product_category(int index) const;
  void set_excluded_product_category(int index, ::google::protobuf::int32 value);
  void add_excluded_product_category(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      excluded_product_category() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_excluded_product_category();

  // repeated .BidRequest.AdSlot.MatchingAdData matching_ad_data = 9;
  int matching_ad_data_size() const;
  void clear_matching_ad_data();
  static const int kMatchingAdDataFieldNumber = 9;
  const ::BidRequest_AdSlot_MatchingAdData& matching_ad_data(int index) const;
  ::BidRequest_AdSlot_MatchingAdData* mutable_matching_ad_data(int index);
  ::BidRequest_AdSlot_MatchingAdData* add_matching_ad_data();
  ::google::protobuf::RepeatedPtrField< ::BidRequest_AdSlot_MatchingAdData >*
      mutable_matching_ad_data();
  const ::google::protobuf::RepeatedPtrField< ::BidRequest_AdSlot_MatchingAdData >&
      matching_ad_data() const;

  // optional fixed64 publisher_settings_list_id = 15;
  bool has_publisher_settings_list_id() const;
  void clear_publisher_settings_list_id();
  static const int kPublisherSettingsListIdFieldNumber = 15;
  ::google::protobuf::uint64 publisher_settings_list_id() const;
  void set_publisher_settings_list_id(::google::protobuf::uint64 value);

  // optional .BidRequest.AdSlot.SlotVisibility slot_visibility = 12 [default = NO_DETECTION];
  bool has_slot_visibility() const;
  void clear_slot_visibility();
  static const int kSlotVisibilityFieldNumber = 12;
  ::BidRequest_AdSlot_SlotVisibility slot_visibility() const;
  void set_slot_visibility(::BidRequest_AdSlot_SlotVisibility value);

  // repeated int32 DEPRECATED_allowed_attribute = 5;
  int deprecated_allowed_attribute_size() const;
  void clear_deprecated_allowed_attribute();
  static const int kDEPRECATEDAllowedAttributeFieldNumber = 5;
  ::google::protobuf::int32 deprecated_allowed_attribute(int index) const;
  void set_deprecated_allowed_attribute(int index, ::google::protobuf::int32 value);
  void add_deprecated_allowed_attribute(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      deprecated_allowed_attribute() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_deprecated_allowed_attribute();

  // repeated bytes DEPRECATED_publisher_settings_list_id = 11;
  int deprecated_publisher_settings_list_id_size() const;
  void clear_deprecated_publisher_settings_list_id();
  static const int kDEPRECATEDPublisherSettingsListIdFieldNumber = 11;
  const ::std::string& deprecated_publisher_settings_list_id(int index) const;
  ::std::string* mutable_deprecated_publisher_settings_list_id(int index);
  void set_deprecated_publisher_settings_list_id(int index, const ::std::string& value);
  void set_deprecated_publisher_settings_list_id(int index, const char* value);
  void set_deprecated_publisher_settings_list_id(int index, const void* value, size_t size);
  ::std::string* add_deprecated_publisher_settings_list_id();
  void add_deprecated_publisher_settings_list_id(const ::std::string& value);
  void add_deprecated_publisher_settings_list_id(const char* value);
  void add_deprecated_publisher_settings_list_id(const void* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& deprecated_publisher_settings_list_id() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_deprecated_publisher_settings_list_id();

  // repeated string DEPRECATED_excluded_click_through_url = 8;
  int deprecated_excluded_click_through_url_size() const;
  void clear_deprecated_excluded_click_through_url();
  static const int kDEPRECATEDExcludedClickThroughUrlFieldNumber = 8;
  const ::std::string& deprecated_excluded_click_through_url(int index) const;
  ::std::string* mutable_deprecated_excluded_click_through_url(int index);
  void set_deprecated_excluded_click_through_url(int index, const ::std::string& value);
  void set_deprecated_excluded_click_through_url(int index, const char* value);
  void set_deprecated_excluded_click_through_url(int index, const char* value, size_t size);
  ::std::string* add_deprecated_excluded_click_through_url();
  void add_deprecated_excluded_click_through_url(const ::std::string& value);
  void add_deprecated_excluded_click_through_url(const char* value);
  void add_deprecated_excluded_click_through_url(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& deprecated_excluded_click_through_url() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_deprecated_excluded_click_through_url();

  // @@protoc_insertion_point(class_scope:BidRequest.AdSlot)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_ad_block_key();
  inline void clear_has_ad_block_key();
  inline void set_has_publisher_settings_list_id();
  inline void clear_has_publisher_settings_list_id();
  inline void set_has_slot_visibility();
  inline void clear_has_slot_visibility();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 ad_block_key_;
  ::google::protobuf::RepeatedPtrField< ::std::string> targetable_channel_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > width_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > height_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > excluded_attribute_;
  mutable int _excluded_attribute_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > allowed_vendor_type_;
  mutable int _allowed_vendor_type_cached_byte_size_;
  ::google::protobuf::int32 id_;
  int slot_visibility_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > excluded_sensitive_category_;
  mutable int _excluded_sensitive_category_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > allowed_restricted_category_;
  mutable int _allowed_restricted_category_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > excluded_product_category_;
  mutable int _excluded_product_category_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::BidRequest_AdSlot_MatchingAdData > matching_ad_data_;
  ::google::protobuf::uint64 publisher_settings_list_id_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > deprecated_allowed_attribute_;
  ::google::protobuf::RepeatedPtrField< ::std::string> deprecated_publisher_settings_list_id_;
  ::google::protobuf::RepeatedPtrField< ::std::string> deprecated_excluded_click_through_url_;
  friend void  protobuf_AddDesc_realtime_2dbidding_2eproto();
  friend void protobuf_AssignDesc_realtime_2dbidding_2eproto();
  friend void protobuf_ShutdownFile_realtime_2dbidding_2eproto();

  void InitAsDefaultInstance();
  static BidRequest_AdSlot* default_instance_;
};
// -------------------------------------------------------------------

class BidRequest_BidResponseFeedback : public ::google::protobuf::Message {
 public:
  BidRequest_BidResponseFeedback();
  virtual ~BidRequest_BidResponseFeedback();

  BidRequest_BidResponseFeedback(const BidRequest_BidResponseFeedback& from);

  inline BidRequest_BidResponseFeedback& operator=(const BidRequest_BidResponseFeedback& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BidRequest_BidResponseFeedback& default_instance();

  void Swap(BidRequest_BidResponseFeedback* other);

  // implements Message ----------------------------------------------

  inline BidRequest_BidResponseFeedback* New() const { return New(NULL); }

  BidRequest_BidResponseFeedback* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BidRequest_BidResponseFeedback& from);
  void MergeFrom(const BidRequest_BidResponseFeedback& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BidRequest_BidResponseFeedback* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes request_id = 1;
  bool has_request_id() const;
  void clear_request_id();
  static const int kRequestIdFieldNumber = 1;
  const ::std::string& request_id() const;
  void set_request_id(const ::std::string& value);
  void set_request_id(const char* value);
  void set_request_id(const void* value, size_t size);
  ::std::string* mutable_request_id();
  ::std::string* release_request_id();
  void set_allocated_request_id(::std::string* request_id);

  // optional int32 creative_index = 2;
  bool has_creative_index() const;
  void clear_creative_index();
  static const int kCreativeIndexFieldNumber = 2;
  ::google::protobuf::int32 creative_index() const;
  void set_creative_index(::google::protobuf::int32 value);

  // optional int32 creative_status_code = 3;
  bool has_creative_status_code() const;
  void clear_creative_status_code();
  static const int kCreativeStatusCodeFieldNumber = 3;
  ::google::protobuf::int32 creative_status_code() const;
  void set_creative_status_code(::google::protobuf::int32 value);

  // optional int64 cpm_micros = 4;
  bool has_cpm_micros() const;
  void clear_cpm_micros();
  static const int kCpmMicrosFieldNumber = 4;
  ::google::protobuf::int64 cpm_micros() const;
  void set_cpm_micros(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:BidRequest.BidResponseFeedback)
 private:
  inline void set_has_request_id();
  inline void clear_has_request_id();
  inline void set_has_creative_index();
  inline void clear_has_creative_index();
  inline void set_has_creative_status_code();
  inline void clear_has_creative_status_code();
  inline void set_has_cpm_micros();
  inline void clear_has_cpm_micros();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr request_id_;
  ::google::protobuf::int32 creative_index_;
  ::google::protobuf::int32 creative_status_code_;
  ::google::protobuf::int64 cpm_micros_;
  friend void  protobuf_AddDesc_realtime_2dbidding_2eproto();
  friend void protobuf_AssignDesc_realtime_2dbidding_2eproto();
  friend void protobuf_ShutdownFile_realtime_2dbidding_2eproto();

  void InitAsDefaultInstance();
  static BidRequest_BidResponseFeedback* default_instance_;
};
// -------------------------------------------------------------------

class BidRequest_MatchingNetwork : public ::google::protobuf::Message {
 public:
  BidRequest_MatchingNetwork();
  virtual ~BidRequest_MatchingNetwork();

  BidRequest_MatchingNetwork(const BidRequest_MatchingNetwork& from);

  inline BidRequest_MatchingNetwork& operator=(const BidRequest_MatchingNetwork& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BidRequest_MatchingNetwork& default_instance();

  void Swap(BidRequest_MatchingNetwork* other);

  // implements Message ----------------------------------------------

  inline BidRequest_MatchingNetwork* New() const { return New(NULL); }

  BidRequest_MatchingNetwork* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BidRequest_MatchingNetwork& from);
  void MergeFrom(const BidRequest_MatchingNetwork& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BidRequest_MatchingNetwork* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string DEPRECATED_network_id = 1;
  bool has_deprecated_network_id() const;
  void clear_deprecated_network_id();
  static const int kDEPRECATEDNetworkIdFieldNumber = 1;
  const ::std::string& deprecated_network_id() const;
  void set_deprecated_network_id(const ::std::string& value);
  void set_deprecated_network_id(const char* value);
  void set_deprecated_network_id(const char* value, size_t size);
  ::std::string* mutable_deprecated_network_id();
  ::std::string* release_deprecated_network_id();
  void set_allocated_deprecated_network_id(::std::string* deprecated_network_id);

  // optional string DEPRECATED_google_user_id = 2;
  bool has_deprecated_google_user_id() const;
  void clear_deprecated_google_user_id();
  static const int kDEPRECATEDGoogleUserIdFieldNumber = 2;
  const ::std::string& deprecated_google_user_id() const;
  void set_deprecated_google_user_id(const ::std::string& value);
  void set_deprecated_google_user_id(const char* value);
  void set_deprecated_google_user_id(const char* value, size_t size);
  ::std::string* mutable_deprecated_google_user_id();
  ::std::string* release_deprecated_google_user_id();
  void set_allocated_deprecated_google_user_id(::std::string* deprecated_google_user_id);

  // @@protoc_insertion_point(class_scope:BidRequest.MatchingNetwork)
 private:
  inline void set_has_deprecated_network_id();
  inline void clear_has_deprecated_network_id();
  inline void set_has_deprecated_google_user_id();
  inline void clear_has_deprecated_google_user_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr deprecated_network_id_;
  ::google::protobuf::internal::ArenaStringPtr deprecated_google_user_id_;
  friend void  protobuf_AddDesc_realtime_2dbidding_2eproto();
  friend void protobuf_AssignDesc_realtime_2dbidding_2eproto();
  friend void protobuf_ShutdownFile_realtime_2dbidding_2eproto();

  void InitAsDefaultInstance();
  static BidRequest_MatchingNetwork* default_instance_;
};
// -------------------------------------------------------------------

class BidRequest : public ::google::protobuf::Message {
 public:
  BidRequest();
  virtual ~BidRequest();

  BidRequest(const BidRequest& from);

  inline BidRequest& operator=(const BidRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BidRequest& default_instance();

  void Swap(BidRequest* other);

  // implements Message ----------------------------------------------

  inline BidRequest* New() const { return New(NULL); }

  BidRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BidRequest& from);
  void MergeFrom(const BidRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BidRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef BidRequest_Hyperlocal Hyperlocal;
  typedef BidRequest_HyperlocalSet HyperlocalSet;
  typedef BidRequest_UserList UserList;
  typedef BidRequest_Vertical Vertical;
  typedef BidRequest_KeyValue KeyValue;
  typedef BidRequest_Mobile Mobile;
  typedef BidRequest_Video Video;
  typedef BidRequest_AdSlot AdSlot;
  typedef BidRequest_BidResponseFeedback BidResponseFeedback;
  typedef BidRequest_MatchingNetwork MatchingNetwork;

  // accessors -------------------------------------------------------

  // required bytes id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  void set_id(const char* value);
  void set_id(const void* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // optional bytes ip = 4;
  bool has_ip() const;
  void clear_ip();
  static const int kIpFieldNumber = 4;
  const ::std::string& ip() const;
  void set_ip(const ::std::string& value);
  void set_ip(const char* value);
  void set_ip(const void* value, size_t size);
  ::std::string* mutable_ip();
  ::std::string* release_ip();
  void set_allocated_ip(::std::string* ip);

  // optional string google_user_id = 21;
  bool has_google_user_id() const;
  void clear_google_user_id();
  static const int kGoogleUserIdFieldNumber = 21;
  const ::std::string& google_user_id() const;
  void set_google_user_id(const ::std::string& value);
  void set_google_user_id(const char* value);
  void set_google_user_id(const char* value, size_t size);
  ::std::string* mutable_google_user_id();
  ::std::string* release_google_user_id();
  void set_allocated_google_user_id(::std::string* google_user_id);

  // optional uint32 cookie_version = 20;
  bool has_cookie_version() const;
  void clear_cookie_version();
  static const int kCookieVersionFieldNumber = 20;
  ::google::protobuf::uint32 cookie_version() const;
  void set_cookie_version(::google::protobuf::uint32 value);

  // optional int32 cookie_age_seconds = 31;
  bool has_cookie_age_seconds() const;
  void clear_cookie_age_seconds();
  static const int kCookieAgeSecondsFieldNumber = 31;
  ::google::protobuf::int32 cookie_age_seconds() const;
  void set_cookie_age_seconds(::google::protobuf::int32 value);

  // optional bytes hosted_match_data = 37;
  bool has_hosted_match_data() const;
  void clear_hosted_match_data();
  static const int kHostedMatchDataFieldNumber = 37;
  const ::std::string& hosted_match_data() const;
  void set_hosted_match_data(const ::std::string& value);
  void set_hosted_match_data(const char* value);
  void set_hosted_match_data(const void* value, size_t size);
  ::std::string* mutable_hosted_match_data();
  ::std::string* release_hosted_match_data();
  void set_allocated_hosted_match_data(::std::string* hosted_match_data);

  // optional string user_agent = 6;
  bool has_user_agent() const;
  void clear_user_agent();
  static const int kUserAgentFieldNumber = 6;
  const ::std::string& user_agent() const;
  void set_user_agent(const ::std::string& value);
  void set_user_agent(const char* value);
  void set_user_agent(const char* value, size_t size);
  ::std::string* mutable_user_agent();
  ::std::string* release_user_agent();
  void set_allocated_user_agent(::std::string* user_agent);

  // optional int32 geo_criteria_id = 39;
  bool has_geo_criteria_id() const;
  void clear_geo_criteria_id();
  static const int kGeoCriteriaIdFieldNumber = 39;
  ::google::protobuf::int32 geo_criteria_id() const;
  void set_geo_criteria_id(::google::protobuf::int32 value);

  // optional string postal_code = 33;
  bool has_postal_code() const;
  void clear_postal_code();
  static const int kPostalCodeFieldNumber = 33;
  const ::std::string& postal_code() const;
  void set_postal_code(const ::std::string& value);
  void set_postal_code(const char* value);
  void set_postal_code(const char* value, size_t size);
  ::std::string* mutable_postal_code();
  ::std::string* release_postal_code();
  void set_allocated_postal_code(::std::string* postal_code);

  // optional string postal_code_prefix = 34;
  bool has_postal_code_prefix() const;
  void clear_postal_code_prefix();
  static const int kPostalCodePrefixFieldNumber = 34;
  const ::std::string& postal_code_prefix() const;
  void set_postal_code_prefix(const ::std::string& value);
  void set_postal_code_prefix(const char* value);
  void set_postal_code_prefix(const char* value, size_t size);
  ::std::string* mutable_postal_code_prefix();
  ::std::string* release_postal_code_prefix();
  void set_allocated_postal_code_prefix(::std::string* postal_code_prefix);

  // optional bytes encrypted_hyperlocal_set = 40;
  bool has_encrypted_hyperlocal_set() const;
  void clear_encrypted_hyperlocal_set();
  static const int kEncryptedHyperlocalSetFieldNumber = 40;
  const ::std::string& encrypted_hyperlocal_set() const;
  void set_encrypted_hyperlocal_set(const ::std::string& value);
  void set_encrypted_hyperlocal_set(const char* value);
  void set_encrypted_hyperlocal_set(const void* value, size_t size);
  ::std::string* mutable_encrypted_hyperlocal_set();
  ::std::string* release_encrypted_hyperlocal_set();
  void set_allocated_encrypted_hyperlocal_set(::std::string* encrypted_hyperlocal_set);

  // optional int32 timezone_offset = 25;
  bool has_timezone_offset() const;
  void clear_timezone_offset();
  static const int kTimezoneOffsetFieldNumber = 25;
  ::google::protobuf::int32 timezone_offset() const;
  void set_timezone_offset(::google::protobuf::int32 value);

  // repeated int32 user_vertical = 30 [packed = true];
  int user_vertical_size() const;
  void clear_user_vertical();
  static const int kUserVerticalFieldNumber = 30;
  ::google::protobuf::int32 user_vertical(int index) const;
  void set_user_vertical(int index, ::google::protobuf::int32 value);
  void add_user_vertical(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      user_vertical() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_user_vertical();

  // repeated .BidRequest.UserList user_list = 32;
  int user_list_size() const;
  void clear_user_list();
  static const int kUserListFieldNumber = 32;
  const ::BidRequest_UserList& user_list(int index) const;
  ::BidRequest_UserList* mutable_user_list(int index);
  ::BidRequest_UserList* add_user_list();
  ::google::protobuf::RepeatedPtrField< ::BidRequest_UserList >*
      mutable_user_list();
  const ::google::protobuf::RepeatedPtrField< ::BidRequest_UserList >&
      user_list() const;

  // optional int32 seller_network_id = 41;
  bool has_seller_network_id() const;
  void clear_seller_network_id();
  static const int kSellerNetworkIdFieldNumber = 41;
  ::google::protobuf::int32 seller_network_id() const;
  void set_seller_network_id(::google::protobuf::int32 value);

  // optional string url = 11;
  bool has_url() const;
  void clear_url();
  static const int kUrlFieldNumber = 11;
  const ::std::string& url() const;
  void set_url(const ::std::string& value);
  void set_url(const char* value);
  void set_url(const char* value, size_t size);
  ::std::string* mutable_url();
  ::std::string* release_url();
  void set_allocated_url(::std::string* url);

  // optional string anonymous_id = 19;
  bool has_anonymous_id() const;
  void clear_anonymous_id();
  static const int kAnonymousIdFieldNumber = 19;
  const ::std::string& anonymous_id() const;
  void set_anonymous_id(const ::std::string& value);
  void set_anonymous_id(const char* value);
  void set_anonymous_id(const char* value, size_t size);
  ::std::string* mutable_anonymous_id();
  ::std::string* release_anonymous_id();
  void set_allocated_anonymous_id(::std::string* anonymous_id);

  // repeated string detected_language = 12;
  int detected_language_size() const;
  void clear_detected_language();
  static const int kDetectedLanguageFieldNumber = 12;
  const ::std::string& detected_language(int index) const;
  ::std::string* mutable_detected_language(int index);
  void set_detected_language(int index, const ::std::string& value);
  void set_detected_language(int index, const char* value);
  void set_detected_language(int index, const char* value, size_t size);
  ::std::string* add_detected_language();
  void add_detected_language(const ::std::string& value);
  void add_detected_language(const char* value);
  void add_detected_language(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& detected_language() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_detected_language();

  // repeated .BidRequest.Vertical detected_vertical = 13;
  int detected_vertical_size() const;
  void clear_detected_vertical();
  static const int kDetectedVerticalFieldNumber = 13;
  const ::BidRequest_Vertical& detected_vertical(int index) const;
  ::BidRequest_Vertical* mutable_detected_vertical(int index);
  ::BidRequest_Vertical* add_detected_vertical();
  ::google::protobuf::RepeatedPtrField< ::BidRequest_Vertical >*
      mutable_detected_vertical();
  const ::google::protobuf::RepeatedPtrField< ::BidRequest_Vertical >&
      detected_vertical() const;

  // optional int32 vertical_dictionary_version = 24;
  bool has_vertical_dictionary_version() const;
  void clear_vertical_dictionary_version();
  static const int kVerticalDictionaryVersionFieldNumber = 24;
  ::google::protobuf::int32 vertical_dictionary_version() const;
  void set_vertical_dictionary_version(::google::protobuf::int32 value);

  // repeated int32 detected_content_label = 26 [packed = true];
  int detected_content_label_size() const;
  void clear_detected_content_label();
  static const int kDetectedContentLabelFieldNumber = 26;
  ::google::protobuf::int32 detected_content_label(int index) const;
  void set_detected_content_label(int index, ::google::protobuf::int32 value);
  void add_detected_content_label(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      detected_content_label() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_detected_content_label();

  // repeated int32 site_list_id = 36;
  int site_list_id_size() const;
  void clear_site_list_id();
  static const int kSiteListIdFieldNumber = 36;
  ::google::protobuf::int32 site_list_id(int index) const;
  void set_site_list_id(int index, ::google::protobuf::int32 value);
  void add_site_list_id(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      site_list_id() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_site_list_id();

  // repeated .BidRequest.KeyValue key_value = 38;
  int key_value_size() const;
  void clear_key_value();
  static const int kKeyValueFieldNumber = 38;
  const ::BidRequest_KeyValue& key_value(int index) const;
  ::BidRequest_KeyValue* mutable_key_value(int index);
  ::BidRequest_KeyValue* add_key_value();
  ::google::protobuf::RepeatedPtrField< ::BidRequest_KeyValue >*
      mutable_key_value();
  const ::google::protobuf::RepeatedPtrField< ::BidRequest_KeyValue >&
      key_value() const;

  // optional .BidRequest.Mobile mobile = 28;
  bool has_mobile() const;
  void clear_mobile();
  static const int kMobileFieldNumber = 28;
  const ::BidRequest_Mobile& mobile() const;
  ::BidRequest_Mobile* mutable_mobile();
  ::BidRequest_Mobile* release_mobile();
  void set_allocated_mobile(::BidRequest_Mobile* mobile);

  // optional .BidRequest.Video video = 29;
  bool has_video() const;
  void clear_video();
  static const int kVideoFieldNumber = 29;
  const ::BidRequest_Video& video() const;
  ::BidRequest_Video* mutable_video();
  ::BidRequest_Video* release_video();
  void set_allocated_video(::BidRequest_Video* video);

  // optional fixed64 publisher_settings_list_id = 42;
  bool has_publisher_settings_list_id() const;
  void clear_publisher_settings_list_id();
  static const int kPublisherSettingsListIdFieldNumber = 42;
  ::google::protobuf::uint64 publisher_settings_list_id() const;
  void set_publisher_settings_list_id(::google::protobuf::uint64 value);

  // repeated .BidRequest.AdSlot adslot = 14;
  int adslot_size() const;
  void clear_adslot();
  static const int kAdslotFieldNumber = 14;
  const ::BidRequest_AdSlot& adslot(int index) const;
  ::BidRequest_AdSlot* mutable_adslot(int index);
  ::BidRequest_AdSlot* add_adslot();
  ::google::protobuf::RepeatedPtrField< ::BidRequest_AdSlot >*
      mutable_adslot();
  const ::google::protobuf::RepeatedPtrField< ::BidRequest_AdSlot >&
      adslot() const;

  // repeated .BidRequest.BidResponseFeedback bid_response_feedback = 44;
  int bid_response_feedback_size() const;
  void clear_bid_response_feedback();
  static const int kBidResponseFeedbackFieldNumber = 44;
  const ::BidRequest_BidResponseFeedback& bid_response_feedback(int index) const;
  ::BidRequest_BidResponseFeedback* mutable_bid_response_feedback(int index);
  ::BidRequest_BidResponseFeedback* add_bid_response_feedback();
  ::google::protobuf::RepeatedPtrField< ::BidRequest_BidResponseFeedback >*
      mutable_bid_response_feedback();
  const ::google::protobuf::RepeatedPtrField< ::BidRequest_BidResponseFeedback >&
      bid_response_feedback() const;

  // optional bool is_test = 15 [default = false];
  bool has_is_test() const;
  void clear_is_test();
  static const int kIsTestFieldNumber = 15;
  bool is_test() const;
  void set_is_test(bool value);

  // optional bool is_ping = 17 [default = false];
  bool has_is_ping() const;
  void clear_is_ping();
  static const int kIsPingFieldNumber = 17;
  bool is_ping() const;
  void set_is_ping(bool value);

  // optional bool is_predicted_to_be_ignored = 45 [default = false];
  bool has_is_predicted_to_be_ignored() const;
  void clear_is_predicted_to_be_ignored();
  static const int kIsPredictedToBeIgnoredFieldNumber = 45;
  bool is_predicted_to_be_ignored() const;
  void set_is_predicted_to_be_ignored(bool value);

  // optional int32 DEPRECATED_protocol_version = 1;
  bool has_deprecated_protocol_version() const;
  void clear_deprecated_protocol_version();
  static const int kDEPRECATEDProtocolVersionFieldNumber = 1;
  ::google::protobuf::int32 deprecated_protocol_version() const;
  void set_deprecated_protocol_version(::google::protobuf::int32 value);

  // optional string DEPRECATED_click_tracking_url = 3;
  bool has_deprecated_click_tracking_url() const;
  void clear_deprecated_click_tracking_url();
  static const int kDEPRECATEDClickTrackingUrlFieldNumber = 3;
  const ::std::string& deprecated_click_tracking_url() const;
  void set_deprecated_click_tracking_url(const ::std::string& value);
  void set_deprecated_click_tracking_url(const char* value);
  void set_deprecated_click_tracking_url(const char* value, size_t size);
  ::std::string* mutable_deprecated_click_tracking_url();
  ::std::string* release_deprecated_click_tracking_url();
  void set_allocated_deprecated_click_tracking_url(::std::string* deprecated_click_tracking_url);

  // optional uint64 DEPRECATED_cookie = 5;
  bool has_deprecated_cookie() const;
  void clear_deprecated_cookie();
  static const int kDEPRECATEDCookieFieldNumber = 5;
  ::google::protobuf::uint64 deprecated_cookie() const;
  void set_deprecated_cookie(::google::protobuf::uint64 value);

  // optional string DEPRECATED_country = 7;
  bool has_deprecated_country() const;
  void clear_deprecated_country();
  static const int kDEPRECATEDCountryFieldNumber = 7;
  const ::std::string& deprecated_country() const;
  void set_deprecated_country(const ::std::string& value);
  void set_deprecated_country(const char* value);
  void set_deprecated_country(const char* value, size_t size);
  ::std::string* mutable_deprecated_country();
  ::std::string* release_deprecated_country();
  void set_allocated_deprecated_country(::std::string* deprecated_country);

  // optional string DEPRECATED_region = 8;
  bool has_deprecated_region() const;
  void clear_deprecated_region();
  static const int kDEPRECATEDRegionFieldNumber = 8;
  const ::std::string& deprecated_region() const;
  void set_deprecated_region(const ::std::string& value);
  void set_deprecated_region(const char* value);
  void set_deprecated_region(const char* value, size_t size);
  ::std::string* mutable_deprecated_region();
  ::std::string* release_deprecated_region();
  void set_allocated_deprecated_region(::std::string* deprecated_region);

  // optional string DEPRECATED_city = 9;
  bool has_deprecated_city() const;
  void clear_deprecated_city();
  static const int kDEPRECATEDCityFieldNumber = 9;
  const ::std::string& deprecated_city() const;
  void set_deprecated_city(const ::std::string& value);
  void set_deprecated_city(const char* value);
  void set_deprecated_city(const char* value, size_t size);
  ::std::string* mutable_deprecated_city();
  ::std::string* release_deprecated_city();
  void set_allocated_deprecated_city(::std::string* deprecated_city);

  // optional int32 DEPRECATED_metro = 10;
  bool has_deprecated_metro() const;
  void clear_deprecated_metro();
  static const int kDEPRECATEDMetroFieldNumber = 10;
  ::google::protobuf::int32 deprecated_metro() const;
  void set_deprecated_metro(::google::protobuf::int32 value);

  // optional bytes DEPRECATED_hashed_cookie = 16;
  bool has_deprecated_hashed_cookie() const;
  void clear_deprecated_hashed_cookie();
  static const int kDEPRECATEDHashedCookieFieldNumber = 16;
  const ::std::string& deprecated_hashed_cookie() const;
  void set_deprecated_hashed_cookie(const ::std::string& value);
  void set_deprecated_hashed_cookie(const char* value);
  void set_deprecated_hashed_cookie(const void* value, size_t size);
  ::std::string* mutable_deprecated_hashed_cookie();
  ::std::string* release_deprecated_hashed_cookie();
  void set_allocated_deprecated_hashed_cookie(::std::string* deprecated_hashed_cookie);

  // repeated string DEPRECATED_excluded_click_through_url = 18;
  int deprecated_excluded_click_through_url_size() const;
  void clear_deprecated_excluded_click_through_url();
  static const int kDEPRECATEDExcludedClickThroughUrlFieldNumber = 18;
  const ::std::string& deprecated_excluded_click_through_url(int index) const;
  ::std::string* mutable_deprecated_excluded_click_through_url(int index);
  void set_deprecated_excluded_click_through_url(int index, const ::std::string& value);
  void set_deprecated_excluded_click_through_url(int index, const char* value);
  void set_deprecated_excluded_click_through_url(int index, const char* value, size_t size);
  ::std::string* add_deprecated_excluded_click_through_url();
  void add_deprecated_excluded_click_through_url(const ::std::string& value);
  void add_deprecated_excluded_click_through_url(const char* value);
  void add_deprecated_excluded_click_through_url(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& deprecated_excluded_click_through_url() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_deprecated_excluded_click_through_url();

  // optional string DEPRECATED_seller_network = 22;
  bool has_deprecated_seller_network() const;
  void clear_deprecated_seller_network();
  static const int kDEPRECATEDSellerNetworkFieldNumber = 22;
  const ::std::string& deprecated_seller_network() const;
  void set_deprecated_seller_network(const ::std::string& value);
  void set_deprecated_seller_network(const char* value);
  void set_deprecated_seller_network(const char* value, size_t size);
  ::std::string* mutable_deprecated_seller_network();
  ::std::string* release_deprecated_seller_network();
  void set_allocated_deprecated_seller_network(::std::string* deprecated_seller_network);

  // optional bytes DEPRECATED_publisher_settings_list_id = 23;
  bool has_deprecated_publisher_settings_list_id() const;
  void clear_deprecated_publisher_settings_list_id();
  static const int kDEPRECATEDPublisherSettingsListIdFieldNumber = 23;
  const ::std::string& deprecated_publisher_settings_list_id() const;
  void set_deprecated_publisher_settings_list_id(const ::std::string& value);
  void set_deprecated_publisher_settings_list_id(const char* value);
  void set_deprecated_publisher_settings_list_id(const void* value, size_t size);
  ::std::string* mutable_deprecated_publisher_settings_list_id();
  ::std::string* release_deprecated_publisher_settings_list_id();
  void set_allocated_deprecated_publisher_settings_list_id(::std::string* deprecated_publisher_settings_list_id);

  // repeated .BidRequest.MatchingNetwork DEPRECATED_matching_network = 27;
  int deprecated_matching_network_size() const;
  void clear_deprecated_matching_network();
  static const int kDEPRECATEDMatchingNetworkFieldNumber = 27;
  const ::BidRequest_MatchingNetwork& deprecated_matching_network(int index) const;
  ::BidRequest_MatchingNetwork* mutable_deprecated_matching_network(int index);
  ::BidRequest_MatchingNetwork* add_deprecated_matching_network();
  ::google::protobuf::RepeatedPtrField< ::BidRequest_MatchingNetwork >*
      mutable_deprecated_matching_network();
  const ::google::protobuf::RepeatedPtrField< ::BidRequest_MatchingNetwork >&
      deprecated_matching_network() const;

  // optional bool DEPRECATED_experimental_deadline = 35 [default = false];
  bool has_deprecated_experimental_deadline() const;
  void clear_deprecated_experimental_deadline();
  static const int kDEPRECATEDExperimentalDeadlineFieldNumber = 35;
  bool deprecated_experimental_deadline() const;
  void set_deprecated_experimental_deadline(bool value);

  // @@protoc_insertion_point(class_scope:BidRequest)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_ip();
  inline void clear_has_ip();
  inline void set_has_google_user_id();
  inline void clear_has_google_user_id();
  inline void set_has_cookie_version();
  inline void clear_has_cookie_version();
  inline void set_has_cookie_age_seconds();
  inline void clear_has_cookie_age_seconds();
  inline void set_has_hosted_match_data();
  inline void clear_has_hosted_match_data();
  inline void set_has_user_agent();
  inline void clear_has_user_agent();
  inline void set_has_geo_criteria_id();
  inline void clear_has_geo_criteria_id();
  inline void set_has_postal_code();
  inline void clear_has_postal_code();
  inline void set_has_postal_code_prefix();
  inline void clear_has_postal_code_prefix();
  inline void set_has_encrypted_hyperlocal_set();
  inline void clear_has_encrypted_hyperlocal_set();
  inline void set_has_timezone_offset();
  inline void clear_has_timezone_offset();
  inline void set_has_seller_network_id();
  inline void clear_has_seller_network_id();
  inline void set_has_url();
  inline void clear_has_url();
  inline void set_has_anonymous_id();
  inline void clear_has_anonymous_id();
  inline void set_has_vertical_dictionary_version();
  inline void clear_has_vertical_dictionary_version();
  inline void set_has_mobile();
  inline void clear_has_mobile();
  inline void set_has_video();
  inline void clear_has_video();
  inline void set_has_publisher_settings_list_id();
  inline void clear_has_publisher_settings_list_id();
  inline void set_has_is_test();
  inline void clear_has_is_test();
  inline void set_has_is_ping();
  inline void clear_has_is_ping();
  inline void set_has_is_predicted_to_be_ignored();
  inline void clear_has_is_predicted_to_be_ignored();
  inline void set_has_deprecated_protocol_version();
  inline void clear_has_deprecated_protocol_version();
  inline void set_has_deprecated_click_tracking_url();
  inline void clear_has_deprecated_click_tracking_url();
  inline void set_has_deprecated_cookie();
  inline void clear_has_deprecated_cookie();
  inline void set_has_deprecated_country();
  inline void clear_has_deprecated_country();
  inline void set_has_deprecated_region();
  inline void clear_has_deprecated_region();
  inline void set_has_deprecated_city();
  inline void clear_has_deprecated_city();
  inline void set_has_deprecated_metro();
  inline void clear_has_deprecated_metro();
  inline void set_has_deprecated_hashed_cookie();
  inline void clear_has_deprecated_hashed_cookie();
  inline void set_has_deprecated_seller_network();
  inline void clear_has_deprecated_seller_network();
  inline void set_has_deprecated_publisher_settings_list_id();
  inline void clear_has_deprecated_publisher_settings_list_id();
  inline void set_has_deprecated_experimental_deadline();
  inline void clear_has_deprecated_experimental_deadline();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[2];
  ::google::protobuf::internal::ArenaStringPtr id_;
  ::google::protobuf::internal::ArenaStringPtr ip_;
  ::google::protobuf::internal::ArenaStringPtr google_user_id_;
  ::google::protobuf::uint32 cookie_version_;
  ::google::protobuf::int32 cookie_age_seconds_;
  ::google::protobuf::internal::ArenaStringPtr hosted_match_data_;
  ::google::protobuf::internal::ArenaStringPtr user_agent_;
  ::google::protobuf::internal::ArenaStringPtr postal_code_;
  ::google::protobuf::internal::ArenaStringPtr postal_code_prefix_;
  ::google::protobuf::int32 geo_criteria_id_;
  ::google::protobuf::int32 timezone_offset_;
  ::google::protobuf::internal::ArenaStringPtr encrypted_hyperlocal_set_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > user_vertical_;
  mutable int _user_vertical_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::BidRequest_UserList > user_list_;
  ::google::protobuf::internal::ArenaStringPtr url_;
  ::google::protobuf::internal::ArenaStringPtr anonymous_id_;
  ::google::protobuf::int32 seller_network_id_;
  ::google::protobuf::int32 vertical_dictionary_version_;
  ::google::protobuf::RepeatedPtrField< ::std::string> detected_language_;
  ::google::protobuf::RepeatedPtrField< ::BidRequest_Vertical > detected_vertical_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > detected_content_label_;
  mutable int _detected_content_label_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > site_list_id_;
  ::google::protobuf::RepeatedPtrField< ::BidRequest_KeyValue > key_value_;
  ::BidRequest_Mobile* mobile_;
  ::BidRequest_Video* video_;
  ::google::protobuf::uint64 publisher_settings_list_id_;
  ::google::protobuf::RepeatedPtrField< ::BidRequest_AdSlot > adslot_;
  ::google::protobuf::RepeatedPtrField< ::BidRequest_BidResponseFeedback > bid_response_feedback_;
  ::google::protobuf::internal::ArenaStringPtr deprecated_click_tracking_url_;
  ::google::protobuf::int32 deprecated_protocol_version_;
  bool is_test_;
  bool is_ping_;
  bool is_predicted_to_be_ignored_;
  bool deprecated_experimental_deadline_;
  ::google::protobuf::uint64 deprecated_cookie_;
  ::google::protobuf::internal::ArenaStringPtr deprecated_country_;
  ::google::protobuf::internal::ArenaStringPtr deprecated_region_;
  ::google::protobuf::internal::ArenaStringPtr deprecated_city_;
  ::google::protobuf::internal::ArenaStringPtr deprecated_hashed_cookie_;
  ::google::protobuf::RepeatedPtrField< ::std::string> deprecated_excluded_click_through_url_;
  ::google::protobuf::internal::ArenaStringPtr deprecated_seller_network_;
  ::google::protobuf::internal::ArenaStringPtr deprecated_publisher_settings_list_id_;
  ::google::protobuf::RepeatedPtrField< ::BidRequest_MatchingNetwork > deprecated_matching_network_;
  ::google::protobuf::int32 deprecated_metro_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_realtime_2dbidding_2eproto();
  friend void protobuf_AssignDesc_realtime_2dbidding_2eproto();
  friend void protobuf_ShutdownFile_realtime_2dbidding_2eproto();

  void InitAsDefaultInstance();
  static BidRequest* default_instance_;
};
// -------------------------------------------------------------------

class BidResponse_Ad_TemplateParameter : public ::google::protobuf::Message {
 public:
  BidResponse_Ad_TemplateParameter();
  virtual ~BidResponse_Ad_TemplateParameter();

  BidResponse_Ad_TemplateParameter(const BidResponse_Ad_TemplateParameter& from);

  inline BidResponse_Ad_TemplateParameter& operator=(const BidResponse_Ad_TemplateParameter& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BidResponse_Ad_TemplateParameter& default_instance();

  void Swap(BidResponse_Ad_TemplateParameter* other);

  // implements Message ----------------------------------------------

  inline BidResponse_Ad_TemplateParameter* New() const { return New(NULL); }

  BidResponse_Ad_TemplateParameter* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BidResponse_Ad_TemplateParameter& from);
  void MergeFrom(const BidResponse_Ad_TemplateParameter& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BidResponse_Ad_TemplateParameter* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string parameter_value = 1;
  bool has_parameter_value() const;
  void clear_parameter_value();
  static const int kParameterValueFieldNumber = 1;
  const ::std::string& parameter_value() const;
  void set_parameter_value(const ::std::string& value);
  void set_parameter_value(const char* value);
  void set_parameter_value(const char* value, size_t size);
  ::std::string* mutable_parameter_value();
  ::std::string* release_parameter_value();
  void set_allocated_parameter_value(::std::string* parameter_value);

  // optional string blank_ad_parameter_value = 8;
  bool has_blank_ad_parameter_value() const;
  void clear_blank_ad_parameter_value();
  static const int kBlankAdParameterValueFieldNumber = 8;
  const ::std::string& blank_ad_parameter_value() const;
  void set_blank_ad_parameter_value(const ::std::string& value);
  void set_blank_ad_parameter_value(const char* value);
  void set_blank_ad_parameter_value(const char* value, size_t size);
  ::std::string* mutable_blank_ad_parameter_value();
  ::std::string* release_blank_ad_parameter_value();
  void set_allocated_blank_ad_parameter_value(::std::string* blank_ad_parameter_value);

  // optional string buyer_creative_id = 2;
  bool has_buyer_creative_id() const;
  void clear_buyer_creative_id();
  static const int kBuyerCreativeIdFieldNumber = 2;
  const ::std::string& buyer_creative_id() const;
  void set_buyer_creative_id(const ::std::string& value);
  void set_buyer_creative_id(const char* value);
  void set_buyer_creative_id(const char* value, size_t size);
  ::std::string* mutable_buyer_creative_id();
  ::std::string* release_buyer_creative_id();
  void set_allocated_buyer_creative_id(::std::string* buyer_creative_id);

  // optional string click_through_url = 3;
  bool has_click_through_url() const;
  void clear_click_through_url();
  static const int kClickThroughUrlFieldNumber = 3;
  const ::std::string& click_through_url() const;
  void set_click_through_url(const ::std::string& value);
  void set_click_through_url(const char* value);
  void set_click_through_url(const char* value, size_t size);
  ::std::string* mutable_click_through_url();
  ::std::string* release_click_through_url();
  void set_allocated_click_through_url(::std::string* click_through_url);

  // optional int32 left = 4;
  bool has_left() const;
  void clear_left();
  static const int kLeftFieldNumber = 4;
  ::google::protobuf::int32 left() const;
  void set_left(::google::protobuf::int32 value);

  // optional int32 right = 5;
  bool has_right() const;
  void clear_right();
  static const int kRightFieldNumber = 5;
  ::google::protobuf::int32 right() const;
  void set_right(::google::protobuf::int32 value);

  // optional int32 top = 6;
  bool has_top() const;
  void clear_top();
  static const int kTopFieldNumber = 6;
  ::google::protobuf::int32 top() const;
  void set_top(::google::protobuf::int32 value);

  // optional int32 bottom = 7;
  bool has_bottom() const;
  void clear_bottom();
  static const int kBottomFieldNumber = 7;
  ::google::protobuf::int32 bottom() const;
  void set_bottom(::google::protobuf::int32 value);

  // optional int32 backup_index = 9;
  bool has_backup_index() const;
  void clear_backup_index();
  static const int kBackupIndexFieldNumber = 9;
  ::google::protobuf::int32 backup_index() const;
  void set_backup_index(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:BidResponse.Ad.TemplateParameter)
 private:
  inline void set_has_parameter_value();
  inline void clear_has_parameter_value();
  inline void set_has_blank_ad_parameter_value();
  inline void clear_has_blank_ad_parameter_value();
  inline void set_has_buyer_creative_id();
  inline void clear_has_buyer_creative_id();
  inline void set_has_click_through_url();
  inline void clear_has_click_through_url();
  inline void set_has_left();
  inline void clear_has_left();
  inline void set_has_right();
  inline void clear_has_right();
  inline void set_has_top();
  inline void clear_has_top();
  inline void set_has_bottom();
  inline void clear_has_bottom();
  inline void set_has_backup_index();
  inline void clear_has_backup_index();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr parameter_value_;
  ::google::protobuf::internal::ArenaStringPtr blank_ad_parameter_value_;
  ::google::protobuf::internal::ArenaStringPtr buyer_creative_id_;
  ::google::protobuf::internal::ArenaStringPtr click_through_url_;
  ::google::protobuf::int32 left_;
  ::google::protobuf::int32 right_;
  ::google::protobuf::int32 top_;
  ::google::protobuf::int32 bottom_;
  ::google::protobuf::int32 backup_index_;
  friend void  protobuf_AddDesc_realtime_2dbidding_2eproto();
  friend void protobuf_AssignDesc_realtime_2dbidding_2eproto();
  friend void protobuf_ShutdownFile_realtime_2dbidding_2eproto();

  void InitAsDefaultInstance();
  static BidResponse_Ad_TemplateParameter* default_instance_;
};
// -------------------------------------------------------------------

class BidResponse_Ad_AdSlot : public ::google::protobuf::Message {
 public:
  BidResponse_Ad_AdSlot();
  virtual ~BidResponse_Ad_AdSlot();

  BidResponse_Ad_AdSlot(const BidResponse_Ad_AdSlot& from);

  inline BidResponse_Ad_AdSlot& operator=(const BidResponse_Ad_AdSlot& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BidResponse_Ad_AdSlot& default_instance();

  void Swap(BidResponse_Ad_AdSlot* other);

  // implements Message ----------------------------------------------

  inline BidResponse_Ad_AdSlot* New() const { return New(NULL); }

  BidResponse_Ad_AdSlot* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BidResponse_Ad_AdSlot& from);
  void MergeFrom(const BidResponse_Ad_AdSlot& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BidResponse_Ad_AdSlot* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // required int64 max_cpm_micros = 2;
  bool has_max_cpm_micros() const;
  void clear_max_cpm_micros();
  static const int kMaxCpmMicrosFieldNumber = 2;
  ::google::protobuf::int64 max_cpm_micros() const;
  void set_max_cpm_micros(::google::protobuf::int64 value);

  // optional int64 min_cpm_micros = 3;
  bool has_min_cpm_micros() const;
  void clear_min_cpm_micros();
  static const int kMinCpmMicrosFieldNumber = 3;
  ::google::protobuf::int64 min_cpm_micros() const;
  void set_min_cpm_micros(::google::protobuf::int64 value);

  // optional int64 adgroup_id = 4;
  bool has_adgroup_id() const;
  void clear_adgroup_id();
  static const int kAdgroupIdFieldNumber = 4;
  ::google::protobuf::int64 adgroup_id() const;
  void set_adgroup_id(::google::protobuf::int64 value);

  // optional int64 deal_id = 5 [default = 0];
  bool has_deal_id() const;
  void clear_deal_id();
  static const int kDealIdFieldNumber = 5;
  ::google::protobuf::int64 deal_id() const;
  void set_deal_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:BidResponse.Ad.AdSlot)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_max_cpm_micros();
  inline void clear_has_max_cpm_micros();
  inline void set_has_min_cpm_micros();
  inline void clear_has_min_cpm_micros();
  inline void set_has_adgroup_id();
  inline void clear_has_adgroup_id();
  inline void set_has_deal_id();
  inline void clear_has_deal_id();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 max_cpm_micros_;
  ::google::protobuf::int64 min_cpm_micros_;
  ::google::protobuf::int64 adgroup_id_;
  ::google::protobuf::int64 deal_id_;
  ::google::protobuf::int32 id_;
  friend void  protobuf_AddDesc_realtime_2dbidding_2eproto();
  friend void protobuf_AssignDesc_realtime_2dbidding_2eproto();
  friend void protobuf_ShutdownFile_realtime_2dbidding_2eproto();

  void InitAsDefaultInstance();
  static BidResponse_Ad_AdSlot* default_instance_;
};
// -------------------------------------------------------------------

class BidResponse_Ad : public ::google::protobuf::Message {
 public:
  BidResponse_Ad();
  virtual ~BidResponse_Ad();

  BidResponse_Ad(const BidResponse_Ad& from);

  inline BidResponse_Ad& operator=(const BidResponse_Ad& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BidResponse_Ad& default_instance();

  void Swap(BidResponse_Ad* other);

  // implements Message ----------------------------------------------

  inline BidResponse_Ad* New() const { return New(NULL); }

  BidResponse_Ad* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BidResponse_Ad& from);
  void MergeFrom(const BidResponse_Ad& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BidResponse_Ad* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef BidResponse_Ad_TemplateParameter TemplateParameter;
  typedef BidResponse_Ad_AdSlot AdSlot;

  // accessors -------------------------------------------------------

  // optional string buyer_creative_id = 10;
  bool has_buyer_creative_id() const;
  void clear_buyer_creative_id();
  static const int kBuyerCreativeIdFieldNumber = 10;
  const ::std::string& buyer_creative_id() const;
  void set_buyer_creative_id(const ::std::string& value);
  void set_buyer_creative_id(const char* value);
  void set_buyer_creative_id(const char* value, size_t size);
  ::std::string* mutable_buyer_creative_id();
  ::std::string* release_buyer_creative_id();
  void set_allocated_buyer_creative_id(::std::string* buyer_creative_id);

  // optional string html_snippet = 1;
  bool has_html_snippet() const;
  void clear_html_snippet();
  static const int kHtmlSnippetFieldNumber = 1;
  const ::std::string& html_snippet() const;
  void set_html_snippet(const ::std::string& value);
  void set_html_snippet(const char* value);
  void set_html_snippet(const char* value, size_t size);
  ::std::string* mutable_html_snippet();
  ::std::string* release_html_snippet();
  void set_allocated_html_snippet(::std::string* html_snippet);

  // optional string video_url = 9;
  bool has_video_url() const;
  void clear_video_url();
  static const int kVideoUrlFieldNumber = 9;
  const ::std::string& video_url() const;
  void set_video_url(const ::std::string& value);
  void set_video_url(const char* value);
  void set_video_url(const char* value, size_t size);
  ::std::string* mutable_video_url();
  ::std::string* release_video_url();
  void set_allocated_video_url(::std::string* video_url);

  // optional string snippet_template = 12;
  bool has_snippet_template() const;
  void clear_snippet_template();
  static const int kSnippetTemplateFieldNumber = 12;
  const ::std::string& snippet_template() const;
  void set_snippet_template(const ::std::string& value);
  void set_snippet_template(const char* value);
  void set_snippet_template(const char* value, size_t size);
  ::std::string* mutable_snippet_template();
  ::std::string* release_snippet_template();
  void set_allocated_snippet_template(::std::string* snippet_template);

  // repeated .BidResponse.Ad.TemplateParameter template_parameter = 13;
  int template_parameter_size() const;
  void clear_template_parameter();
  static const int kTemplateParameterFieldNumber = 13;
  const ::BidResponse_Ad_TemplateParameter& template_parameter(int index) const;
  ::BidResponse_Ad_TemplateParameter* mutable_template_parameter(int index);
  ::BidResponse_Ad_TemplateParameter* add_template_parameter();
  ::google::protobuf::RepeatedPtrField< ::BidResponse_Ad_TemplateParameter >*
      mutable_template_parameter();
  const ::google::protobuf::RepeatedPtrField< ::BidResponse_Ad_TemplateParameter >&
      template_parameter() const;

  // repeated string click_through_url = 4;
  int click_through_url_size() const;
  void clear_click_through_url();
  static const int kClickThroughUrlFieldNumber = 4;
  const ::std::string& click_through_url(int index) const;
  ::std::string* mutable_click_through_url(int index);
  void set_click_through_url(int index, const ::std::string& value);
  void set_click_through_url(int index, const char* value);
  void set_click_through_url(int index, const char* value, size_t size);
  ::std::string* add_click_through_url();
  void add_click_through_url(const ::std::string& value);
  void add_click_through_url(const char* value);
  void add_click_through_url(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& click_through_url() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_click_through_url();

  // repeated int32 vendor_type = 5;
  int vendor_type_size() const;
  void clear_vendor_type();
  static const int kVendorTypeFieldNumber = 5;
  ::google::protobuf::int32 vendor_type(int index) const;
  void set_vendor_type(int index, ::google::protobuf::int32 value);
  void add_vendor_type(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      vendor_type() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_vendor_type();

  // repeated int32 attribute = 6;
  int attribute_size() const;
  void clear_attribute();
  static const int kAttributeFieldNumber = 6;
  ::google::protobuf::int32 attribute(int index) const;
  void set_attribute(int index, ::google::protobuf::int32 value);
  void add_attribute(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      attribute() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_attribute();

  // repeated int32 category = 7;
  int category_size() const;
  void clear_category();
  static const int kCategoryFieldNumber = 7;
  ::google::protobuf::int32 category(int index) const;
  void set_category(int index, ::google::protobuf::int32 value);
  void add_category(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      category() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_category();

  // repeated int32 restricted_category = 17;
  int restricted_category_size() const;
  void clear_restricted_category();
  static const int kRestrictedCategoryFieldNumber = 17;
  ::google::protobuf::int32 restricted_category(int index) const;
  void set_restricted_category(int index, ::google::protobuf::int32 value);
  void add_restricted_category(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      restricted_category() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_restricted_category();

  // repeated string advertiser_name = 11;
  int advertiser_name_size() const;
  void clear_advertiser_name();
  static const int kAdvertiserNameFieldNumber = 11;
  const ::std::string& advertiser_name(int index) const;
  ::std::string* mutable_advertiser_name(int index);
  void set_advertiser_name(int index, const ::std::string& value);
  void set_advertiser_name(int index, const char* value);
  void set_advertiser_name(int index, const char* value, size_t size);
  ::std::string* add_advertiser_name();
  void add_advertiser_name(const ::std::string& value);
  void add_advertiser_name(const char* value);
  void add_advertiser_name(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& advertiser_name() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_advertiser_name();

  // optional int32 width = 14;
  bool has_width() const;
  void clear_width();
  static const int kWidthFieldNumber = 14;
  ::google::protobuf::int32 width() const;
  void set_width(::google::protobuf::int32 value);

  // optional int32 height = 15;
  bool has_height() const;
  void clear_height();
  static const int kHeightFieldNumber = 15;
  ::google::protobuf::int32 height() const;
  void set_height(::google::protobuf::int32 value);

  // optional int64 agency_id = 16;
  bool has_agency_id() const;
  void clear_agency_id();
  static const int kAgencyIdFieldNumber = 16;
  ::google::protobuf::int64 agency_id() const;
  void set_agency_id(::google::protobuf::int64 value);

  // repeated .BidResponse.Ad.AdSlot adslot = 3;
  int adslot_size() const;
  void clear_adslot();
  static const int kAdslotFieldNumber = 3;
  const ::BidResponse_Ad_AdSlot& adslot(int index) const;
  ::BidResponse_Ad_AdSlot* mutable_adslot(int index);
  ::BidResponse_Ad_AdSlot* add_adslot();
  ::google::protobuf::RepeatedPtrField< ::BidResponse_Ad_AdSlot >*
      mutable_adslot();
  const ::google::protobuf::RepeatedPtrField< ::BidResponse_Ad_AdSlot >&
      adslot() const;

  // optional int64 DEPRECATED_creative_id = 8;
  bool has_deprecated_creative_id() const;
  void clear_deprecated_creative_id();
  static const int kDEPRECATEDCreativeIdFieldNumber = 8;
  ::google::protobuf::int64 deprecated_creative_id() const;
  void set_deprecated_creative_id(::google::protobuf::int64 value);

  // optional string DEPRECATED_click_through_url = 2;
  bool has_deprecated_click_through_url() const;
  void clear_deprecated_click_through_url();
  static const int kDEPRECATEDClickThroughUrlFieldNumber = 2;
  const ::std::string& deprecated_click_through_url() const;
  void set_deprecated_click_through_url(const ::std::string& value);
  void set_deprecated_click_through_url(const char* value);
  void set_deprecated_click_through_url(const char* value, size_t size);
  ::std::string* mutable_deprecated_click_through_url();
  ::std::string* release_deprecated_click_through_url();
  void set_allocated_deprecated_click_through_url(::std::string* deprecated_click_through_url);

  // @@protoc_insertion_point(class_scope:BidResponse.Ad)
 private:
  inline void set_has_buyer_creative_id();
  inline void clear_has_buyer_creative_id();
  inline void set_has_html_snippet();
  inline void clear_has_html_snippet();
  inline void set_has_video_url();
  inline void clear_has_video_url();
  inline void set_has_snippet_template();
  inline void clear_has_snippet_template();
  inline void set_has_width();
  inline void clear_has_width();
  inline void set_has_height();
  inline void clear_has_height();
  inline void set_has_agency_id();
  inline void clear_has_agency_id();
  inline void set_has_deprecated_creative_id();
  inline void clear_has_deprecated_creative_id();
  inline void set_has_deprecated_click_through_url();
  inline void clear_has_deprecated_click_through_url();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr buyer_creative_id_;
  ::google::protobuf::internal::ArenaStringPtr html_snippet_;
  ::google::protobuf::internal::ArenaStringPtr video_url_;
  ::google::protobuf::internal::ArenaStringPtr snippet_template_;
  ::google::protobuf::RepeatedPtrField< ::BidResponse_Ad_TemplateParameter > template_parameter_;
  ::google::protobuf::RepeatedPtrField< ::std::string> click_through_url_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > vendor_type_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > attribute_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > category_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > restricted_category_;
  ::google::protobuf::RepeatedPtrField< ::std::string> advertiser_name_;
  ::google::protobuf::int32 width_;
  ::google::protobuf::int32 height_;
  ::google::protobuf::int64 agency_id_;
  ::google::protobuf::RepeatedPtrField< ::BidResponse_Ad_AdSlot > adslot_;
  ::google::protobuf::int64 deprecated_creative_id_;
  ::google::protobuf::internal::ArenaStringPtr deprecated_click_through_url_;
  friend void  protobuf_AddDesc_realtime_2dbidding_2eproto();
  friend void protobuf_AssignDesc_realtime_2dbidding_2eproto();
  friend void protobuf_ShutdownFile_realtime_2dbidding_2eproto();

  void InitAsDefaultInstance();
  static BidResponse_Ad* default_instance_;
};
// -------------------------------------------------------------------

class BidResponse : public ::google::protobuf::Message {
 public:
  BidResponse();
  virtual ~BidResponse();

  BidResponse(const BidResponse& from);

  inline BidResponse& operator=(const BidResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BidResponse& default_instance();

  void Swap(BidResponse* other);

  // implements Message ----------------------------------------------

  inline BidResponse* New() const { return New(NULL); }

  BidResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BidResponse& from);
  void MergeFrom(const BidResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BidResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef BidResponse_Ad Ad;

  // accessors -------------------------------------------------------

  // repeated .BidResponse.Ad ad = 2;
  int ad_size() const;
  void clear_ad();
  static const int kAdFieldNumber = 2;
  const ::BidResponse_Ad& ad(int index) const;
  ::BidResponse_Ad* mutable_ad(int index);
  ::BidResponse_Ad* add_ad();
  ::google::protobuf::RepeatedPtrField< ::BidResponse_Ad >*
      mutable_ad();
  const ::google::protobuf::RepeatedPtrField< ::BidResponse_Ad >&
      ad() const;

  // optional string debug_string = 5;
  bool has_debug_string() const;
  void clear_debug_string();
  static const int kDebugStringFieldNumber = 5;
  const ::std::string& debug_string() const;
  void set_debug_string(const ::std::string& value);
  void set_debug_string(const char* value);
  void set_debug_string(const char* value, size_t size);
  ::std::string* mutable_debug_string();
  ::std::string* release_debug_string();
  void set_allocated_debug_string(::std::string* debug_string);

  // optional int32 processing_time_ms = 4;
  bool has_processing_time_ms() const;
  void clear_processing_time_ms();
  static const int kProcessingTimeMsFieldNumber = 4;
  ::google::protobuf::int32 processing_time_ms() const;
  void set_processing_time_ms(::google::protobuf::int32 value);

  // optional int32 DEPRECATED_protocol_version = 1;
  bool has_deprecated_protocol_version() const;
  void clear_deprecated_protocol_version();
  static const int kDEPRECATEDProtocolVersionFieldNumber = 1;
  ::google::protobuf::int32 deprecated_protocol_version() const;
  void set_deprecated_protocol_version(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:BidResponse)
 private:
  inline void set_has_debug_string();
  inline void clear_has_debug_string();
  inline void set_has_processing_time_ms();
  inline void clear_has_processing_time_ms();
  inline void set_has_deprecated_protocol_version();
  inline void clear_has_deprecated_protocol_version();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::BidResponse_Ad > ad_;
  ::google::protobuf::internal::ArenaStringPtr debug_string_;
  ::google::protobuf::int32 processing_time_ms_;
  ::google::protobuf::int32 deprecated_protocol_version_;
  friend void  protobuf_AddDesc_realtime_2dbidding_2eproto();
  friend void protobuf_AssignDesc_realtime_2dbidding_2eproto();
  friend void protobuf_ShutdownFile_realtime_2dbidding_2eproto();

  void InitAsDefaultInstance();
  static BidResponse* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// BidRequest_Hyperlocal_Point

// optional float latitude = 1;
inline bool BidRequest_Hyperlocal_Point::has_latitude() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BidRequest_Hyperlocal_Point::set_has_latitude() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BidRequest_Hyperlocal_Point::clear_has_latitude() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BidRequest_Hyperlocal_Point::clear_latitude() {
  latitude_ = 0;
  clear_has_latitude();
}
inline float BidRequest_Hyperlocal_Point::latitude() const {
  // @@protoc_insertion_point(field_get:BidRequest.Hyperlocal.Point.latitude)
  return latitude_;
}
inline void BidRequest_Hyperlocal_Point::set_latitude(float value) {
  set_has_latitude();
  latitude_ = value;
  // @@protoc_insertion_point(field_set:BidRequest.Hyperlocal.Point.latitude)
}

// optional float longitude = 2;
inline bool BidRequest_Hyperlocal_Point::has_longitude() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BidRequest_Hyperlocal_Point::set_has_longitude() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BidRequest_Hyperlocal_Point::clear_has_longitude() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BidRequest_Hyperlocal_Point::clear_longitude() {
  longitude_ = 0;
  clear_has_longitude();
}
inline float BidRequest_Hyperlocal_Point::longitude() const {
  // @@protoc_insertion_point(field_get:BidRequest.Hyperlocal.Point.longitude)
  return longitude_;
}
inline void BidRequest_Hyperlocal_Point::set_longitude(float value) {
  set_has_longitude();
  longitude_ = value;
  // @@protoc_insertion_point(field_set:BidRequest.Hyperlocal.Point.longitude)
}

// -------------------------------------------------------------------

// BidRequest_Hyperlocal

// repeated .BidRequest.Hyperlocal.Point corners = 1;
inline int BidRequest_Hyperlocal::corners_size() const {
  return corners_.size();
}
inline void BidRequest_Hyperlocal::clear_corners() {
  corners_.Clear();
}
inline const ::BidRequest_Hyperlocal_Point& BidRequest_Hyperlocal::corners(int index) const {
  // @@protoc_insertion_point(field_get:BidRequest.Hyperlocal.corners)
  return corners_.Get(index);
}
inline ::BidRequest_Hyperlocal_Point* BidRequest_Hyperlocal::mutable_corners(int index) {
  // @@protoc_insertion_point(field_mutable:BidRequest.Hyperlocal.corners)
  return corners_.Mutable(index);
}
inline ::BidRequest_Hyperlocal_Point* BidRequest_Hyperlocal::add_corners() {
  // @@protoc_insertion_point(field_add:BidRequest.Hyperlocal.corners)
  return corners_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::BidRequest_Hyperlocal_Point >*
BidRequest_Hyperlocal::mutable_corners() {
  // @@protoc_insertion_point(field_mutable_list:BidRequest.Hyperlocal.corners)
  return &corners_;
}
inline const ::google::protobuf::RepeatedPtrField< ::BidRequest_Hyperlocal_Point >&
BidRequest_Hyperlocal::corners() const {
  // @@protoc_insertion_point(field_list:BidRequest.Hyperlocal.corners)
  return corners_;
}

// -------------------------------------------------------------------

// BidRequest_HyperlocalSet

// repeated .BidRequest.Hyperlocal hyperlocal = 1;
inline int BidRequest_HyperlocalSet::hyperlocal_size() const {
  return hyperlocal_.size();
}
inline void BidRequest_HyperlocalSet::clear_hyperlocal() {
  hyperlocal_.Clear();
}
inline const ::BidRequest_Hyperlocal& BidRequest_HyperlocalSet::hyperlocal(int index) const {
  // @@protoc_insertion_point(field_get:BidRequest.HyperlocalSet.hyperlocal)
  return hyperlocal_.Get(index);
}
inline ::BidRequest_Hyperlocal* BidRequest_HyperlocalSet::mutable_hyperlocal(int index) {
  // @@protoc_insertion_point(field_mutable:BidRequest.HyperlocalSet.hyperlocal)
  return hyperlocal_.Mutable(index);
}
inline ::BidRequest_Hyperlocal* BidRequest_HyperlocalSet::add_hyperlocal() {
  // @@protoc_insertion_point(field_add:BidRequest.HyperlocalSet.hyperlocal)
  return hyperlocal_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::BidRequest_Hyperlocal >*
BidRequest_HyperlocalSet::mutable_hyperlocal() {
  // @@protoc_insertion_point(field_mutable_list:BidRequest.HyperlocalSet.hyperlocal)
  return &hyperlocal_;
}
inline const ::google::protobuf::RepeatedPtrField< ::BidRequest_Hyperlocal >&
BidRequest_HyperlocalSet::hyperlocal() const {
  // @@protoc_insertion_point(field_list:BidRequest.HyperlocalSet.hyperlocal)
  return hyperlocal_;
}

// optional .BidRequest.Hyperlocal.Point center_point = 2;
inline bool BidRequest_HyperlocalSet::has_center_point() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BidRequest_HyperlocalSet::set_has_center_point() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BidRequest_HyperlocalSet::clear_has_center_point() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BidRequest_HyperlocalSet::clear_center_point() {
  if (center_point_ != NULL) center_point_->::BidRequest_Hyperlocal_Point::Clear();
  clear_has_center_point();
}
inline const ::BidRequest_Hyperlocal_Point& BidRequest_HyperlocalSet::center_point() const {
  // @@protoc_insertion_point(field_get:BidRequest.HyperlocalSet.center_point)
  return center_point_ != NULL ? *center_point_ : *default_instance_->center_point_;
}
inline ::BidRequest_Hyperlocal_Point* BidRequest_HyperlocalSet::mutable_center_point() {
  set_has_center_point();
  if (center_point_ == NULL) {
    center_point_ = new ::BidRequest_Hyperlocal_Point;
  }
  // @@protoc_insertion_point(field_mutable:BidRequest.HyperlocalSet.center_point)
  return center_point_;
}
inline ::BidRequest_Hyperlocal_Point* BidRequest_HyperlocalSet::release_center_point() {
  clear_has_center_point();
  ::BidRequest_Hyperlocal_Point* temp = center_point_;
  center_point_ = NULL;
  return temp;
}
inline void BidRequest_HyperlocalSet::set_allocated_center_point(::BidRequest_Hyperlocal_Point* center_point) {
  delete center_point_;
  center_point_ = center_point;
  if (center_point) {
    set_has_center_point();
  } else {
    clear_has_center_point();
  }
  // @@protoc_insertion_point(field_set_allocated:BidRequest.HyperlocalSet.center_point)
}

// -------------------------------------------------------------------

// BidRequest_UserList

// optional int64 id = 1;
inline bool BidRequest_UserList::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BidRequest_UserList::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BidRequest_UserList::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BidRequest_UserList::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::int64 BidRequest_UserList::id() const {
  // @@protoc_insertion_point(field_get:BidRequest.UserList.id)
  return id_;
}
inline void BidRequest_UserList::set_id(::google::protobuf::int64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:BidRequest.UserList.id)
}

// optional int32 age_seconds = 2;
inline bool BidRequest_UserList::has_age_seconds() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BidRequest_UserList::set_has_age_seconds() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BidRequest_UserList::clear_has_age_seconds() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BidRequest_UserList::clear_age_seconds() {
  age_seconds_ = 0;
  clear_has_age_seconds();
}
inline ::google::protobuf::int32 BidRequest_UserList::age_seconds() const {
  // @@protoc_insertion_point(field_get:BidRequest.UserList.age_seconds)
  return age_seconds_;
}
inline void BidRequest_UserList::set_age_seconds(::google::protobuf::int32 value) {
  set_has_age_seconds();
  age_seconds_ = value;
  // @@protoc_insertion_point(field_set:BidRequest.UserList.age_seconds)
}

// -------------------------------------------------------------------

// BidRequest_Vertical

// required int32 id = 1;
inline bool BidRequest_Vertical::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BidRequest_Vertical::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BidRequest_Vertical::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BidRequest_Vertical::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 BidRequest_Vertical::id() const {
  // @@protoc_insertion_point(field_get:BidRequest.Vertical.id)
  return id_;
}
inline void BidRequest_Vertical::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:BidRequest.Vertical.id)
}

// required float weight = 2;
inline bool BidRequest_Vertical::has_weight() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BidRequest_Vertical::set_has_weight() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BidRequest_Vertical::clear_has_weight() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BidRequest_Vertical::clear_weight() {
  weight_ = 0;
  clear_has_weight();
}
inline float BidRequest_Vertical::weight() const {
  // @@protoc_insertion_point(field_get:BidRequest.Vertical.weight)
  return weight_;
}
inline void BidRequest_Vertical::set_weight(float value) {
  set_has_weight();
  weight_ = value;
  // @@protoc_insertion_point(field_set:BidRequest.Vertical.weight)
}

// -------------------------------------------------------------------

// BidRequest_KeyValue

// optional string key = 1;
inline bool BidRequest_KeyValue::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BidRequest_KeyValue::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BidRequest_KeyValue::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BidRequest_KeyValue::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_key();
}
inline const ::std::string& BidRequest_KeyValue::key() const {
  // @@protoc_insertion_point(field_get:BidRequest.KeyValue.key)
  return key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidRequest_KeyValue::set_key(const ::std::string& value) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:BidRequest.KeyValue.key)
}
inline void BidRequest_KeyValue::set_key(const char* value) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:BidRequest.KeyValue.key)
}
inline void BidRequest_KeyValue::set_key(const char* value, size_t size) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:BidRequest.KeyValue.key)
}
inline ::std::string* BidRequest_KeyValue::mutable_key() {
  set_has_key();
  // @@protoc_insertion_point(field_mutable:BidRequest.KeyValue.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BidRequest_KeyValue::release_key() {
  clear_has_key();
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidRequest_KeyValue::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    set_has_key();
  } else {
    clear_has_key();
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:BidRequest.KeyValue.key)
}

// optional string value = 2;
inline bool BidRequest_KeyValue::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BidRequest_KeyValue::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BidRequest_KeyValue::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BidRequest_KeyValue::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_value();
}
inline const ::std::string& BidRequest_KeyValue::value() const {
  // @@protoc_insertion_point(field_get:BidRequest.KeyValue.value)
  return value_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidRequest_KeyValue::set_value(const ::std::string& value) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:BidRequest.KeyValue.value)
}
inline void BidRequest_KeyValue::set_value(const char* value) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:BidRequest.KeyValue.value)
}
inline void BidRequest_KeyValue::set_value(const char* value, size_t size) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:BidRequest.KeyValue.value)
}
inline ::std::string* BidRequest_KeyValue::mutable_value() {
  set_has_value();
  // @@protoc_insertion_point(field_mutable:BidRequest.KeyValue.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BidRequest_KeyValue::release_value() {
  clear_has_value();
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidRequest_KeyValue::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    set_has_value();
  } else {
    clear_has_value();
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:BidRequest.KeyValue.value)
}

// -------------------------------------------------------------------

// BidRequest_Mobile_DeviceOsVersion

// optional int32 os_version_major = 1;
inline bool BidRequest_Mobile_DeviceOsVersion::has_os_version_major() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BidRequest_Mobile_DeviceOsVersion::set_has_os_version_major() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BidRequest_Mobile_DeviceOsVersion::clear_has_os_version_major() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BidRequest_Mobile_DeviceOsVersion::clear_os_version_major() {
  os_version_major_ = 0;
  clear_has_os_version_major();
}
inline ::google::protobuf::int32 BidRequest_Mobile_DeviceOsVersion::os_version_major() const {
  // @@protoc_insertion_point(field_get:BidRequest.Mobile.DeviceOsVersion.os_version_major)
  return os_version_major_;
}
inline void BidRequest_Mobile_DeviceOsVersion::set_os_version_major(::google::protobuf::int32 value) {
  set_has_os_version_major();
  os_version_major_ = value;
  // @@protoc_insertion_point(field_set:BidRequest.Mobile.DeviceOsVersion.os_version_major)
}

// optional int32 os_version_minor = 2;
inline bool BidRequest_Mobile_DeviceOsVersion::has_os_version_minor() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BidRequest_Mobile_DeviceOsVersion::set_has_os_version_minor() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BidRequest_Mobile_DeviceOsVersion::clear_has_os_version_minor() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BidRequest_Mobile_DeviceOsVersion::clear_os_version_minor() {
  os_version_minor_ = 0;
  clear_has_os_version_minor();
}
inline ::google::protobuf::int32 BidRequest_Mobile_DeviceOsVersion::os_version_minor() const {
  // @@protoc_insertion_point(field_get:BidRequest.Mobile.DeviceOsVersion.os_version_minor)
  return os_version_minor_;
}
inline void BidRequest_Mobile_DeviceOsVersion::set_os_version_minor(::google::protobuf::int32 value) {
  set_has_os_version_minor();
  os_version_minor_ = value;
  // @@protoc_insertion_point(field_set:BidRequest.Mobile.DeviceOsVersion.os_version_minor)
}

// optional int32 os_version_micro = 3;
inline bool BidRequest_Mobile_DeviceOsVersion::has_os_version_micro() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BidRequest_Mobile_DeviceOsVersion::set_has_os_version_micro() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BidRequest_Mobile_DeviceOsVersion::clear_has_os_version_micro() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BidRequest_Mobile_DeviceOsVersion::clear_os_version_micro() {
  os_version_micro_ = 0;
  clear_has_os_version_micro();
}
inline ::google::protobuf::int32 BidRequest_Mobile_DeviceOsVersion::os_version_micro() const {
  // @@protoc_insertion_point(field_get:BidRequest.Mobile.DeviceOsVersion.os_version_micro)
  return os_version_micro_;
}
inline void BidRequest_Mobile_DeviceOsVersion::set_os_version_micro(::google::protobuf::int32 value) {
  set_has_os_version_micro();
  os_version_micro_ = value;
  // @@protoc_insertion_point(field_set:BidRequest.Mobile.DeviceOsVersion.os_version_micro)
}

// -------------------------------------------------------------------

// BidRequest_Mobile

// optional string platform = 3;
inline bool BidRequest_Mobile::has_platform() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BidRequest_Mobile::set_has_platform() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BidRequest_Mobile::clear_has_platform() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BidRequest_Mobile::clear_platform() {
  platform_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_platform();
}
inline const ::std::string& BidRequest_Mobile::platform() const {
  // @@protoc_insertion_point(field_get:BidRequest.Mobile.platform)
  return platform_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidRequest_Mobile::set_platform(const ::std::string& value) {
  set_has_platform();
  platform_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:BidRequest.Mobile.platform)
}
inline void BidRequest_Mobile::set_platform(const char* value) {
  set_has_platform();
  platform_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:BidRequest.Mobile.platform)
}
inline void BidRequest_Mobile::set_platform(const char* value, size_t size) {
  set_has_platform();
  platform_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:BidRequest.Mobile.platform)
}
inline ::std::string* BidRequest_Mobile::mutable_platform() {
  set_has_platform();
  // @@protoc_insertion_point(field_mutable:BidRequest.Mobile.platform)
  return platform_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BidRequest_Mobile::release_platform() {
  clear_has_platform();
  return platform_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidRequest_Mobile::set_allocated_platform(::std::string* platform) {
  if (platform != NULL) {
    set_has_platform();
  } else {
    clear_has_platform();
  }
  platform_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), platform);
  // @@protoc_insertion_point(field_set_allocated:BidRequest.Mobile.platform)
}

// optional string brand = 12;
inline bool BidRequest_Mobile::has_brand() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BidRequest_Mobile::set_has_brand() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BidRequest_Mobile::clear_has_brand() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BidRequest_Mobile::clear_brand() {
  brand_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_brand();
}
inline const ::std::string& BidRequest_Mobile::brand() const {
  // @@protoc_insertion_point(field_get:BidRequest.Mobile.brand)
  return brand_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidRequest_Mobile::set_brand(const ::std::string& value) {
  set_has_brand();
  brand_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:BidRequest.Mobile.brand)
}
inline void BidRequest_Mobile::set_brand(const char* value) {
  set_has_brand();
  brand_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:BidRequest.Mobile.brand)
}
inline void BidRequest_Mobile::set_brand(const char* value, size_t size) {
  set_has_brand();
  brand_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:BidRequest.Mobile.brand)
}
inline ::std::string* BidRequest_Mobile::mutable_brand() {
  set_has_brand();
  // @@protoc_insertion_point(field_mutable:BidRequest.Mobile.brand)
  return brand_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BidRequest_Mobile::release_brand() {
  clear_has_brand();
  return brand_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidRequest_Mobile::set_allocated_brand(::std::string* brand) {
  if (brand != NULL) {
    set_has_brand();
  } else {
    clear_has_brand();
  }
  brand_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), brand);
  // @@protoc_insertion_point(field_set_allocated:BidRequest.Mobile.brand)
}

// optional string model = 13;
inline bool BidRequest_Mobile::has_model() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BidRequest_Mobile::set_has_model() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BidRequest_Mobile::clear_has_model() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BidRequest_Mobile::clear_model() {
  model_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_model();
}
inline const ::std::string& BidRequest_Mobile::model() const {
  // @@protoc_insertion_point(field_get:BidRequest.Mobile.model)
  return model_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidRequest_Mobile::set_model(const ::std::string& value) {
  set_has_model();
  model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:BidRequest.Mobile.model)
}
inline void BidRequest_Mobile::set_model(const char* value) {
  set_has_model();
  model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:BidRequest.Mobile.model)
}
inline void BidRequest_Mobile::set_model(const char* value, size_t size) {
  set_has_model();
  model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:BidRequest.Mobile.model)
}
inline ::std::string* BidRequest_Mobile::mutable_model() {
  set_has_model();
  // @@protoc_insertion_point(field_mutable:BidRequest.Mobile.model)
  return model_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BidRequest_Mobile::release_model() {
  clear_has_model();
  return model_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidRequest_Mobile::set_allocated_model(::std::string* model) {
  if (model != NULL) {
    set_has_model();
  } else {
    clear_has_model();
  }
  model_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), model);
  // @@protoc_insertion_point(field_set_allocated:BidRequest.Mobile.model)
}

// optional .BidRequest.Mobile.DeviceOsVersion os_version = 14;
inline bool BidRequest_Mobile::has_os_version() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BidRequest_Mobile::set_has_os_version() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BidRequest_Mobile::clear_has_os_version() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BidRequest_Mobile::clear_os_version() {
  if (os_version_ != NULL) os_version_->::BidRequest_Mobile_DeviceOsVersion::Clear();
  clear_has_os_version();
}
inline const ::BidRequest_Mobile_DeviceOsVersion& BidRequest_Mobile::os_version() const {
  // @@protoc_insertion_point(field_get:BidRequest.Mobile.os_version)
  return os_version_ != NULL ? *os_version_ : *default_instance_->os_version_;
}
inline ::BidRequest_Mobile_DeviceOsVersion* BidRequest_Mobile::mutable_os_version() {
  set_has_os_version();
  if (os_version_ == NULL) {
    os_version_ = new ::BidRequest_Mobile_DeviceOsVersion;
  }
  // @@protoc_insertion_point(field_mutable:BidRequest.Mobile.os_version)
  return os_version_;
}
inline ::BidRequest_Mobile_DeviceOsVersion* BidRequest_Mobile::release_os_version() {
  clear_has_os_version();
  ::BidRequest_Mobile_DeviceOsVersion* temp = os_version_;
  os_version_ = NULL;
  return temp;
}
inline void BidRequest_Mobile::set_allocated_os_version(::BidRequest_Mobile_DeviceOsVersion* os_version) {
  delete os_version_;
  os_version_ = os_version;
  if (os_version) {
    set_has_os_version();
  } else {
    clear_has_os_version();
  }
  // @@protoc_insertion_point(field_set_allocated:BidRequest.Mobile.os_version)
}

// optional int64 carrier_id = 18;
inline bool BidRequest_Mobile::has_carrier_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BidRequest_Mobile::set_has_carrier_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BidRequest_Mobile::clear_has_carrier_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BidRequest_Mobile::clear_carrier_id() {
  carrier_id_ = GOOGLE_LONGLONG(0);
  clear_has_carrier_id();
}
inline ::google::protobuf::int64 BidRequest_Mobile::carrier_id() const {
  // @@protoc_insertion_point(field_get:BidRequest.Mobile.carrier_id)
  return carrier_id_;
}
inline void BidRequest_Mobile::set_carrier_id(::google::protobuf::int64 value) {
  set_has_carrier_id();
  carrier_id_ = value;
  // @@protoc_insertion_point(field_set:BidRequest.Mobile.carrier_id)
}

// optional bool is_app = 7 [default = false];
inline bool BidRequest_Mobile::has_is_app() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void BidRequest_Mobile::set_has_is_app() {
  _has_bits_[0] |= 0x00000020u;
}
inline void BidRequest_Mobile::clear_has_is_app() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void BidRequest_Mobile::clear_is_app() {
  is_app_ = false;
  clear_has_is_app();
}
inline bool BidRequest_Mobile::is_app() const {
  // @@protoc_insertion_point(field_get:BidRequest.Mobile.is_app)
  return is_app_;
}
inline void BidRequest_Mobile::set_is_app(bool value) {
  set_has_is_app();
  is_app_ = value;
  // @@protoc_insertion_point(field_set:BidRequest.Mobile.is_app)
}

// optional string app_id = 6;
inline bool BidRequest_Mobile::has_app_id() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void BidRequest_Mobile::set_has_app_id() {
  _has_bits_[0] |= 0x00000040u;
}
inline void BidRequest_Mobile::clear_has_app_id() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void BidRequest_Mobile::clear_app_id() {
  app_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_app_id();
}
inline const ::std::string& BidRequest_Mobile::app_id() const {
  // @@protoc_insertion_point(field_get:BidRequest.Mobile.app_id)
  return app_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidRequest_Mobile::set_app_id(const ::std::string& value) {
  set_has_app_id();
  app_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:BidRequest.Mobile.app_id)
}
inline void BidRequest_Mobile::set_app_id(const char* value) {
  set_has_app_id();
  app_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:BidRequest.Mobile.app_id)
}
inline void BidRequest_Mobile::set_app_id(const char* value, size_t size) {
  set_has_app_id();
  app_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:BidRequest.Mobile.app_id)
}
inline ::std::string* BidRequest_Mobile::mutable_app_id() {
  set_has_app_id();
  // @@protoc_insertion_point(field_mutable:BidRequest.Mobile.app_id)
  return app_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BidRequest_Mobile::release_app_id() {
  clear_has_app_id();
  return app_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidRequest_Mobile::set_allocated_app_id(::std::string* app_id) {
  if (app_id != NULL) {
    set_has_app_id();
  } else {
    clear_has_app_id();
  }
  app_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), app_id);
  // @@protoc_insertion_point(field_set_allocated:BidRequest.Mobile.app_id)
}

// optional .BidRequest.Mobile.MobileDeviceType mobile_device_type = 8 [default = UNKNOWN];
inline bool BidRequest_Mobile::has_mobile_device_type() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void BidRequest_Mobile::set_has_mobile_device_type() {
  _has_bits_[0] |= 0x00000080u;
}
inline void BidRequest_Mobile::clear_has_mobile_device_type() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void BidRequest_Mobile::clear_mobile_device_type() {
  mobile_device_type_ = 0;
  clear_has_mobile_device_type();
}
inline ::BidRequest_Mobile_MobileDeviceType BidRequest_Mobile::mobile_device_type() const {
  // @@protoc_insertion_point(field_get:BidRequest.Mobile.mobile_device_type)
  return static_cast< ::BidRequest_Mobile_MobileDeviceType >(mobile_device_type_);
}
inline void BidRequest_Mobile::set_mobile_device_type(::BidRequest_Mobile_MobileDeviceType value) {
  assert(::BidRequest_Mobile_MobileDeviceType_IsValid(value));
  set_has_mobile_device_type();
  mobile_device_type_ = value;
  // @@protoc_insertion_point(field_set:BidRequest.Mobile.mobile_device_type)
}

// optional int32 screen_width = 15;
inline bool BidRequest_Mobile::has_screen_width() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void BidRequest_Mobile::set_has_screen_width() {
  _has_bits_[0] |= 0x00000100u;
}
inline void BidRequest_Mobile::clear_has_screen_width() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void BidRequest_Mobile::clear_screen_width() {
  screen_width_ = 0;
  clear_has_screen_width();
}
inline ::google::protobuf::int32 BidRequest_Mobile::screen_width() const {
  // @@protoc_insertion_point(field_get:BidRequest.Mobile.screen_width)
  return screen_width_;
}
inline void BidRequest_Mobile::set_screen_width(::google::protobuf::int32 value) {
  set_has_screen_width();
  screen_width_ = value;
  // @@protoc_insertion_point(field_set:BidRequest.Mobile.screen_width)
}

// optional int32 screen_height = 16;
inline bool BidRequest_Mobile::has_screen_height() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void BidRequest_Mobile::set_has_screen_height() {
  _has_bits_[0] |= 0x00000200u;
}
inline void BidRequest_Mobile::clear_has_screen_height() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void BidRequest_Mobile::clear_screen_height() {
  screen_height_ = 0;
  clear_has_screen_height();
}
inline ::google::protobuf::int32 BidRequest_Mobile::screen_height() const {
  // @@protoc_insertion_point(field_get:BidRequest.Mobile.screen_height)
  return screen_height_;
}
inline void BidRequest_Mobile::set_screen_height(::google::protobuf::int32 value) {
  set_has_screen_height();
  screen_height_ = value;
  // @@protoc_insertion_point(field_set:BidRequest.Mobile.screen_height)
}

// optional int32 screen_orientation = 9 [default = 0];
inline bool BidRequest_Mobile::has_screen_orientation() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void BidRequest_Mobile::set_has_screen_orientation() {
  _has_bits_[0] |= 0x00000400u;
}
inline void BidRequest_Mobile::clear_has_screen_orientation() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void BidRequest_Mobile::clear_screen_orientation() {
  screen_orientation_ = 0;
  clear_has_screen_orientation();
}
inline ::google::protobuf::int32 BidRequest_Mobile::screen_orientation() const {
  // @@protoc_insertion_point(field_get:BidRequest.Mobile.screen_orientation)
  return screen_orientation_;
}
inline void BidRequest_Mobile::set_screen_orientation(::google::protobuf::int32 value) {
  set_has_screen_orientation();
  screen_orientation_ = value;
  // @@protoc_insertion_point(field_set:BidRequest.Mobile.screen_orientation)
}

// optional bool is_interstitial_request = 10 [default = false];
inline bool BidRequest_Mobile::has_is_interstitial_request() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void BidRequest_Mobile::set_has_is_interstitial_request() {
  _has_bits_[0] |= 0x00000800u;
}
inline void BidRequest_Mobile::clear_has_is_interstitial_request() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void BidRequest_Mobile::clear_is_interstitial_request() {
  is_interstitial_request_ = false;
  clear_has_is_interstitial_request();
}
inline bool BidRequest_Mobile::is_interstitial_request() const {
  // @@protoc_insertion_point(field_get:BidRequest.Mobile.is_interstitial_request)
  return is_interstitial_request_;
}
inline void BidRequest_Mobile::set_is_interstitial_request(bool value) {
  set_has_is_interstitial_request();
  is_interstitial_request_ = value;
  // @@protoc_insertion_point(field_set:BidRequest.Mobile.is_interstitial_request)
}

// repeated int32 app_category_ids = 11;
inline int BidRequest_Mobile::app_category_ids_size() const {
  return app_category_ids_.size();
}
inline void BidRequest_Mobile::clear_app_category_ids() {
  app_category_ids_.Clear();
}
inline ::google::protobuf::int32 BidRequest_Mobile::app_category_ids(int index) const {
  // @@protoc_insertion_point(field_get:BidRequest.Mobile.app_category_ids)
  return app_category_ids_.Get(index);
}
inline void BidRequest_Mobile::set_app_category_ids(int index, ::google::protobuf::int32 value) {
  app_category_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:BidRequest.Mobile.app_category_ids)
}
inline void BidRequest_Mobile::add_app_category_ids(::google::protobuf::int32 value) {
  app_category_ids_.Add(value);
  // @@protoc_insertion_point(field_add:BidRequest.Mobile.app_category_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
BidRequest_Mobile::app_category_ids() const {
  // @@protoc_insertion_point(field_list:BidRequest.Mobile.app_category_ids)
  return app_category_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
BidRequest_Mobile::mutable_app_category_ids() {
  // @@protoc_insertion_point(field_mutable_list:BidRequest.Mobile.app_category_ids)
  return &app_category_ids_;
}

// optional bool is_mobile_web_optimized = 17 [default = false];
inline bool BidRequest_Mobile::has_is_mobile_web_optimized() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void BidRequest_Mobile::set_has_is_mobile_web_optimized() {
  _has_bits_[0] |= 0x00002000u;
}
inline void BidRequest_Mobile::clear_has_is_mobile_web_optimized() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void BidRequest_Mobile::clear_is_mobile_web_optimized() {
  is_mobile_web_optimized_ = false;
  clear_has_is_mobile_web_optimized();
}
inline bool BidRequest_Mobile::is_mobile_web_optimized() const {
  // @@protoc_insertion_point(field_get:BidRequest.Mobile.is_mobile_web_optimized)
  return is_mobile_web_optimized_;
}
inline void BidRequest_Mobile::set_is_mobile_web_optimized(bool value) {
  set_has_is_mobile_web_optimized();
  is_mobile_web_optimized_ = value;
  // @@protoc_insertion_point(field_set:BidRequest.Mobile.is_mobile_web_optimized)
}

// optional int32 device_pixel_ratio_millis = 19 [default = 1000];
inline bool BidRequest_Mobile::has_device_pixel_ratio_millis() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void BidRequest_Mobile::set_has_device_pixel_ratio_millis() {
  _has_bits_[0] |= 0x00004000u;
}
inline void BidRequest_Mobile::clear_has_device_pixel_ratio_millis() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void BidRequest_Mobile::clear_device_pixel_ratio_millis() {
  device_pixel_ratio_millis_ = 1000;
  clear_has_device_pixel_ratio_millis();
}
inline ::google::protobuf::int32 BidRequest_Mobile::device_pixel_ratio_millis() const {
  // @@protoc_insertion_point(field_get:BidRequest.Mobile.device_pixel_ratio_millis)
  return device_pixel_ratio_millis_;
}
inline void BidRequest_Mobile::set_device_pixel_ratio_millis(::google::protobuf::int32 value) {
  set_has_device_pixel_ratio_millis();
  device_pixel_ratio_millis_ = value;
  // @@protoc_insertion_point(field_set:BidRequest.Mobile.device_pixel_ratio_millis)
}

// optional bytes encrypted_advertising_id = 20;
inline bool BidRequest_Mobile::has_encrypted_advertising_id() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void BidRequest_Mobile::set_has_encrypted_advertising_id() {
  _has_bits_[0] |= 0x00008000u;
}
inline void BidRequest_Mobile::clear_has_encrypted_advertising_id() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void BidRequest_Mobile::clear_encrypted_advertising_id() {
  encrypted_advertising_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_encrypted_advertising_id();
}
inline const ::std::string& BidRequest_Mobile::encrypted_advertising_id() const {
  // @@protoc_insertion_point(field_get:BidRequest.Mobile.encrypted_advertising_id)
  return encrypted_advertising_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidRequest_Mobile::set_encrypted_advertising_id(const ::std::string& value) {
  set_has_encrypted_advertising_id();
  encrypted_advertising_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:BidRequest.Mobile.encrypted_advertising_id)
}
inline void BidRequest_Mobile::set_encrypted_advertising_id(const char* value) {
  set_has_encrypted_advertising_id();
  encrypted_advertising_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:BidRequest.Mobile.encrypted_advertising_id)
}
inline void BidRequest_Mobile::set_encrypted_advertising_id(const void* value, size_t size) {
  set_has_encrypted_advertising_id();
  encrypted_advertising_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:BidRequest.Mobile.encrypted_advertising_id)
}
inline ::std::string* BidRequest_Mobile::mutable_encrypted_advertising_id() {
  set_has_encrypted_advertising_id();
  // @@protoc_insertion_point(field_mutable:BidRequest.Mobile.encrypted_advertising_id)
  return encrypted_advertising_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BidRequest_Mobile::release_encrypted_advertising_id() {
  clear_has_encrypted_advertising_id();
  return encrypted_advertising_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidRequest_Mobile::set_allocated_encrypted_advertising_id(::std::string* encrypted_advertising_id) {
  if (encrypted_advertising_id != NULL) {
    set_has_encrypted_advertising_id();
  } else {
    clear_has_encrypted_advertising_id();
  }
  encrypted_advertising_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), encrypted_advertising_id);
  // @@protoc_insertion_point(field_set_allocated:BidRequest.Mobile.encrypted_advertising_id)
}

// optional bytes encrypted_hashed_idfa = 21;
inline bool BidRequest_Mobile::has_encrypted_hashed_idfa() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void BidRequest_Mobile::set_has_encrypted_hashed_idfa() {
  _has_bits_[0] |= 0x00010000u;
}
inline void BidRequest_Mobile::clear_has_encrypted_hashed_idfa() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void BidRequest_Mobile::clear_encrypted_hashed_idfa() {
  encrypted_hashed_idfa_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_encrypted_hashed_idfa();
}
inline const ::std::string& BidRequest_Mobile::encrypted_hashed_idfa() const {
  // @@protoc_insertion_point(field_get:BidRequest.Mobile.encrypted_hashed_idfa)
  return encrypted_hashed_idfa_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidRequest_Mobile::set_encrypted_hashed_idfa(const ::std::string& value) {
  set_has_encrypted_hashed_idfa();
  encrypted_hashed_idfa_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:BidRequest.Mobile.encrypted_hashed_idfa)
}
inline void BidRequest_Mobile::set_encrypted_hashed_idfa(const char* value) {
  set_has_encrypted_hashed_idfa();
  encrypted_hashed_idfa_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:BidRequest.Mobile.encrypted_hashed_idfa)
}
inline void BidRequest_Mobile::set_encrypted_hashed_idfa(const void* value, size_t size) {
  set_has_encrypted_hashed_idfa();
  encrypted_hashed_idfa_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:BidRequest.Mobile.encrypted_hashed_idfa)
}
inline ::std::string* BidRequest_Mobile::mutable_encrypted_hashed_idfa() {
  set_has_encrypted_hashed_idfa();
  // @@protoc_insertion_point(field_mutable:BidRequest.Mobile.encrypted_hashed_idfa)
  return encrypted_hashed_idfa_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BidRequest_Mobile::release_encrypted_hashed_idfa() {
  clear_has_encrypted_hashed_idfa();
  return encrypted_hashed_idfa_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidRequest_Mobile::set_allocated_encrypted_hashed_idfa(::std::string* encrypted_hashed_idfa) {
  if (encrypted_hashed_idfa != NULL) {
    set_has_encrypted_hashed_idfa();
  } else {
    clear_has_encrypted_hashed_idfa();
  }
  encrypted_hashed_idfa_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), encrypted_hashed_idfa);
  // @@protoc_insertion_point(field_set_allocated:BidRequest.Mobile.encrypted_hashed_idfa)
}

// optional string DEPRECATED_app_name = 1;
inline bool BidRequest_Mobile::has_deprecated_app_name() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void BidRequest_Mobile::set_has_deprecated_app_name() {
  _has_bits_[0] |= 0x00020000u;
}
inline void BidRequest_Mobile::clear_has_deprecated_app_name() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void BidRequest_Mobile::clear_deprecated_app_name() {
  deprecated_app_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_deprecated_app_name();
}
inline const ::std::string& BidRequest_Mobile::deprecated_app_name() const {
  // @@protoc_insertion_point(field_get:BidRequest.Mobile.DEPRECATED_app_name)
  return deprecated_app_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidRequest_Mobile::set_deprecated_app_name(const ::std::string& value) {
  set_has_deprecated_app_name();
  deprecated_app_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:BidRequest.Mobile.DEPRECATED_app_name)
}
inline void BidRequest_Mobile::set_deprecated_app_name(const char* value) {
  set_has_deprecated_app_name();
  deprecated_app_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:BidRequest.Mobile.DEPRECATED_app_name)
}
inline void BidRequest_Mobile::set_deprecated_app_name(const char* value, size_t size) {
  set_has_deprecated_app_name();
  deprecated_app_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:BidRequest.Mobile.DEPRECATED_app_name)
}
inline ::std::string* BidRequest_Mobile::mutable_deprecated_app_name() {
  set_has_deprecated_app_name();
  // @@protoc_insertion_point(field_mutable:BidRequest.Mobile.DEPRECATED_app_name)
  return deprecated_app_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BidRequest_Mobile::release_deprecated_app_name() {
  clear_has_deprecated_app_name();
  return deprecated_app_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidRequest_Mobile::set_allocated_deprecated_app_name(::std::string* deprecated_app_name) {
  if (deprecated_app_name != NULL) {
    set_has_deprecated_app_name();
  } else {
    clear_has_deprecated_app_name();
  }
  deprecated_app_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), deprecated_app_name);
  // @@protoc_insertion_point(field_set_allocated:BidRequest.Mobile.DEPRECATED_app_name)
}

// optional string DEPRECATED_company_name = 2;
inline bool BidRequest_Mobile::has_deprecated_company_name() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void BidRequest_Mobile::set_has_deprecated_company_name() {
  _has_bits_[0] |= 0x00040000u;
}
inline void BidRequest_Mobile::clear_has_deprecated_company_name() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void BidRequest_Mobile::clear_deprecated_company_name() {
  deprecated_company_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_deprecated_company_name();
}
inline const ::std::string& BidRequest_Mobile::deprecated_company_name() const {
  // @@protoc_insertion_point(field_get:BidRequest.Mobile.DEPRECATED_company_name)
  return deprecated_company_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidRequest_Mobile::set_deprecated_company_name(const ::std::string& value) {
  set_has_deprecated_company_name();
  deprecated_company_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:BidRequest.Mobile.DEPRECATED_company_name)
}
inline void BidRequest_Mobile::set_deprecated_company_name(const char* value) {
  set_has_deprecated_company_name();
  deprecated_company_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:BidRequest.Mobile.DEPRECATED_company_name)
}
inline void BidRequest_Mobile::set_deprecated_company_name(const char* value, size_t size) {
  set_has_deprecated_company_name();
  deprecated_company_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:BidRequest.Mobile.DEPRECATED_company_name)
}
inline ::std::string* BidRequest_Mobile::mutable_deprecated_company_name() {
  set_has_deprecated_company_name();
  // @@protoc_insertion_point(field_mutable:BidRequest.Mobile.DEPRECATED_company_name)
  return deprecated_company_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BidRequest_Mobile::release_deprecated_company_name() {
  clear_has_deprecated_company_name();
  return deprecated_company_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidRequest_Mobile::set_allocated_deprecated_company_name(::std::string* deprecated_company_name) {
  if (deprecated_company_name != NULL) {
    set_has_deprecated_company_name();
  } else {
    clear_has_deprecated_company_name();
  }
  deprecated_company_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), deprecated_company_name);
  // @@protoc_insertion_point(field_set_allocated:BidRequest.Mobile.DEPRECATED_company_name)
}

// optional string DEPRECATED_carrier_name = 4;
inline bool BidRequest_Mobile::has_deprecated_carrier_name() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void BidRequest_Mobile::set_has_deprecated_carrier_name() {
  _has_bits_[0] |= 0x00080000u;
}
inline void BidRequest_Mobile::clear_has_deprecated_carrier_name() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void BidRequest_Mobile::clear_deprecated_carrier_name() {
  deprecated_carrier_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_deprecated_carrier_name();
}
inline const ::std::string& BidRequest_Mobile::deprecated_carrier_name() const {
  // @@protoc_insertion_point(field_get:BidRequest.Mobile.DEPRECATED_carrier_name)
  return deprecated_carrier_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidRequest_Mobile::set_deprecated_carrier_name(const ::std::string& value) {
  set_has_deprecated_carrier_name();
  deprecated_carrier_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:BidRequest.Mobile.DEPRECATED_carrier_name)
}
inline void BidRequest_Mobile::set_deprecated_carrier_name(const char* value) {
  set_has_deprecated_carrier_name();
  deprecated_carrier_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:BidRequest.Mobile.DEPRECATED_carrier_name)
}
inline void BidRequest_Mobile::set_deprecated_carrier_name(const char* value, size_t size) {
  set_has_deprecated_carrier_name();
  deprecated_carrier_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:BidRequest.Mobile.DEPRECATED_carrier_name)
}
inline ::std::string* BidRequest_Mobile::mutable_deprecated_carrier_name() {
  set_has_deprecated_carrier_name();
  // @@protoc_insertion_point(field_mutable:BidRequest.Mobile.DEPRECATED_carrier_name)
  return deprecated_carrier_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BidRequest_Mobile::release_deprecated_carrier_name() {
  clear_has_deprecated_carrier_name();
  return deprecated_carrier_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidRequest_Mobile::set_allocated_deprecated_carrier_name(::std::string* deprecated_carrier_name) {
  if (deprecated_carrier_name != NULL) {
    set_has_deprecated_carrier_name();
  } else {
    clear_has_deprecated_carrier_name();
  }
  deprecated_carrier_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), deprecated_carrier_name);
  // @@protoc_insertion_point(field_set_allocated:BidRequest.Mobile.DEPRECATED_carrier_name)
}

// optional string DEPRECATED_carrier_country = 5;
inline bool BidRequest_Mobile::has_deprecated_carrier_country() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void BidRequest_Mobile::set_has_deprecated_carrier_country() {
  _has_bits_[0] |= 0x00100000u;
}
inline void BidRequest_Mobile::clear_has_deprecated_carrier_country() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void BidRequest_Mobile::clear_deprecated_carrier_country() {
  deprecated_carrier_country_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_deprecated_carrier_country();
}
inline const ::std::string& BidRequest_Mobile::deprecated_carrier_country() const {
  // @@protoc_insertion_point(field_get:BidRequest.Mobile.DEPRECATED_carrier_country)
  return deprecated_carrier_country_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidRequest_Mobile::set_deprecated_carrier_country(const ::std::string& value) {
  set_has_deprecated_carrier_country();
  deprecated_carrier_country_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:BidRequest.Mobile.DEPRECATED_carrier_country)
}
inline void BidRequest_Mobile::set_deprecated_carrier_country(const char* value) {
  set_has_deprecated_carrier_country();
  deprecated_carrier_country_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:BidRequest.Mobile.DEPRECATED_carrier_country)
}
inline void BidRequest_Mobile::set_deprecated_carrier_country(const char* value, size_t size) {
  set_has_deprecated_carrier_country();
  deprecated_carrier_country_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:BidRequest.Mobile.DEPRECATED_carrier_country)
}
inline ::std::string* BidRequest_Mobile::mutable_deprecated_carrier_country() {
  set_has_deprecated_carrier_country();
  // @@protoc_insertion_point(field_mutable:BidRequest.Mobile.DEPRECATED_carrier_country)
  return deprecated_carrier_country_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BidRequest_Mobile::release_deprecated_carrier_country() {
  clear_has_deprecated_carrier_country();
  return deprecated_carrier_country_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidRequest_Mobile::set_allocated_deprecated_carrier_country(::std::string* deprecated_carrier_country) {
  if (deprecated_carrier_country != NULL) {
    set_has_deprecated_carrier_country();
  } else {
    clear_has_deprecated_carrier_country();
  }
  deprecated_carrier_country_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), deprecated_carrier_country);
  // @@protoc_insertion_point(field_set_allocated:BidRequest.Mobile.DEPRECATED_carrier_country)
}

// -------------------------------------------------------------------

// BidRequest_Video_CompanionSlot

// repeated int32 height = 1 [packed = true];
inline int BidRequest_Video_CompanionSlot::height_size() const {
  return height_.size();
}
inline void BidRequest_Video_CompanionSlot::clear_height() {
  height_.Clear();
}
inline ::google::protobuf::int32 BidRequest_Video_CompanionSlot::height(int index) const {
  // @@protoc_insertion_point(field_get:BidRequest.Video.CompanionSlot.height)
  return height_.Get(index);
}
inline void BidRequest_Video_CompanionSlot::set_height(int index, ::google::protobuf::int32 value) {
  height_.Set(index, value);
  // @@protoc_insertion_point(field_set:BidRequest.Video.CompanionSlot.height)
}
inline void BidRequest_Video_CompanionSlot::add_height(::google::protobuf::int32 value) {
  height_.Add(value);
  // @@protoc_insertion_point(field_add:BidRequest.Video.CompanionSlot.height)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
BidRequest_Video_CompanionSlot::height() const {
  // @@protoc_insertion_point(field_list:BidRequest.Video.CompanionSlot.height)
  return height_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
BidRequest_Video_CompanionSlot::mutable_height() {
  // @@protoc_insertion_point(field_mutable_list:BidRequest.Video.CompanionSlot.height)
  return &height_;
}

// repeated int32 width = 2 [packed = true];
inline int BidRequest_Video_CompanionSlot::width_size() const {
  return width_.size();
}
inline void BidRequest_Video_CompanionSlot::clear_width() {
  width_.Clear();
}
inline ::google::protobuf::int32 BidRequest_Video_CompanionSlot::width(int index) const {
  // @@protoc_insertion_point(field_get:BidRequest.Video.CompanionSlot.width)
  return width_.Get(index);
}
inline void BidRequest_Video_CompanionSlot::set_width(int index, ::google::protobuf::int32 value) {
  width_.Set(index, value);
  // @@protoc_insertion_point(field_set:BidRequest.Video.CompanionSlot.width)
}
inline void BidRequest_Video_CompanionSlot::add_width(::google::protobuf::int32 value) {
  width_.Add(value);
  // @@protoc_insertion_point(field_add:BidRequest.Video.CompanionSlot.width)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
BidRequest_Video_CompanionSlot::width() const {
  // @@protoc_insertion_point(field_list:BidRequest.Video.CompanionSlot.width)
  return width_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
BidRequest_Video_CompanionSlot::mutable_width() {
  // @@protoc_insertion_point(field_mutable_list:BidRequest.Video.CompanionSlot.width)
  return &width_;
}

// repeated .BidRequest.Video.CompanionSlot.CreativeFormat creative_format = 3;
inline int BidRequest_Video_CompanionSlot::creative_format_size() const {
  return creative_format_.size();
}
inline void BidRequest_Video_CompanionSlot::clear_creative_format() {
  creative_format_.Clear();
}
inline ::BidRequest_Video_CompanionSlot_CreativeFormat BidRequest_Video_CompanionSlot::creative_format(int index) const {
  // @@protoc_insertion_point(field_get:BidRequest.Video.CompanionSlot.creative_format)
  return static_cast< ::BidRequest_Video_CompanionSlot_CreativeFormat >(creative_format_.Get(index));
}
inline void BidRequest_Video_CompanionSlot::set_creative_format(int index, ::BidRequest_Video_CompanionSlot_CreativeFormat value) {
  assert(::BidRequest_Video_CompanionSlot_CreativeFormat_IsValid(value));
  creative_format_.Set(index, value);
  // @@protoc_insertion_point(field_set:BidRequest.Video.CompanionSlot.creative_format)
}
inline void BidRequest_Video_CompanionSlot::add_creative_format(::BidRequest_Video_CompanionSlot_CreativeFormat value) {
  assert(::BidRequest_Video_CompanionSlot_CreativeFormat_IsValid(value));
  creative_format_.Add(value);
  // @@protoc_insertion_point(field_add:BidRequest.Video.CompanionSlot.creative_format)
}
inline const ::google::protobuf::RepeatedField<int>&
BidRequest_Video_CompanionSlot::creative_format() const {
  // @@protoc_insertion_point(field_list:BidRequest.Video.CompanionSlot.creative_format)
  return creative_format_;
}
inline ::google::protobuf::RepeatedField<int>*
BidRequest_Video_CompanionSlot::mutable_creative_format() {
  // @@protoc_insertion_point(field_mutable_list:BidRequest.Video.CompanionSlot.creative_format)
  return &creative_format_;
}

// -------------------------------------------------------------------

// BidRequest_Video

// optional string description_url = 10;
inline bool BidRequest_Video::has_description_url() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BidRequest_Video::set_has_description_url() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BidRequest_Video::clear_has_description_url() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BidRequest_Video::clear_description_url() {
  description_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_description_url();
}
inline const ::std::string& BidRequest_Video::description_url() const {
  // @@protoc_insertion_point(field_get:BidRequest.Video.description_url)
  return description_url_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidRequest_Video::set_description_url(const ::std::string& value) {
  set_has_description_url();
  description_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:BidRequest.Video.description_url)
}
inline void BidRequest_Video::set_description_url(const char* value) {
  set_has_description_url();
  description_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:BidRequest.Video.description_url)
}
inline void BidRequest_Video::set_description_url(const char* value, size_t size) {
  set_has_description_url();
  description_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:BidRequest.Video.description_url)
}
inline ::std::string* BidRequest_Video::mutable_description_url() {
  set_has_description_url();
  // @@protoc_insertion_point(field_mutable:BidRequest.Video.description_url)
  return description_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BidRequest_Video::release_description_url() {
  clear_has_description_url();
  return description_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidRequest_Video::set_allocated_description_url(::std::string* description_url) {
  if (description_url != NULL) {
    set_has_description_url();
  } else {
    clear_has_description_url();
  }
  description_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), description_url);
  // @@protoc_insertion_point(field_set_allocated:BidRequest.Video.description_url)
}

// optional bool is_embedded_offsite = 11 [default = false];
inline bool BidRequest_Video::has_is_embedded_offsite() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BidRequest_Video::set_has_is_embedded_offsite() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BidRequest_Video::clear_has_is_embedded_offsite() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BidRequest_Video::clear_is_embedded_offsite() {
  is_embedded_offsite_ = false;
  clear_has_is_embedded_offsite();
}
inline bool BidRequest_Video::is_embedded_offsite() const {
  // @@protoc_insertion_point(field_get:BidRequest.Video.is_embedded_offsite)
  return is_embedded_offsite_;
}
inline void BidRequest_Video::set_is_embedded_offsite(bool value) {
  set_has_is_embedded_offsite();
  is_embedded_offsite_ = value;
  // @@protoc_insertion_point(field_set:BidRequest.Video.is_embedded_offsite)
}

// optional int32 videoad_start_delay = 1;
inline bool BidRequest_Video::has_videoad_start_delay() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BidRequest_Video::set_has_videoad_start_delay() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BidRequest_Video::clear_has_videoad_start_delay() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BidRequest_Video::clear_videoad_start_delay() {
  videoad_start_delay_ = 0;
  clear_has_videoad_start_delay();
}
inline ::google::protobuf::int32 BidRequest_Video::videoad_start_delay() const {
  // @@protoc_insertion_point(field_get:BidRequest.Video.videoad_start_delay)
  return videoad_start_delay_;
}
inline void BidRequest_Video::set_videoad_start_delay(::google::protobuf::int32 value) {
  set_has_videoad_start_delay();
  videoad_start_delay_ = value;
  // @@protoc_insertion_point(field_set:BidRequest.Video.videoad_start_delay)
}

// optional int32 max_ad_duration = 2;
inline bool BidRequest_Video::has_max_ad_duration() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BidRequest_Video::set_has_max_ad_duration() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BidRequest_Video::clear_has_max_ad_duration() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BidRequest_Video::clear_max_ad_duration() {
  max_ad_duration_ = 0;
  clear_has_max_ad_duration();
}
inline ::google::protobuf::int32 BidRequest_Video::max_ad_duration() const {
  // @@protoc_insertion_point(field_get:BidRequest.Video.max_ad_duration)
  return max_ad_duration_;
}
inline void BidRequest_Video::set_max_ad_duration(::google::protobuf::int32 value) {
  set_has_max_ad_duration();
  max_ad_duration_ = value;
  // @@protoc_insertion_point(field_set:BidRequest.Video.max_ad_duration)
}

// optional int32 min_ad_duration = 8;
inline bool BidRequest_Video::has_min_ad_duration() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BidRequest_Video::set_has_min_ad_duration() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BidRequest_Video::clear_has_min_ad_duration() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BidRequest_Video::clear_min_ad_duration() {
  min_ad_duration_ = 0;
  clear_has_min_ad_duration();
}
inline ::google::protobuf::int32 BidRequest_Video::min_ad_duration() const {
  // @@protoc_insertion_point(field_get:BidRequest.Video.min_ad_duration)
  return min_ad_duration_;
}
inline void BidRequest_Video::set_min_ad_duration(::google::protobuf::int32 value) {
  set_has_min_ad_duration();
  min_ad_duration_ = value;
  // @@protoc_insertion_point(field_set:BidRequest.Video.min_ad_duration)
}

// optional int32 inventory_type = 3 [default = 0];
inline bool BidRequest_Video::has_inventory_type() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void BidRequest_Video::set_has_inventory_type() {
  _has_bits_[0] |= 0x00000020u;
}
inline void BidRequest_Video::clear_has_inventory_type() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void BidRequest_Video::clear_inventory_type() {
  inventory_type_ = 0;
  clear_has_inventory_type();
}
inline ::google::protobuf::int32 BidRequest_Video::inventory_type() const {
  // @@protoc_insertion_point(field_get:BidRequest.Video.inventory_type)
  return inventory_type_;
}
inline void BidRequest_Video::set_inventory_type(::google::protobuf::int32 value) {
  set_has_inventory_type();
  inventory_type_ = value;
  // @@protoc_insertion_point(field_set:BidRequest.Video.inventory_type)
}

// optional .BidRequest.Video.SkippableBidRequestType video_ad_skippable = 4 [default = ALLOW_SKIPPABLE];
inline bool BidRequest_Video::has_video_ad_skippable() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void BidRequest_Video::set_has_video_ad_skippable() {
  _has_bits_[0] |= 0x00000040u;
}
inline void BidRequest_Video::clear_has_video_ad_skippable() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void BidRequest_Video::clear_video_ad_skippable() {
  video_ad_skippable_ = 0;
  clear_has_video_ad_skippable();
}
inline ::BidRequest_Video_SkippableBidRequestType BidRequest_Video::video_ad_skippable() const {
  // @@protoc_insertion_point(field_get:BidRequest.Video.video_ad_skippable)
  return static_cast< ::BidRequest_Video_SkippableBidRequestType >(video_ad_skippable_);
}
inline void BidRequest_Video::set_video_ad_skippable(::BidRequest_Video_SkippableBidRequestType value) {
  assert(::BidRequest_Video_SkippableBidRequestType_IsValid(value));
  set_has_video_ad_skippable();
  video_ad_skippable_ = value;
  // @@protoc_insertion_point(field_set:BidRequest.Video.video_ad_skippable)
}

// optional int32 skippable_max_ad_duration = 5;
inline bool BidRequest_Video::has_skippable_max_ad_duration() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void BidRequest_Video::set_has_skippable_max_ad_duration() {
  _has_bits_[0] |= 0x00000080u;
}
inline void BidRequest_Video::clear_has_skippable_max_ad_duration() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void BidRequest_Video::clear_skippable_max_ad_duration() {
  skippable_max_ad_duration_ = 0;
  clear_has_skippable_max_ad_duration();
}
inline ::google::protobuf::int32 BidRequest_Video::skippable_max_ad_duration() const {
  // @@protoc_insertion_point(field_get:BidRequest.Video.skippable_max_ad_duration)
  return skippable_max_ad_duration_;
}
inline void BidRequest_Video::set_skippable_max_ad_duration(::google::protobuf::int32 value) {
  set_has_skippable_max_ad_duration();
  skippable_max_ad_duration_ = value;
  // @@protoc_insertion_point(field_set:BidRequest.Video.skippable_max_ad_duration)
}

// repeated .BidRequest.Video.VideoFormat allowed_video_formats = 6;
inline int BidRequest_Video::allowed_video_formats_size() const {
  return allowed_video_formats_.size();
}
inline void BidRequest_Video::clear_allowed_video_formats() {
  allowed_video_formats_.Clear();
}
inline ::BidRequest_Video_VideoFormat BidRequest_Video::allowed_video_formats(int index) const {
  // @@protoc_insertion_point(field_get:BidRequest.Video.allowed_video_formats)
  return static_cast< ::BidRequest_Video_VideoFormat >(allowed_video_formats_.Get(index));
}
inline void BidRequest_Video::set_allowed_video_formats(int index, ::BidRequest_Video_VideoFormat value) {
  assert(::BidRequest_Video_VideoFormat_IsValid(value));
  allowed_video_formats_.Set(index, value);
  // @@protoc_insertion_point(field_set:BidRequest.Video.allowed_video_formats)
}
inline void BidRequest_Video::add_allowed_video_formats(::BidRequest_Video_VideoFormat value) {
  assert(::BidRequest_Video_VideoFormat_IsValid(value));
  allowed_video_formats_.Add(value);
  // @@protoc_insertion_point(field_add:BidRequest.Video.allowed_video_formats)
}
inline const ::google::protobuf::RepeatedField<int>&
BidRequest_Video::allowed_video_formats() const {
  // @@protoc_insertion_point(field_list:BidRequest.Video.allowed_video_formats)
  return allowed_video_formats_;
}
inline ::google::protobuf::RepeatedField<int>*
BidRequest_Video::mutable_allowed_video_formats() {
  // @@protoc_insertion_point(field_mutable_list:BidRequest.Video.allowed_video_formats)
  return &allowed_video_formats_;
}

// repeated .BidRequest.Video.CompanionSlot companion_slot = 7;
inline int BidRequest_Video::companion_slot_size() const {
  return companion_slot_.size();
}
inline void BidRequest_Video::clear_companion_slot() {
  companion_slot_.Clear();
}
inline const ::BidRequest_Video_CompanionSlot& BidRequest_Video::companion_slot(int index) const {
  // @@protoc_insertion_point(field_get:BidRequest.Video.companion_slot)
  return companion_slot_.Get(index);
}
inline ::BidRequest_Video_CompanionSlot* BidRequest_Video::mutable_companion_slot(int index) {
  // @@protoc_insertion_point(field_mutable:BidRequest.Video.companion_slot)
  return companion_slot_.Mutable(index);
}
inline ::BidRequest_Video_CompanionSlot* BidRequest_Video::add_companion_slot() {
  // @@protoc_insertion_point(field_add:BidRequest.Video.companion_slot)
  return companion_slot_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::BidRequest_Video_CompanionSlot >*
BidRequest_Video::mutable_companion_slot() {
  // @@protoc_insertion_point(field_mutable_list:BidRequest.Video.companion_slot)
  return &companion_slot_;
}
inline const ::google::protobuf::RepeatedPtrField< ::BidRequest_Video_CompanionSlot >&
BidRequest_Video::companion_slot() const {
  // @@protoc_insertion_point(field_list:BidRequest.Video.companion_slot)
  return companion_slot_;
}

// -------------------------------------------------------------------

// BidRequest_AdSlot_MatchingAdData_DirectDeal

// optional int64 direct_deal_id = 1;
inline bool BidRequest_AdSlot_MatchingAdData_DirectDeal::has_direct_deal_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BidRequest_AdSlot_MatchingAdData_DirectDeal::set_has_direct_deal_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BidRequest_AdSlot_MatchingAdData_DirectDeal::clear_has_direct_deal_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BidRequest_AdSlot_MatchingAdData_DirectDeal::clear_direct_deal_id() {
  direct_deal_id_ = GOOGLE_LONGLONG(0);
  clear_has_direct_deal_id();
}
inline ::google::protobuf::int64 BidRequest_AdSlot_MatchingAdData_DirectDeal::direct_deal_id() const {
  // @@protoc_insertion_point(field_get:BidRequest.AdSlot.MatchingAdData.DirectDeal.direct_deal_id)
  return direct_deal_id_;
}
inline void BidRequest_AdSlot_MatchingAdData_DirectDeal::set_direct_deal_id(::google::protobuf::int64 value) {
  set_has_direct_deal_id();
  direct_deal_id_ = value;
  // @@protoc_insertion_point(field_set:BidRequest.AdSlot.MatchingAdData.DirectDeal.direct_deal_id)
}

// optional int64 fixed_cpm_micros = 2;
inline bool BidRequest_AdSlot_MatchingAdData_DirectDeal::has_fixed_cpm_micros() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BidRequest_AdSlot_MatchingAdData_DirectDeal::set_has_fixed_cpm_micros() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BidRequest_AdSlot_MatchingAdData_DirectDeal::clear_has_fixed_cpm_micros() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BidRequest_AdSlot_MatchingAdData_DirectDeal::clear_fixed_cpm_micros() {
  fixed_cpm_micros_ = GOOGLE_LONGLONG(0);
  clear_has_fixed_cpm_micros();
}
inline ::google::protobuf::int64 BidRequest_AdSlot_MatchingAdData_DirectDeal::fixed_cpm_micros() const {
  // @@protoc_insertion_point(field_get:BidRequest.AdSlot.MatchingAdData.DirectDeal.fixed_cpm_micros)
  return fixed_cpm_micros_;
}
inline void BidRequest_AdSlot_MatchingAdData_DirectDeal::set_fixed_cpm_micros(::google::protobuf::int64 value) {
  set_has_fixed_cpm_micros();
  fixed_cpm_micros_ = value;
  // @@protoc_insertion_point(field_set:BidRequest.AdSlot.MatchingAdData.DirectDeal.fixed_cpm_micros)
}

// -------------------------------------------------------------------

// BidRequest_AdSlot_MatchingAdData

// optional int64 adgroup_id = 2;
inline bool BidRequest_AdSlot_MatchingAdData::has_adgroup_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BidRequest_AdSlot_MatchingAdData::set_has_adgroup_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BidRequest_AdSlot_MatchingAdData::clear_has_adgroup_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BidRequest_AdSlot_MatchingAdData::clear_adgroup_id() {
  adgroup_id_ = GOOGLE_LONGLONG(0);
  clear_has_adgroup_id();
}
inline ::google::protobuf::int64 BidRequest_AdSlot_MatchingAdData::adgroup_id() const {
  // @@protoc_insertion_point(field_get:BidRequest.AdSlot.MatchingAdData.adgroup_id)
  return adgroup_id_;
}
inline void BidRequest_AdSlot_MatchingAdData::set_adgroup_id(::google::protobuf::int64 value) {
  set_has_adgroup_id();
  adgroup_id_ = value;
  // @@protoc_insertion_point(field_set:BidRequest.AdSlot.MatchingAdData.adgroup_id)
}

// optional int64 minimum_cpm_micros = 5;
inline bool BidRequest_AdSlot_MatchingAdData::has_minimum_cpm_micros() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BidRequest_AdSlot_MatchingAdData::set_has_minimum_cpm_micros() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BidRequest_AdSlot_MatchingAdData::clear_has_minimum_cpm_micros() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BidRequest_AdSlot_MatchingAdData::clear_minimum_cpm_micros() {
  minimum_cpm_micros_ = GOOGLE_LONGLONG(0);
  clear_has_minimum_cpm_micros();
}
inline ::google::protobuf::int64 BidRequest_AdSlot_MatchingAdData::minimum_cpm_micros() const {
  // @@protoc_insertion_point(field_get:BidRequest.AdSlot.MatchingAdData.minimum_cpm_micros)
  return minimum_cpm_micros_;
}
inline void BidRequest_AdSlot_MatchingAdData::set_minimum_cpm_micros(::google::protobuf::int64 value) {
  set_has_minimum_cpm_micros();
  minimum_cpm_micros_ = value;
  // @@protoc_insertion_point(field_set:BidRequest.AdSlot.MatchingAdData.minimum_cpm_micros)
}

// repeated .BidRequest.AdSlot.MatchingAdData.DirectDeal direct_deal = 6;
inline int BidRequest_AdSlot_MatchingAdData::direct_deal_size() const {
  return direct_deal_.size();
}
inline void BidRequest_AdSlot_MatchingAdData::clear_direct_deal() {
  direct_deal_.Clear();
}
inline const ::BidRequest_AdSlot_MatchingAdData_DirectDeal& BidRequest_AdSlot_MatchingAdData::direct_deal(int index) const {
  // @@protoc_insertion_point(field_get:BidRequest.AdSlot.MatchingAdData.direct_deal)
  return direct_deal_.Get(index);
}
inline ::BidRequest_AdSlot_MatchingAdData_DirectDeal* BidRequest_AdSlot_MatchingAdData::mutable_direct_deal(int index) {
  // @@protoc_insertion_point(field_mutable:BidRequest.AdSlot.MatchingAdData.direct_deal)
  return direct_deal_.Mutable(index);
}
inline ::BidRequest_AdSlot_MatchingAdData_DirectDeal* BidRequest_AdSlot_MatchingAdData::add_direct_deal() {
  // @@protoc_insertion_point(field_add:BidRequest.AdSlot.MatchingAdData.direct_deal)
  return direct_deal_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::BidRequest_AdSlot_MatchingAdData_DirectDeal >*
BidRequest_AdSlot_MatchingAdData::mutable_direct_deal() {
  // @@protoc_insertion_point(field_mutable_list:BidRequest.AdSlot.MatchingAdData.direct_deal)
  return &direct_deal_;
}
inline const ::google::protobuf::RepeatedPtrField< ::BidRequest_AdSlot_MatchingAdData_DirectDeal >&
BidRequest_AdSlot_MatchingAdData::direct_deal() const {
  // @@protoc_insertion_point(field_list:BidRequest.AdSlot.MatchingAdData.direct_deal)
  return direct_deal_;
}

// optional int64 DEPRECATED_campaign_id = 1;
inline bool BidRequest_AdSlot_MatchingAdData::has_deprecated_campaign_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BidRequest_AdSlot_MatchingAdData::set_has_deprecated_campaign_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BidRequest_AdSlot_MatchingAdData::clear_has_deprecated_campaign_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BidRequest_AdSlot_MatchingAdData::clear_deprecated_campaign_id() {
  deprecated_campaign_id_ = GOOGLE_LONGLONG(0);
  clear_has_deprecated_campaign_id();
}
inline ::google::protobuf::int64 BidRequest_AdSlot_MatchingAdData::deprecated_campaign_id() const {
  // @@protoc_insertion_point(field_get:BidRequest.AdSlot.MatchingAdData.DEPRECATED_campaign_id)
  return deprecated_campaign_id_;
}
inline void BidRequest_AdSlot_MatchingAdData::set_deprecated_campaign_id(::google::protobuf::int64 value) {
  set_has_deprecated_campaign_id();
  deprecated_campaign_id_ = value;
  // @@protoc_insertion_point(field_set:BidRequest.AdSlot.MatchingAdData.DEPRECATED_campaign_id)
}

// optional bool DEPRECATED_per_buyer_minimum_cpm = 3;
inline bool BidRequest_AdSlot_MatchingAdData::has_deprecated_per_buyer_minimum_cpm() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BidRequest_AdSlot_MatchingAdData::set_has_deprecated_per_buyer_minimum_cpm() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BidRequest_AdSlot_MatchingAdData::clear_has_deprecated_per_buyer_minimum_cpm() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BidRequest_AdSlot_MatchingAdData::clear_deprecated_per_buyer_minimum_cpm() {
  deprecated_per_buyer_minimum_cpm_ = false;
  clear_has_deprecated_per_buyer_minimum_cpm();
}
inline bool BidRequest_AdSlot_MatchingAdData::deprecated_per_buyer_minimum_cpm() const {
  // @@protoc_insertion_point(field_get:BidRequest.AdSlot.MatchingAdData.DEPRECATED_per_buyer_minimum_cpm)
  return deprecated_per_buyer_minimum_cpm_;
}
inline void BidRequest_AdSlot_MatchingAdData::set_deprecated_per_buyer_minimum_cpm(bool value) {
  set_has_deprecated_per_buyer_minimum_cpm();
  deprecated_per_buyer_minimum_cpm_ = value;
  // @@protoc_insertion_point(field_set:BidRequest.AdSlot.MatchingAdData.DEPRECATED_per_buyer_minimum_cpm)
}

// optional int64 DEPRECATED_fixed_cpm_micros = 4;
inline bool BidRequest_AdSlot_MatchingAdData::has_deprecated_fixed_cpm_micros() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void BidRequest_AdSlot_MatchingAdData::set_has_deprecated_fixed_cpm_micros() {
  _has_bits_[0] |= 0x00000020u;
}
inline void BidRequest_AdSlot_MatchingAdData::clear_has_deprecated_fixed_cpm_micros() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void BidRequest_AdSlot_MatchingAdData::clear_deprecated_fixed_cpm_micros() {
  deprecated_fixed_cpm_micros_ = GOOGLE_LONGLONG(0);
  clear_has_deprecated_fixed_cpm_micros();
}
inline ::google::protobuf::int64 BidRequest_AdSlot_MatchingAdData::deprecated_fixed_cpm_micros() const {
  // @@protoc_insertion_point(field_get:BidRequest.AdSlot.MatchingAdData.DEPRECATED_fixed_cpm_micros)
  return deprecated_fixed_cpm_micros_;
}
inline void BidRequest_AdSlot_MatchingAdData::set_deprecated_fixed_cpm_micros(::google::protobuf::int64 value) {
  set_has_deprecated_fixed_cpm_micros();
  deprecated_fixed_cpm_micros_ = value;
  // @@protoc_insertion_point(field_set:BidRequest.AdSlot.MatchingAdData.DEPRECATED_fixed_cpm_micros)
}

// -------------------------------------------------------------------

// BidRequest_AdSlot

// required int32 id = 1;
inline bool BidRequest_AdSlot::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BidRequest_AdSlot::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BidRequest_AdSlot::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BidRequest_AdSlot::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 BidRequest_AdSlot::id() const {
  // @@protoc_insertion_point(field_get:BidRequest.AdSlot.id)
  return id_;
}
inline void BidRequest_AdSlot::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:BidRequest.AdSlot.id)
}

// optional uint64 ad_block_key = 14;
inline bool BidRequest_AdSlot::has_ad_block_key() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BidRequest_AdSlot::set_has_ad_block_key() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BidRequest_AdSlot::clear_has_ad_block_key() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BidRequest_AdSlot::clear_ad_block_key() {
  ad_block_key_ = GOOGLE_ULONGLONG(0);
  clear_has_ad_block_key();
}
inline ::google::protobuf::uint64 BidRequest_AdSlot::ad_block_key() const {
  // @@protoc_insertion_point(field_get:BidRequest.AdSlot.ad_block_key)
  return ad_block_key_;
}
inline void BidRequest_AdSlot::set_ad_block_key(::google::protobuf::uint64 value) {
  set_has_ad_block_key();
  ad_block_key_ = value;
  // @@protoc_insertion_point(field_set:BidRequest.AdSlot.ad_block_key)
}

// repeated string targetable_channel = 10;
inline int BidRequest_AdSlot::targetable_channel_size() const {
  return targetable_channel_.size();
}
inline void BidRequest_AdSlot::clear_targetable_channel() {
  targetable_channel_.Clear();
}
inline const ::std::string& BidRequest_AdSlot::targetable_channel(int index) const {
  // @@protoc_insertion_point(field_get:BidRequest.AdSlot.targetable_channel)
  return targetable_channel_.Get(index);
}
inline ::std::string* BidRequest_AdSlot::mutable_targetable_channel(int index) {
  // @@protoc_insertion_point(field_mutable:BidRequest.AdSlot.targetable_channel)
  return targetable_channel_.Mutable(index);
}
inline void BidRequest_AdSlot::set_targetable_channel(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:BidRequest.AdSlot.targetable_channel)
  targetable_channel_.Mutable(index)->assign(value);
}
inline void BidRequest_AdSlot::set_targetable_channel(int index, const char* value) {
  targetable_channel_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:BidRequest.AdSlot.targetable_channel)
}
inline void BidRequest_AdSlot::set_targetable_channel(int index, const char* value, size_t size) {
  targetable_channel_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:BidRequest.AdSlot.targetable_channel)
}
inline ::std::string* BidRequest_AdSlot::add_targetable_channel() {
  return targetable_channel_.Add();
}
inline void BidRequest_AdSlot::add_targetable_channel(const ::std::string& value) {
  targetable_channel_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:BidRequest.AdSlot.targetable_channel)
}
inline void BidRequest_AdSlot::add_targetable_channel(const char* value) {
  targetable_channel_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:BidRequest.AdSlot.targetable_channel)
}
inline void BidRequest_AdSlot::add_targetable_channel(const char* value, size_t size) {
  targetable_channel_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:BidRequest.AdSlot.targetable_channel)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
BidRequest_AdSlot::targetable_channel() const {
  // @@protoc_insertion_point(field_list:BidRequest.AdSlot.targetable_channel)
  return targetable_channel_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
BidRequest_AdSlot::mutable_targetable_channel() {
  // @@protoc_insertion_point(field_mutable_list:BidRequest.AdSlot.targetable_channel)
  return &targetable_channel_;
}

// repeated int32 width = 2;
inline int BidRequest_AdSlot::width_size() const {
  return width_.size();
}
inline void BidRequest_AdSlot::clear_width() {
  width_.Clear();
}
inline ::google::protobuf::int32 BidRequest_AdSlot::width(int index) const {
  // @@protoc_insertion_point(field_get:BidRequest.AdSlot.width)
  return width_.Get(index);
}
inline void BidRequest_AdSlot::set_width(int index, ::google::protobuf::int32 value) {
  width_.Set(index, value);
  // @@protoc_insertion_point(field_set:BidRequest.AdSlot.width)
}
inline void BidRequest_AdSlot::add_width(::google::protobuf::int32 value) {
  width_.Add(value);
  // @@protoc_insertion_point(field_add:BidRequest.AdSlot.width)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
BidRequest_AdSlot::width() const {
  // @@protoc_insertion_point(field_list:BidRequest.AdSlot.width)
  return width_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
BidRequest_AdSlot::mutable_width() {
  // @@protoc_insertion_point(field_mutable_list:BidRequest.AdSlot.width)
  return &width_;
}

// repeated int32 height = 3;
inline int BidRequest_AdSlot::height_size() const {
  return height_.size();
}
inline void BidRequest_AdSlot::clear_height() {
  height_.Clear();
}
inline ::google::protobuf::int32 BidRequest_AdSlot::height(int index) const {
  // @@protoc_insertion_point(field_get:BidRequest.AdSlot.height)
  return height_.Get(index);
}
inline void BidRequest_AdSlot::set_height(int index, ::google::protobuf::int32 value) {
  height_.Set(index, value);
  // @@protoc_insertion_point(field_set:BidRequest.AdSlot.height)
}
inline void BidRequest_AdSlot::add_height(::google::protobuf::int32 value) {
  height_.Add(value);
  // @@protoc_insertion_point(field_add:BidRequest.AdSlot.height)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
BidRequest_AdSlot::height() const {
  // @@protoc_insertion_point(field_list:BidRequest.AdSlot.height)
  return height_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
BidRequest_AdSlot::mutable_height() {
  // @@protoc_insertion_point(field_mutable_list:BidRequest.AdSlot.height)
  return &height_;
}

// repeated int32 excluded_attribute = 4 [packed = true];
inline int BidRequest_AdSlot::excluded_attribute_size() const {
  return excluded_attribute_.size();
}
inline void BidRequest_AdSlot::clear_excluded_attribute() {
  excluded_attribute_.Clear();
}
inline ::google::protobuf::int32 BidRequest_AdSlot::excluded_attribute(int index) const {
  // @@protoc_insertion_point(field_get:BidRequest.AdSlot.excluded_attribute)
  return excluded_attribute_.Get(index);
}
inline void BidRequest_AdSlot::set_excluded_attribute(int index, ::google::protobuf::int32 value) {
  excluded_attribute_.Set(index, value);
  // @@protoc_insertion_point(field_set:BidRequest.AdSlot.excluded_attribute)
}
inline void BidRequest_AdSlot::add_excluded_attribute(::google::protobuf::int32 value) {
  excluded_attribute_.Add(value);
  // @@protoc_insertion_point(field_add:BidRequest.AdSlot.excluded_attribute)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
BidRequest_AdSlot::excluded_attribute() const {
  // @@protoc_insertion_point(field_list:BidRequest.AdSlot.excluded_attribute)
  return excluded_attribute_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
BidRequest_AdSlot::mutable_excluded_attribute() {
  // @@protoc_insertion_point(field_mutable_list:BidRequest.AdSlot.excluded_attribute)
  return &excluded_attribute_;
}

// repeated int32 allowed_vendor_type = 6 [packed = true];
inline int BidRequest_AdSlot::allowed_vendor_type_size() const {
  return allowed_vendor_type_.size();
}
inline void BidRequest_AdSlot::clear_allowed_vendor_type() {
  allowed_vendor_type_.Clear();
}
inline ::google::protobuf::int32 BidRequest_AdSlot::allowed_vendor_type(int index) const {
  // @@protoc_insertion_point(field_get:BidRequest.AdSlot.allowed_vendor_type)
  return allowed_vendor_type_.Get(index);
}
inline void BidRequest_AdSlot::set_allowed_vendor_type(int index, ::google::protobuf::int32 value) {
  allowed_vendor_type_.Set(index, value);
  // @@protoc_insertion_point(field_set:BidRequest.AdSlot.allowed_vendor_type)
}
inline void BidRequest_AdSlot::add_allowed_vendor_type(::google::protobuf::int32 value) {
  allowed_vendor_type_.Add(value);
  // @@protoc_insertion_point(field_add:BidRequest.AdSlot.allowed_vendor_type)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
BidRequest_AdSlot::allowed_vendor_type() const {
  // @@protoc_insertion_point(field_list:BidRequest.AdSlot.allowed_vendor_type)
  return allowed_vendor_type_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
BidRequest_AdSlot::mutable_allowed_vendor_type() {
  // @@protoc_insertion_point(field_mutable_list:BidRequest.AdSlot.allowed_vendor_type)
  return &allowed_vendor_type_;
}

// repeated int32 excluded_sensitive_category = 7 [packed = true];
inline int BidRequest_AdSlot::excluded_sensitive_category_size() const {
  return excluded_sensitive_category_.size();
}
inline void BidRequest_AdSlot::clear_excluded_sensitive_category() {
  excluded_sensitive_category_.Clear();
}
inline ::google::protobuf::int32 BidRequest_AdSlot::excluded_sensitive_category(int index) const {
  // @@protoc_insertion_point(field_get:BidRequest.AdSlot.excluded_sensitive_category)
  return excluded_sensitive_category_.Get(index);
}
inline void BidRequest_AdSlot::set_excluded_sensitive_category(int index, ::google::protobuf::int32 value) {
  excluded_sensitive_category_.Set(index, value);
  // @@protoc_insertion_point(field_set:BidRequest.AdSlot.excluded_sensitive_category)
}
inline void BidRequest_AdSlot::add_excluded_sensitive_category(::google::protobuf::int32 value) {
  excluded_sensitive_category_.Add(value);
  // @@protoc_insertion_point(field_add:BidRequest.AdSlot.excluded_sensitive_category)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
BidRequest_AdSlot::excluded_sensitive_category() const {
  // @@protoc_insertion_point(field_list:BidRequest.AdSlot.excluded_sensitive_category)
  return excluded_sensitive_category_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
BidRequest_AdSlot::mutable_excluded_sensitive_category() {
  // @@protoc_insertion_point(field_mutable_list:BidRequest.AdSlot.excluded_sensitive_category)
  return &excluded_sensitive_category_;
}

// repeated int32 allowed_restricted_category = 16 [packed = true];
inline int BidRequest_AdSlot::allowed_restricted_category_size() const {
  return allowed_restricted_category_.size();
}
inline void BidRequest_AdSlot::clear_allowed_restricted_category() {
  allowed_restricted_category_.Clear();
}
inline ::google::protobuf::int32 BidRequest_AdSlot::allowed_restricted_category(int index) const {
  // @@protoc_insertion_point(field_get:BidRequest.AdSlot.allowed_restricted_category)
  return allowed_restricted_category_.Get(index);
}
inline void BidRequest_AdSlot::set_allowed_restricted_category(int index, ::google::protobuf::int32 value) {
  allowed_restricted_category_.Set(index, value);
  // @@protoc_insertion_point(field_set:BidRequest.AdSlot.allowed_restricted_category)
}
inline void BidRequest_AdSlot::add_allowed_restricted_category(::google::protobuf::int32 value) {
  allowed_restricted_category_.Add(value);
  // @@protoc_insertion_point(field_add:BidRequest.AdSlot.allowed_restricted_category)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
BidRequest_AdSlot::allowed_restricted_category() const {
  // @@protoc_insertion_point(field_list:BidRequest.AdSlot.allowed_restricted_category)
  return allowed_restricted_category_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
BidRequest_AdSlot::mutable_allowed_restricted_category() {
  // @@protoc_insertion_point(field_mutable_list:BidRequest.AdSlot.allowed_restricted_category)
  return &allowed_restricted_category_;
}

// repeated int32 excluded_product_category = 13 [packed = true];
inline int BidRequest_AdSlot::excluded_product_category_size() const {
  return excluded_product_category_.size();
}
inline void BidRequest_AdSlot::clear_excluded_product_category() {
  excluded_product_category_.Clear();
}
inline ::google::protobuf::int32 BidRequest_AdSlot::excluded_product_category(int index) const {
  // @@protoc_insertion_point(field_get:BidRequest.AdSlot.excluded_product_category)
  return excluded_product_category_.Get(index);
}
inline void BidRequest_AdSlot::set_excluded_product_category(int index, ::google::protobuf::int32 value) {
  excluded_product_category_.Set(index, value);
  // @@protoc_insertion_point(field_set:BidRequest.AdSlot.excluded_product_category)
}
inline void BidRequest_AdSlot::add_excluded_product_category(::google::protobuf::int32 value) {
  excluded_product_category_.Add(value);
  // @@protoc_insertion_point(field_add:BidRequest.AdSlot.excluded_product_category)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
BidRequest_AdSlot::excluded_product_category() const {
  // @@protoc_insertion_point(field_list:BidRequest.AdSlot.excluded_product_category)
  return excluded_product_category_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
BidRequest_AdSlot::mutable_excluded_product_category() {
  // @@protoc_insertion_point(field_mutable_list:BidRequest.AdSlot.excluded_product_category)
  return &excluded_product_category_;
}

// repeated .BidRequest.AdSlot.MatchingAdData matching_ad_data = 9;
inline int BidRequest_AdSlot::matching_ad_data_size() const {
  return matching_ad_data_.size();
}
inline void BidRequest_AdSlot::clear_matching_ad_data() {
  matching_ad_data_.Clear();
}
inline const ::BidRequest_AdSlot_MatchingAdData& BidRequest_AdSlot::matching_ad_data(int index) const {
  // @@protoc_insertion_point(field_get:BidRequest.AdSlot.matching_ad_data)
  return matching_ad_data_.Get(index);
}
inline ::BidRequest_AdSlot_MatchingAdData* BidRequest_AdSlot::mutable_matching_ad_data(int index) {
  // @@protoc_insertion_point(field_mutable:BidRequest.AdSlot.matching_ad_data)
  return matching_ad_data_.Mutable(index);
}
inline ::BidRequest_AdSlot_MatchingAdData* BidRequest_AdSlot::add_matching_ad_data() {
  // @@protoc_insertion_point(field_add:BidRequest.AdSlot.matching_ad_data)
  return matching_ad_data_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::BidRequest_AdSlot_MatchingAdData >*
BidRequest_AdSlot::mutable_matching_ad_data() {
  // @@protoc_insertion_point(field_mutable_list:BidRequest.AdSlot.matching_ad_data)
  return &matching_ad_data_;
}
inline const ::google::protobuf::RepeatedPtrField< ::BidRequest_AdSlot_MatchingAdData >&
BidRequest_AdSlot::matching_ad_data() const {
  // @@protoc_insertion_point(field_list:BidRequest.AdSlot.matching_ad_data)
  return matching_ad_data_;
}

// optional fixed64 publisher_settings_list_id = 15;
inline bool BidRequest_AdSlot::has_publisher_settings_list_id() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void BidRequest_AdSlot::set_has_publisher_settings_list_id() {
  _has_bits_[0] |= 0x00000800u;
}
inline void BidRequest_AdSlot::clear_has_publisher_settings_list_id() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void BidRequest_AdSlot::clear_publisher_settings_list_id() {
  publisher_settings_list_id_ = GOOGLE_ULONGLONG(0);
  clear_has_publisher_settings_list_id();
}
inline ::google::protobuf::uint64 BidRequest_AdSlot::publisher_settings_list_id() const {
  // @@protoc_insertion_point(field_get:BidRequest.AdSlot.publisher_settings_list_id)
  return publisher_settings_list_id_;
}
inline void BidRequest_AdSlot::set_publisher_settings_list_id(::google::protobuf::uint64 value) {
  set_has_publisher_settings_list_id();
  publisher_settings_list_id_ = value;
  // @@protoc_insertion_point(field_set:BidRequest.AdSlot.publisher_settings_list_id)
}

// optional .BidRequest.AdSlot.SlotVisibility slot_visibility = 12 [default = NO_DETECTION];
inline bool BidRequest_AdSlot::has_slot_visibility() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void BidRequest_AdSlot::set_has_slot_visibility() {
  _has_bits_[0] |= 0x00001000u;
}
inline void BidRequest_AdSlot::clear_has_slot_visibility() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void BidRequest_AdSlot::clear_slot_visibility() {
  slot_visibility_ = 0;
  clear_has_slot_visibility();
}
inline ::BidRequest_AdSlot_SlotVisibility BidRequest_AdSlot::slot_visibility() const {
  // @@protoc_insertion_point(field_get:BidRequest.AdSlot.slot_visibility)
  return static_cast< ::BidRequest_AdSlot_SlotVisibility >(slot_visibility_);
}
inline void BidRequest_AdSlot::set_slot_visibility(::BidRequest_AdSlot_SlotVisibility value) {
  assert(::BidRequest_AdSlot_SlotVisibility_IsValid(value));
  set_has_slot_visibility();
  slot_visibility_ = value;
  // @@protoc_insertion_point(field_set:BidRequest.AdSlot.slot_visibility)
}

// repeated int32 DEPRECATED_allowed_attribute = 5;
inline int BidRequest_AdSlot::deprecated_allowed_attribute_size() const {
  return deprecated_allowed_attribute_.size();
}
inline void BidRequest_AdSlot::clear_deprecated_allowed_attribute() {
  deprecated_allowed_attribute_.Clear();
}
inline ::google::protobuf::int32 BidRequest_AdSlot::deprecated_allowed_attribute(int index) const {
  // @@protoc_insertion_point(field_get:BidRequest.AdSlot.DEPRECATED_allowed_attribute)
  return deprecated_allowed_attribute_.Get(index);
}
inline void BidRequest_AdSlot::set_deprecated_allowed_attribute(int index, ::google::protobuf::int32 value) {
  deprecated_allowed_attribute_.Set(index, value);
  // @@protoc_insertion_point(field_set:BidRequest.AdSlot.DEPRECATED_allowed_attribute)
}
inline void BidRequest_AdSlot::add_deprecated_allowed_attribute(::google::protobuf::int32 value) {
  deprecated_allowed_attribute_.Add(value);
  // @@protoc_insertion_point(field_add:BidRequest.AdSlot.DEPRECATED_allowed_attribute)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
BidRequest_AdSlot::deprecated_allowed_attribute() const {
  // @@protoc_insertion_point(field_list:BidRequest.AdSlot.DEPRECATED_allowed_attribute)
  return deprecated_allowed_attribute_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
BidRequest_AdSlot::mutable_deprecated_allowed_attribute() {
  // @@protoc_insertion_point(field_mutable_list:BidRequest.AdSlot.DEPRECATED_allowed_attribute)
  return &deprecated_allowed_attribute_;
}

// repeated bytes DEPRECATED_publisher_settings_list_id = 11;
inline int BidRequest_AdSlot::deprecated_publisher_settings_list_id_size() const {
  return deprecated_publisher_settings_list_id_.size();
}
inline void BidRequest_AdSlot::clear_deprecated_publisher_settings_list_id() {
  deprecated_publisher_settings_list_id_.Clear();
}
inline const ::std::string& BidRequest_AdSlot::deprecated_publisher_settings_list_id(int index) const {
  // @@protoc_insertion_point(field_get:BidRequest.AdSlot.DEPRECATED_publisher_settings_list_id)
  return deprecated_publisher_settings_list_id_.Get(index);
}
inline ::std::string* BidRequest_AdSlot::mutable_deprecated_publisher_settings_list_id(int index) {
  // @@protoc_insertion_point(field_mutable:BidRequest.AdSlot.DEPRECATED_publisher_settings_list_id)
  return deprecated_publisher_settings_list_id_.Mutable(index);
}
inline void BidRequest_AdSlot::set_deprecated_publisher_settings_list_id(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:BidRequest.AdSlot.DEPRECATED_publisher_settings_list_id)
  deprecated_publisher_settings_list_id_.Mutable(index)->assign(value);
}
inline void BidRequest_AdSlot::set_deprecated_publisher_settings_list_id(int index, const char* value) {
  deprecated_publisher_settings_list_id_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:BidRequest.AdSlot.DEPRECATED_publisher_settings_list_id)
}
inline void BidRequest_AdSlot::set_deprecated_publisher_settings_list_id(int index, const void* value, size_t size) {
  deprecated_publisher_settings_list_id_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:BidRequest.AdSlot.DEPRECATED_publisher_settings_list_id)
}
inline ::std::string* BidRequest_AdSlot::add_deprecated_publisher_settings_list_id() {
  return deprecated_publisher_settings_list_id_.Add();
}
inline void BidRequest_AdSlot::add_deprecated_publisher_settings_list_id(const ::std::string& value) {
  deprecated_publisher_settings_list_id_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:BidRequest.AdSlot.DEPRECATED_publisher_settings_list_id)
}
inline void BidRequest_AdSlot::add_deprecated_publisher_settings_list_id(const char* value) {
  deprecated_publisher_settings_list_id_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:BidRequest.AdSlot.DEPRECATED_publisher_settings_list_id)
}
inline void BidRequest_AdSlot::add_deprecated_publisher_settings_list_id(const void* value, size_t size) {
  deprecated_publisher_settings_list_id_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:BidRequest.AdSlot.DEPRECATED_publisher_settings_list_id)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
BidRequest_AdSlot::deprecated_publisher_settings_list_id() const {
  // @@protoc_insertion_point(field_list:BidRequest.AdSlot.DEPRECATED_publisher_settings_list_id)
  return deprecated_publisher_settings_list_id_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
BidRequest_AdSlot::mutable_deprecated_publisher_settings_list_id() {
  // @@protoc_insertion_point(field_mutable_list:BidRequest.AdSlot.DEPRECATED_publisher_settings_list_id)
  return &deprecated_publisher_settings_list_id_;
}

// repeated string DEPRECATED_excluded_click_through_url = 8;
inline int BidRequest_AdSlot::deprecated_excluded_click_through_url_size() const {
  return deprecated_excluded_click_through_url_.size();
}
inline void BidRequest_AdSlot::clear_deprecated_excluded_click_through_url() {
  deprecated_excluded_click_through_url_.Clear();
}
inline const ::std::string& BidRequest_AdSlot::deprecated_excluded_click_through_url(int index) const {
  // @@protoc_insertion_point(field_get:BidRequest.AdSlot.DEPRECATED_excluded_click_through_url)
  return deprecated_excluded_click_through_url_.Get(index);
}
inline ::std::string* BidRequest_AdSlot::mutable_deprecated_excluded_click_through_url(int index) {
  // @@protoc_insertion_point(field_mutable:BidRequest.AdSlot.DEPRECATED_excluded_click_through_url)
  return deprecated_excluded_click_through_url_.Mutable(index);
}
inline void BidRequest_AdSlot::set_deprecated_excluded_click_through_url(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:BidRequest.AdSlot.DEPRECATED_excluded_click_through_url)
  deprecated_excluded_click_through_url_.Mutable(index)->assign(value);
}
inline void BidRequest_AdSlot::set_deprecated_excluded_click_through_url(int index, const char* value) {
  deprecated_excluded_click_through_url_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:BidRequest.AdSlot.DEPRECATED_excluded_click_through_url)
}
inline void BidRequest_AdSlot::set_deprecated_excluded_click_through_url(int index, const char* value, size_t size) {
  deprecated_excluded_click_through_url_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:BidRequest.AdSlot.DEPRECATED_excluded_click_through_url)
}
inline ::std::string* BidRequest_AdSlot::add_deprecated_excluded_click_through_url() {
  return deprecated_excluded_click_through_url_.Add();
}
inline void BidRequest_AdSlot::add_deprecated_excluded_click_through_url(const ::std::string& value) {
  deprecated_excluded_click_through_url_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:BidRequest.AdSlot.DEPRECATED_excluded_click_through_url)
}
inline void BidRequest_AdSlot::add_deprecated_excluded_click_through_url(const char* value) {
  deprecated_excluded_click_through_url_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:BidRequest.AdSlot.DEPRECATED_excluded_click_through_url)
}
inline void BidRequest_AdSlot::add_deprecated_excluded_click_through_url(const char* value, size_t size) {
  deprecated_excluded_click_through_url_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:BidRequest.AdSlot.DEPRECATED_excluded_click_through_url)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
BidRequest_AdSlot::deprecated_excluded_click_through_url() const {
  // @@protoc_insertion_point(field_list:BidRequest.AdSlot.DEPRECATED_excluded_click_through_url)
  return deprecated_excluded_click_through_url_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
BidRequest_AdSlot::mutable_deprecated_excluded_click_through_url() {
  // @@protoc_insertion_point(field_mutable_list:BidRequest.AdSlot.DEPRECATED_excluded_click_through_url)
  return &deprecated_excluded_click_through_url_;
}

// -------------------------------------------------------------------

// BidRequest_BidResponseFeedback

// optional bytes request_id = 1;
inline bool BidRequest_BidResponseFeedback::has_request_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BidRequest_BidResponseFeedback::set_has_request_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BidRequest_BidResponseFeedback::clear_has_request_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BidRequest_BidResponseFeedback::clear_request_id() {
  request_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_request_id();
}
inline const ::std::string& BidRequest_BidResponseFeedback::request_id() const {
  // @@protoc_insertion_point(field_get:BidRequest.BidResponseFeedback.request_id)
  return request_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidRequest_BidResponseFeedback::set_request_id(const ::std::string& value) {
  set_has_request_id();
  request_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:BidRequest.BidResponseFeedback.request_id)
}
inline void BidRequest_BidResponseFeedback::set_request_id(const char* value) {
  set_has_request_id();
  request_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:BidRequest.BidResponseFeedback.request_id)
}
inline void BidRequest_BidResponseFeedback::set_request_id(const void* value, size_t size) {
  set_has_request_id();
  request_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:BidRequest.BidResponseFeedback.request_id)
}
inline ::std::string* BidRequest_BidResponseFeedback::mutable_request_id() {
  set_has_request_id();
  // @@protoc_insertion_point(field_mutable:BidRequest.BidResponseFeedback.request_id)
  return request_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BidRequest_BidResponseFeedback::release_request_id() {
  clear_has_request_id();
  return request_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidRequest_BidResponseFeedback::set_allocated_request_id(::std::string* request_id) {
  if (request_id != NULL) {
    set_has_request_id();
  } else {
    clear_has_request_id();
  }
  request_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), request_id);
  // @@protoc_insertion_point(field_set_allocated:BidRequest.BidResponseFeedback.request_id)
}

// optional int32 creative_index = 2;
inline bool BidRequest_BidResponseFeedback::has_creative_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BidRequest_BidResponseFeedback::set_has_creative_index() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BidRequest_BidResponseFeedback::clear_has_creative_index() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BidRequest_BidResponseFeedback::clear_creative_index() {
  creative_index_ = 0;
  clear_has_creative_index();
}
inline ::google::protobuf::int32 BidRequest_BidResponseFeedback::creative_index() const {
  // @@protoc_insertion_point(field_get:BidRequest.BidResponseFeedback.creative_index)
  return creative_index_;
}
inline void BidRequest_BidResponseFeedback::set_creative_index(::google::protobuf::int32 value) {
  set_has_creative_index();
  creative_index_ = value;
  // @@protoc_insertion_point(field_set:BidRequest.BidResponseFeedback.creative_index)
}

// optional int32 creative_status_code = 3;
inline bool BidRequest_BidResponseFeedback::has_creative_status_code() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BidRequest_BidResponseFeedback::set_has_creative_status_code() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BidRequest_BidResponseFeedback::clear_has_creative_status_code() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BidRequest_BidResponseFeedback::clear_creative_status_code() {
  creative_status_code_ = 0;
  clear_has_creative_status_code();
}
inline ::google::protobuf::int32 BidRequest_BidResponseFeedback::creative_status_code() const {
  // @@protoc_insertion_point(field_get:BidRequest.BidResponseFeedback.creative_status_code)
  return creative_status_code_;
}
inline void BidRequest_BidResponseFeedback::set_creative_status_code(::google::protobuf::int32 value) {
  set_has_creative_status_code();
  creative_status_code_ = value;
  // @@protoc_insertion_point(field_set:BidRequest.BidResponseFeedback.creative_status_code)
}

// optional int64 cpm_micros = 4;
inline bool BidRequest_BidResponseFeedback::has_cpm_micros() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BidRequest_BidResponseFeedback::set_has_cpm_micros() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BidRequest_BidResponseFeedback::clear_has_cpm_micros() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BidRequest_BidResponseFeedback::clear_cpm_micros() {
  cpm_micros_ = GOOGLE_LONGLONG(0);
  clear_has_cpm_micros();
}
inline ::google::protobuf::int64 BidRequest_BidResponseFeedback::cpm_micros() const {
  // @@protoc_insertion_point(field_get:BidRequest.BidResponseFeedback.cpm_micros)
  return cpm_micros_;
}
inline void BidRequest_BidResponseFeedback::set_cpm_micros(::google::protobuf::int64 value) {
  set_has_cpm_micros();
  cpm_micros_ = value;
  // @@protoc_insertion_point(field_set:BidRequest.BidResponseFeedback.cpm_micros)
}

// -------------------------------------------------------------------

// BidRequest_MatchingNetwork

// optional string DEPRECATED_network_id = 1;
inline bool BidRequest_MatchingNetwork::has_deprecated_network_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BidRequest_MatchingNetwork::set_has_deprecated_network_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BidRequest_MatchingNetwork::clear_has_deprecated_network_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BidRequest_MatchingNetwork::clear_deprecated_network_id() {
  deprecated_network_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_deprecated_network_id();
}
inline const ::std::string& BidRequest_MatchingNetwork::deprecated_network_id() const {
  // @@protoc_insertion_point(field_get:BidRequest.MatchingNetwork.DEPRECATED_network_id)
  return deprecated_network_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidRequest_MatchingNetwork::set_deprecated_network_id(const ::std::string& value) {
  set_has_deprecated_network_id();
  deprecated_network_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:BidRequest.MatchingNetwork.DEPRECATED_network_id)
}
inline void BidRequest_MatchingNetwork::set_deprecated_network_id(const char* value) {
  set_has_deprecated_network_id();
  deprecated_network_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:BidRequest.MatchingNetwork.DEPRECATED_network_id)
}
inline void BidRequest_MatchingNetwork::set_deprecated_network_id(const char* value, size_t size) {
  set_has_deprecated_network_id();
  deprecated_network_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:BidRequest.MatchingNetwork.DEPRECATED_network_id)
}
inline ::std::string* BidRequest_MatchingNetwork::mutable_deprecated_network_id() {
  set_has_deprecated_network_id();
  // @@protoc_insertion_point(field_mutable:BidRequest.MatchingNetwork.DEPRECATED_network_id)
  return deprecated_network_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BidRequest_MatchingNetwork::release_deprecated_network_id() {
  clear_has_deprecated_network_id();
  return deprecated_network_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidRequest_MatchingNetwork::set_allocated_deprecated_network_id(::std::string* deprecated_network_id) {
  if (deprecated_network_id != NULL) {
    set_has_deprecated_network_id();
  } else {
    clear_has_deprecated_network_id();
  }
  deprecated_network_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), deprecated_network_id);
  // @@protoc_insertion_point(field_set_allocated:BidRequest.MatchingNetwork.DEPRECATED_network_id)
}

// optional string DEPRECATED_google_user_id = 2;
inline bool BidRequest_MatchingNetwork::has_deprecated_google_user_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BidRequest_MatchingNetwork::set_has_deprecated_google_user_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BidRequest_MatchingNetwork::clear_has_deprecated_google_user_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BidRequest_MatchingNetwork::clear_deprecated_google_user_id() {
  deprecated_google_user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_deprecated_google_user_id();
}
inline const ::std::string& BidRequest_MatchingNetwork::deprecated_google_user_id() const {
  // @@protoc_insertion_point(field_get:BidRequest.MatchingNetwork.DEPRECATED_google_user_id)
  return deprecated_google_user_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidRequest_MatchingNetwork::set_deprecated_google_user_id(const ::std::string& value) {
  set_has_deprecated_google_user_id();
  deprecated_google_user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:BidRequest.MatchingNetwork.DEPRECATED_google_user_id)
}
inline void BidRequest_MatchingNetwork::set_deprecated_google_user_id(const char* value) {
  set_has_deprecated_google_user_id();
  deprecated_google_user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:BidRequest.MatchingNetwork.DEPRECATED_google_user_id)
}
inline void BidRequest_MatchingNetwork::set_deprecated_google_user_id(const char* value, size_t size) {
  set_has_deprecated_google_user_id();
  deprecated_google_user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:BidRequest.MatchingNetwork.DEPRECATED_google_user_id)
}
inline ::std::string* BidRequest_MatchingNetwork::mutable_deprecated_google_user_id() {
  set_has_deprecated_google_user_id();
  // @@protoc_insertion_point(field_mutable:BidRequest.MatchingNetwork.DEPRECATED_google_user_id)
  return deprecated_google_user_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BidRequest_MatchingNetwork::release_deprecated_google_user_id() {
  clear_has_deprecated_google_user_id();
  return deprecated_google_user_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidRequest_MatchingNetwork::set_allocated_deprecated_google_user_id(::std::string* deprecated_google_user_id) {
  if (deprecated_google_user_id != NULL) {
    set_has_deprecated_google_user_id();
  } else {
    clear_has_deprecated_google_user_id();
  }
  deprecated_google_user_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), deprecated_google_user_id);
  // @@protoc_insertion_point(field_set_allocated:BidRequest.MatchingNetwork.DEPRECATED_google_user_id)
}

// -------------------------------------------------------------------

// BidRequest

// required bytes id = 2;
inline bool BidRequest::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BidRequest::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BidRequest::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BidRequest::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_id();
}
inline const ::std::string& BidRequest::id() const {
  // @@protoc_insertion_point(field_get:BidRequest.id)
  return id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidRequest::set_id(const ::std::string& value) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:BidRequest.id)
}
inline void BidRequest::set_id(const char* value) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:BidRequest.id)
}
inline void BidRequest::set_id(const void* value, size_t size) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:BidRequest.id)
}
inline ::std::string* BidRequest::mutable_id() {
  set_has_id();
  // @@protoc_insertion_point(field_mutable:BidRequest.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BidRequest::release_id() {
  clear_has_id();
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidRequest::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    set_has_id();
  } else {
    clear_has_id();
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:BidRequest.id)
}

// optional bytes ip = 4;
inline bool BidRequest::has_ip() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BidRequest::set_has_ip() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BidRequest::clear_has_ip() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BidRequest::clear_ip() {
  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_ip();
}
inline const ::std::string& BidRequest::ip() const {
  // @@protoc_insertion_point(field_get:BidRequest.ip)
  return ip_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidRequest::set_ip(const ::std::string& value) {
  set_has_ip();
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:BidRequest.ip)
}
inline void BidRequest::set_ip(const char* value) {
  set_has_ip();
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:BidRequest.ip)
}
inline void BidRequest::set_ip(const void* value, size_t size) {
  set_has_ip();
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:BidRequest.ip)
}
inline ::std::string* BidRequest::mutable_ip() {
  set_has_ip();
  // @@protoc_insertion_point(field_mutable:BidRequest.ip)
  return ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BidRequest::release_ip() {
  clear_has_ip();
  return ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidRequest::set_allocated_ip(::std::string* ip) {
  if (ip != NULL) {
    set_has_ip();
  } else {
    clear_has_ip();
  }
  ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip);
  // @@protoc_insertion_point(field_set_allocated:BidRequest.ip)
}

// optional string google_user_id = 21;
inline bool BidRequest::has_google_user_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BidRequest::set_has_google_user_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BidRequest::clear_has_google_user_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BidRequest::clear_google_user_id() {
  google_user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_google_user_id();
}
inline const ::std::string& BidRequest::google_user_id() const {
  // @@protoc_insertion_point(field_get:BidRequest.google_user_id)
  return google_user_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidRequest::set_google_user_id(const ::std::string& value) {
  set_has_google_user_id();
  google_user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:BidRequest.google_user_id)
}
inline void BidRequest::set_google_user_id(const char* value) {
  set_has_google_user_id();
  google_user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:BidRequest.google_user_id)
}
inline void BidRequest::set_google_user_id(const char* value, size_t size) {
  set_has_google_user_id();
  google_user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:BidRequest.google_user_id)
}
inline ::std::string* BidRequest::mutable_google_user_id() {
  set_has_google_user_id();
  // @@protoc_insertion_point(field_mutable:BidRequest.google_user_id)
  return google_user_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BidRequest::release_google_user_id() {
  clear_has_google_user_id();
  return google_user_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidRequest::set_allocated_google_user_id(::std::string* google_user_id) {
  if (google_user_id != NULL) {
    set_has_google_user_id();
  } else {
    clear_has_google_user_id();
  }
  google_user_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), google_user_id);
  // @@protoc_insertion_point(field_set_allocated:BidRequest.google_user_id)
}

// optional uint32 cookie_version = 20;
inline bool BidRequest::has_cookie_version() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BidRequest::set_has_cookie_version() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BidRequest::clear_has_cookie_version() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BidRequest::clear_cookie_version() {
  cookie_version_ = 0u;
  clear_has_cookie_version();
}
inline ::google::protobuf::uint32 BidRequest::cookie_version() const {
  // @@protoc_insertion_point(field_get:BidRequest.cookie_version)
  return cookie_version_;
}
inline void BidRequest::set_cookie_version(::google::protobuf::uint32 value) {
  set_has_cookie_version();
  cookie_version_ = value;
  // @@protoc_insertion_point(field_set:BidRequest.cookie_version)
}

// optional int32 cookie_age_seconds = 31;
inline bool BidRequest::has_cookie_age_seconds() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BidRequest::set_has_cookie_age_seconds() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BidRequest::clear_has_cookie_age_seconds() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BidRequest::clear_cookie_age_seconds() {
  cookie_age_seconds_ = 0;
  clear_has_cookie_age_seconds();
}
inline ::google::protobuf::int32 BidRequest::cookie_age_seconds() const {
  // @@protoc_insertion_point(field_get:BidRequest.cookie_age_seconds)
  return cookie_age_seconds_;
}
inline void BidRequest::set_cookie_age_seconds(::google::protobuf::int32 value) {
  set_has_cookie_age_seconds();
  cookie_age_seconds_ = value;
  // @@protoc_insertion_point(field_set:BidRequest.cookie_age_seconds)
}

// optional bytes hosted_match_data = 37;
inline bool BidRequest::has_hosted_match_data() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void BidRequest::set_has_hosted_match_data() {
  _has_bits_[0] |= 0x00000020u;
}
inline void BidRequest::clear_has_hosted_match_data() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void BidRequest::clear_hosted_match_data() {
  hosted_match_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_hosted_match_data();
}
inline const ::std::string& BidRequest::hosted_match_data() const {
  // @@protoc_insertion_point(field_get:BidRequest.hosted_match_data)
  return hosted_match_data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidRequest::set_hosted_match_data(const ::std::string& value) {
  set_has_hosted_match_data();
  hosted_match_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:BidRequest.hosted_match_data)
}
inline void BidRequest::set_hosted_match_data(const char* value) {
  set_has_hosted_match_data();
  hosted_match_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:BidRequest.hosted_match_data)
}
inline void BidRequest::set_hosted_match_data(const void* value, size_t size) {
  set_has_hosted_match_data();
  hosted_match_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:BidRequest.hosted_match_data)
}
inline ::std::string* BidRequest::mutable_hosted_match_data() {
  set_has_hosted_match_data();
  // @@protoc_insertion_point(field_mutable:BidRequest.hosted_match_data)
  return hosted_match_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BidRequest::release_hosted_match_data() {
  clear_has_hosted_match_data();
  return hosted_match_data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidRequest::set_allocated_hosted_match_data(::std::string* hosted_match_data) {
  if (hosted_match_data != NULL) {
    set_has_hosted_match_data();
  } else {
    clear_has_hosted_match_data();
  }
  hosted_match_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), hosted_match_data);
  // @@protoc_insertion_point(field_set_allocated:BidRequest.hosted_match_data)
}

// optional string user_agent = 6;
inline bool BidRequest::has_user_agent() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void BidRequest::set_has_user_agent() {
  _has_bits_[0] |= 0x00000040u;
}
inline void BidRequest::clear_has_user_agent() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void BidRequest::clear_user_agent() {
  user_agent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_user_agent();
}
inline const ::std::string& BidRequest::user_agent() const {
  // @@protoc_insertion_point(field_get:BidRequest.user_agent)
  return user_agent_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidRequest::set_user_agent(const ::std::string& value) {
  set_has_user_agent();
  user_agent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:BidRequest.user_agent)
}
inline void BidRequest::set_user_agent(const char* value) {
  set_has_user_agent();
  user_agent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:BidRequest.user_agent)
}
inline void BidRequest::set_user_agent(const char* value, size_t size) {
  set_has_user_agent();
  user_agent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:BidRequest.user_agent)
}
inline ::std::string* BidRequest::mutable_user_agent() {
  set_has_user_agent();
  // @@protoc_insertion_point(field_mutable:BidRequest.user_agent)
  return user_agent_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BidRequest::release_user_agent() {
  clear_has_user_agent();
  return user_agent_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidRequest::set_allocated_user_agent(::std::string* user_agent) {
  if (user_agent != NULL) {
    set_has_user_agent();
  } else {
    clear_has_user_agent();
  }
  user_agent_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_agent);
  // @@protoc_insertion_point(field_set_allocated:BidRequest.user_agent)
}

// optional int32 geo_criteria_id = 39;
inline bool BidRequest::has_geo_criteria_id() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void BidRequest::set_has_geo_criteria_id() {
  _has_bits_[0] |= 0x00000080u;
}
inline void BidRequest::clear_has_geo_criteria_id() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void BidRequest::clear_geo_criteria_id() {
  geo_criteria_id_ = 0;
  clear_has_geo_criteria_id();
}
inline ::google::protobuf::int32 BidRequest::geo_criteria_id() const {
  // @@protoc_insertion_point(field_get:BidRequest.geo_criteria_id)
  return geo_criteria_id_;
}
inline void BidRequest::set_geo_criteria_id(::google::protobuf::int32 value) {
  set_has_geo_criteria_id();
  geo_criteria_id_ = value;
  // @@protoc_insertion_point(field_set:BidRequest.geo_criteria_id)
}

// optional string postal_code = 33;
inline bool BidRequest::has_postal_code() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void BidRequest::set_has_postal_code() {
  _has_bits_[0] |= 0x00000100u;
}
inline void BidRequest::clear_has_postal_code() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void BidRequest::clear_postal_code() {
  postal_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_postal_code();
}
inline const ::std::string& BidRequest::postal_code() const {
  // @@protoc_insertion_point(field_get:BidRequest.postal_code)
  return postal_code_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidRequest::set_postal_code(const ::std::string& value) {
  set_has_postal_code();
  postal_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:BidRequest.postal_code)
}
inline void BidRequest::set_postal_code(const char* value) {
  set_has_postal_code();
  postal_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:BidRequest.postal_code)
}
inline void BidRequest::set_postal_code(const char* value, size_t size) {
  set_has_postal_code();
  postal_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:BidRequest.postal_code)
}
inline ::std::string* BidRequest::mutable_postal_code() {
  set_has_postal_code();
  // @@protoc_insertion_point(field_mutable:BidRequest.postal_code)
  return postal_code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BidRequest::release_postal_code() {
  clear_has_postal_code();
  return postal_code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidRequest::set_allocated_postal_code(::std::string* postal_code) {
  if (postal_code != NULL) {
    set_has_postal_code();
  } else {
    clear_has_postal_code();
  }
  postal_code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), postal_code);
  // @@protoc_insertion_point(field_set_allocated:BidRequest.postal_code)
}

// optional string postal_code_prefix = 34;
inline bool BidRequest::has_postal_code_prefix() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void BidRequest::set_has_postal_code_prefix() {
  _has_bits_[0] |= 0x00000200u;
}
inline void BidRequest::clear_has_postal_code_prefix() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void BidRequest::clear_postal_code_prefix() {
  postal_code_prefix_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_postal_code_prefix();
}
inline const ::std::string& BidRequest::postal_code_prefix() const {
  // @@protoc_insertion_point(field_get:BidRequest.postal_code_prefix)
  return postal_code_prefix_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidRequest::set_postal_code_prefix(const ::std::string& value) {
  set_has_postal_code_prefix();
  postal_code_prefix_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:BidRequest.postal_code_prefix)
}
inline void BidRequest::set_postal_code_prefix(const char* value) {
  set_has_postal_code_prefix();
  postal_code_prefix_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:BidRequest.postal_code_prefix)
}
inline void BidRequest::set_postal_code_prefix(const char* value, size_t size) {
  set_has_postal_code_prefix();
  postal_code_prefix_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:BidRequest.postal_code_prefix)
}
inline ::std::string* BidRequest::mutable_postal_code_prefix() {
  set_has_postal_code_prefix();
  // @@protoc_insertion_point(field_mutable:BidRequest.postal_code_prefix)
  return postal_code_prefix_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BidRequest::release_postal_code_prefix() {
  clear_has_postal_code_prefix();
  return postal_code_prefix_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidRequest::set_allocated_postal_code_prefix(::std::string* postal_code_prefix) {
  if (postal_code_prefix != NULL) {
    set_has_postal_code_prefix();
  } else {
    clear_has_postal_code_prefix();
  }
  postal_code_prefix_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), postal_code_prefix);
  // @@protoc_insertion_point(field_set_allocated:BidRequest.postal_code_prefix)
}

// optional bytes encrypted_hyperlocal_set = 40;
inline bool BidRequest::has_encrypted_hyperlocal_set() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void BidRequest::set_has_encrypted_hyperlocal_set() {
  _has_bits_[0] |= 0x00000400u;
}
inline void BidRequest::clear_has_encrypted_hyperlocal_set() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void BidRequest::clear_encrypted_hyperlocal_set() {
  encrypted_hyperlocal_set_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_encrypted_hyperlocal_set();
}
inline const ::std::string& BidRequest::encrypted_hyperlocal_set() const {
  // @@protoc_insertion_point(field_get:BidRequest.encrypted_hyperlocal_set)
  return encrypted_hyperlocal_set_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidRequest::set_encrypted_hyperlocal_set(const ::std::string& value) {
  set_has_encrypted_hyperlocal_set();
  encrypted_hyperlocal_set_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:BidRequest.encrypted_hyperlocal_set)
}
inline void BidRequest::set_encrypted_hyperlocal_set(const char* value) {
  set_has_encrypted_hyperlocal_set();
  encrypted_hyperlocal_set_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:BidRequest.encrypted_hyperlocal_set)
}
inline void BidRequest::set_encrypted_hyperlocal_set(const void* value, size_t size) {
  set_has_encrypted_hyperlocal_set();
  encrypted_hyperlocal_set_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:BidRequest.encrypted_hyperlocal_set)
}
inline ::std::string* BidRequest::mutable_encrypted_hyperlocal_set() {
  set_has_encrypted_hyperlocal_set();
  // @@protoc_insertion_point(field_mutable:BidRequest.encrypted_hyperlocal_set)
  return encrypted_hyperlocal_set_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BidRequest::release_encrypted_hyperlocal_set() {
  clear_has_encrypted_hyperlocal_set();
  return encrypted_hyperlocal_set_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidRequest::set_allocated_encrypted_hyperlocal_set(::std::string* encrypted_hyperlocal_set) {
  if (encrypted_hyperlocal_set != NULL) {
    set_has_encrypted_hyperlocal_set();
  } else {
    clear_has_encrypted_hyperlocal_set();
  }
  encrypted_hyperlocal_set_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), encrypted_hyperlocal_set);
  // @@protoc_insertion_point(field_set_allocated:BidRequest.encrypted_hyperlocal_set)
}

// optional int32 timezone_offset = 25;
inline bool BidRequest::has_timezone_offset() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void BidRequest::set_has_timezone_offset() {
  _has_bits_[0] |= 0x00000800u;
}
inline void BidRequest::clear_has_timezone_offset() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void BidRequest::clear_timezone_offset() {
  timezone_offset_ = 0;
  clear_has_timezone_offset();
}
inline ::google::protobuf::int32 BidRequest::timezone_offset() const {
  // @@protoc_insertion_point(field_get:BidRequest.timezone_offset)
  return timezone_offset_;
}
inline void BidRequest::set_timezone_offset(::google::protobuf::int32 value) {
  set_has_timezone_offset();
  timezone_offset_ = value;
  // @@protoc_insertion_point(field_set:BidRequest.timezone_offset)
}

// repeated int32 user_vertical = 30 [packed = true];
inline int BidRequest::user_vertical_size() const {
  return user_vertical_.size();
}
inline void BidRequest::clear_user_vertical() {
  user_vertical_.Clear();
}
inline ::google::protobuf::int32 BidRequest::user_vertical(int index) const {
  // @@protoc_insertion_point(field_get:BidRequest.user_vertical)
  return user_vertical_.Get(index);
}
inline void BidRequest::set_user_vertical(int index, ::google::protobuf::int32 value) {
  user_vertical_.Set(index, value);
  // @@protoc_insertion_point(field_set:BidRequest.user_vertical)
}
inline void BidRequest::add_user_vertical(::google::protobuf::int32 value) {
  user_vertical_.Add(value);
  // @@protoc_insertion_point(field_add:BidRequest.user_vertical)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
BidRequest::user_vertical() const {
  // @@protoc_insertion_point(field_list:BidRequest.user_vertical)
  return user_vertical_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
BidRequest::mutable_user_vertical() {
  // @@protoc_insertion_point(field_mutable_list:BidRequest.user_vertical)
  return &user_vertical_;
}

// repeated .BidRequest.UserList user_list = 32;
inline int BidRequest::user_list_size() const {
  return user_list_.size();
}
inline void BidRequest::clear_user_list() {
  user_list_.Clear();
}
inline const ::BidRequest_UserList& BidRequest::user_list(int index) const {
  // @@protoc_insertion_point(field_get:BidRequest.user_list)
  return user_list_.Get(index);
}
inline ::BidRequest_UserList* BidRequest::mutable_user_list(int index) {
  // @@protoc_insertion_point(field_mutable:BidRequest.user_list)
  return user_list_.Mutable(index);
}
inline ::BidRequest_UserList* BidRequest::add_user_list() {
  // @@protoc_insertion_point(field_add:BidRequest.user_list)
  return user_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::BidRequest_UserList >*
BidRequest::mutable_user_list() {
  // @@protoc_insertion_point(field_mutable_list:BidRequest.user_list)
  return &user_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::BidRequest_UserList >&
BidRequest::user_list() const {
  // @@protoc_insertion_point(field_list:BidRequest.user_list)
  return user_list_;
}

// optional int32 seller_network_id = 41;
inline bool BidRequest::has_seller_network_id() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void BidRequest::set_has_seller_network_id() {
  _has_bits_[0] |= 0x00004000u;
}
inline void BidRequest::clear_has_seller_network_id() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void BidRequest::clear_seller_network_id() {
  seller_network_id_ = 0;
  clear_has_seller_network_id();
}
inline ::google::protobuf::int32 BidRequest::seller_network_id() const {
  // @@protoc_insertion_point(field_get:BidRequest.seller_network_id)
  return seller_network_id_;
}
inline void BidRequest::set_seller_network_id(::google::protobuf::int32 value) {
  set_has_seller_network_id();
  seller_network_id_ = value;
  // @@protoc_insertion_point(field_set:BidRequest.seller_network_id)
}

// optional string url = 11;
inline bool BidRequest::has_url() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void BidRequest::set_has_url() {
  _has_bits_[0] |= 0x00008000u;
}
inline void BidRequest::clear_has_url() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void BidRequest::clear_url() {
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_url();
}
inline const ::std::string& BidRequest::url() const {
  // @@protoc_insertion_point(field_get:BidRequest.url)
  return url_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidRequest::set_url(const ::std::string& value) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:BidRequest.url)
}
inline void BidRequest::set_url(const char* value) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:BidRequest.url)
}
inline void BidRequest::set_url(const char* value, size_t size) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:BidRequest.url)
}
inline ::std::string* BidRequest::mutable_url() {
  set_has_url();
  // @@protoc_insertion_point(field_mutable:BidRequest.url)
  return url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BidRequest::release_url() {
  clear_has_url();
  return url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidRequest::set_allocated_url(::std::string* url) {
  if (url != NULL) {
    set_has_url();
  } else {
    clear_has_url();
  }
  url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url);
  // @@protoc_insertion_point(field_set_allocated:BidRequest.url)
}

// optional string anonymous_id = 19;
inline bool BidRequest::has_anonymous_id() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void BidRequest::set_has_anonymous_id() {
  _has_bits_[0] |= 0x00010000u;
}
inline void BidRequest::clear_has_anonymous_id() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void BidRequest::clear_anonymous_id() {
  anonymous_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_anonymous_id();
}
inline const ::std::string& BidRequest::anonymous_id() const {
  // @@protoc_insertion_point(field_get:BidRequest.anonymous_id)
  return anonymous_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidRequest::set_anonymous_id(const ::std::string& value) {
  set_has_anonymous_id();
  anonymous_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:BidRequest.anonymous_id)
}
inline void BidRequest::set_anonymous_id(const char* value) {
  set_has_anonymous_id();
  anonymous_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:BidRequest.anonymous_id)
}
inline void BidRequest::set_anonymous_id(const char* value, size_t size) {
  set_has_anonymous_id();
  anonymous_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:BidRequest.anonymous_id)
}
inline ::std::string* BidRequest::mutable_anonymous_id() {
  set_has_anonymous_id();
  // @@protoc_insertion_point(field_mutable:BidRequest.anonymous_id)
  return anonymous_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BidRequest::release_anonymous_id() {
  clear_has_anonymous_id();
  return anonymous_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidRequest::set_allocated_anonymous_id(::std::string* anonymous_id) {
  if (anonymous_id != NULL) {
    set_has_anonymous_id();
  } else {
    clear_has_anonymous_id();
  }
  anonymous_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), anonymous_id);
  // @@protoc_insertion_point(field_set_allocated:BidRequest.anonymous_id)
}

// repeated string detected_language = 12;
inline int BidRequest::detected_language_size() const {
  return detected_language_.size();
}
inline void BidRequest::clear_detected_language() {
  detected_language_.Clear();
}
inline const ::std::string& BidRequest::detected_language(int index) const {
  // @@protoc_insertion_point(field_get:BidRequest.detected_language)
  return detected_language_.Get(index);
}
inline ::std::string* BidRequest::mutable_detected_language(int index) {
  // @@protoc_insertion_point(field_mutable:BidRequest.detected_language)
  return detected_language_.Mutable(index);
}
inline void BidRequest::set_detected_language(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:BidRequest.detected_language)
  detected_language_.Mutable(index)->assign(value);
}
inline void BidRequest::set_detected_language(int index, const char* value) {
  detected_language_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:BidRequest.detected_language)
}
inline void BidRequest::set_detected_language(int index, const char* value, size_t size) {
  detected_language_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:BidRequest.detected_language)
}
inline ::std::string* BidRequest::add_detected_language() {
  return detected_language_.Add();
}
inline void BidRequest::add_detected_language(const ::std::string& value) {
  detected_language_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:BidRequest.detected_language)
}
inline void BidRequest::add_detected_language(const char* value) {
  detected_language_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:BidRequest.detected_language)
}
inline void BidRequest::add_detected_language(const char* value, size_t size) {
  detected_language_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:BidRequest.detected_language)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
BidRequest::detected_language() const {
  // @@protoc_insertion_point(field_list:BidRequest.detected_language)
  return detected_language_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
BidRequest::mutable_detected_language() {
  // @@protoc_insertion_point(field_mutable_list:BidRequest.detected_language)
  return &detected_language_;
}

// repeated .BidRequest.Vertical detected_vertical = 13;
inline int BidRequest::detected_vertical_size() const {
  return detected_vertical_.size();
}
inline void BidRequest::clear_detected_vertical() {
  detected_vertical_.Clear();
}
inline const ::BidRequest_Vertical& BidRequest::detected_vertical(int index) const {
  // @@protoc_insertion_point(field_get:BidRequest.detected_vertical)
  return detected_vertical_.Get(index);
}
inline ::BidRequest_Vertical* BidRequest::mutable_detected_vertical(int index) {
  // @@protoc_insertion_point(field_mutable:BidRequest.detected_vertical)
  return detected_vertical_.Mutable(index);
}
inline ::BidRequest_Vertical* BidRequest::add_detected_vertical() {
  // @@protoc_insertion_point(field_add:BidRequest.detected_vertical)
  return detected_vertical_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::BidRequest_Vertical >*
BidRequest::mutable_detected_vertical() {
  // @@protoc_insertion_point(field_mutable_list:BidRequest.detected_vertical)
  return &detected_vertical_;
}
inline const ::google::protobuf::RepeatedPtrField< ::BidRequest_Vertical >&
BidRequest::detected_vertical() const {
  // @@protoc_insertion_point(field_list:BidRequest.detected_vertical)
  return detected_vertical_;
}

// optional int32 vertical_dictionary_version = 24;
inline bool BidRequest::has_vertical_dictionary_version() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void BidRequest::set_has_vertical_dictionary_version() {
  _has_bits_[0] |= 0x00080000u;
}
inline void BidRequest::clear_has_vertical_dictionary_version() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void BidRequest::clear_vertical_dictionary_version() {
  vertical_dictionary_version_ = 0;
  clear_has_vertical_dictionary_version();
}
inline ::google::protobuf::int32 BidRequest::vertical_dictionary_version() const {
  // @@protoc_insertion_point(field_get:BidRequest.vertical_dictionary_version)
  return vertical_dictionary_version_;
}
inline void BidRequest::set_vertical_dictionary_version(::google::protobuf::int32 value) {
  set_has_vertical_dictionary_version();
  vertical_dictionary_version_ = value;
  // @@protoc_insertion_point(field_set:BidRequest.vertical_dictionary_version)
}

// repeated int32 detected_content_label = 26 [packed = true];
inline int BidRequest::detected_content_label_size() const {
  return detected_content_label_.size();
}
inline void BidRequest::clear_detected_content_label() {
  detected_content_label_.Clear();
}
inline ::google::protobuf::int32 BidRequest::detected_content_label(int index) const {
  // @@protoc_insertion_point(field_get:BidRequest.detected_content_label)
  return detected_content_label_.Get(index);
}
inline void BidRequest::set_detected_content_label(int index, ::google::protobuf::int32 value) {
  detected_content_label_.Set(index, value);
  // @@protoc_insertion_point(field_set:BidRequest.detected_content_label)
}
inline void BidRequest::add_detected_content_label(::google::protobuf::int32 value) {
  detected_content_label_.Add(value);
  // @@protoc_insertion_point(field_add:BidRequest.detected_content_label)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
BidRequest::detected_content_label() const {
  // @@protoc_insertion_point(field_list:BidRequest.detected_content_label)
  return detected_content_label_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
BidRequest::mutable_detected_content_label() {
  // @@protoc_insertion_point(field_mutable_list:BidRequest.detected_content_label)
  return &detected_content_label_;
}

// repeated int32 site_list_id = 36;
inline int BidRequest::site_list_id_size() const {
  return site_list_id_.size();
}
inline void BidRequest::clear_site_list_id() {
  site_list_id_.Clear();
}
inline ::google::protobuf::int32 BidRequest::site_list_id(int index) const {
  // @@protoc_insertion_point(field_get:BidRequest.site_list_id)
  return site_list_id_.Get(index);
}
inline void BidRequest::set_site_list_id(int index, ::google::protobuf::int32 value) {
  site_list_id_.Set(index, value);
  // @@protoc_insertion_point(field_set:BidRequest.site_list_id)
}
inline void BidRequest::add_site_list_id(::google::protobuf::int32 value) {
  site_list_id_.Add(value);
  // @@protoc_insertion_point(field_add:BidRequest.site_list_id)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
BidRequest::site_list_id() const {
  // @@protoc_insertion_point(field_list:BidRequest.site_list_id)
  return site_list_id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
BidRequest::mutable_site_list_id() {
  // @@protoc_insertion_point(field_mutable_list:BidRequest.site_list_id)
  return &site_list_id_;
}

// repeated .BidRequest.KeyValue key_value = 38;
inline int BidRequest::key_value_size() const {
  return key_value_.size();
}
inline void BidRequest::clear_key_value() {
  key_value_.Clear();
}
inline const ::BidRequest_KeyValue& BidRequest::key_value(int index) const {
  // @@protoc_insertion_point(field_get:BidRequest.key_value)
  return key_value_.Get(index);
}
inline ::BidRequest_KeyValue* BidRequest::mutable_key_value(int index) {
  // @@protoc_insertion_point(field_mutable:BidRequest.key_value)
  return key_value_.Mutable(index);
}
inline ::BidRequest_KeyValue* BidRequest::add_key_value() {
  // @@protoc_insertion_point(field_add:BidRequest.key_value)
  return key_value_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::BidRequest_KeyValue >*
BidRequest::mutable_key_value() {
  // @@protoc_insertion_point(field_mutable_list:BidRequest.key_value)
  return &key_value_;
}
inline const ::google::protobuf::RepeatedPtrField< ::BidRequest_KeyValue >&
BidRequest::key_value() const {
  // @@protoc_insertion_point(field_list:BidRequest.key_value)
  return key_value_;
}

// optional .BidRequest.Mobile mobile = 28;
inline bool BidRequest::has_mobile() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void BidRequest::set_has_mobile() {
  _has_bits_[0] |= 0x00800000u;
}
inline void BidRequest::clear_has_mobile() {
  _has_bits_[0] &= ~0x00800000u;
}
inline void BidRequest::clear_mobile() {
  if (mobile_ != NULL) mobile_->::BidRequest_Mobile::Clear();
  clear_has_mobile();
}
inline const ::BidRequest_Mobile& BidRequest::mobile() const {
  // @@protoc_insertion_point(field_get:BidRequest.mobile)
  return mobile_ != NULL ? *mobile_ : *default_instance_->mobile_;
}
inline ::BidRequest_Mobile* BidRequest::mutable_mobile() {
  set_has_mobile();
  if (mobile_ == NULL) {
    mobile_ = new ::BidRequest_Mobile;
  }
  // @@protoc_insertion_point(field_mutable:BidRequest.mobile)
  return mobile_;
}
inline ::BidRequest_Mobile* BidRequest::release_mobile() {
  clear_has_mobile();
  ::BidRequest_Mobile* temp = mobile_;
  mobile_ = NULL;
  return temp;
}
inline void BidRequest::set_allocated_mobile(::BidRequest_Mobile* mobile) {
  delete mobile_;
  mobile_ = mobile;
  if (mobile) {
    set_has_mobile();
  } else {
    clear_has_mobile();
  }
  // @@protoc_insertion_point(field_set_allocated:BidRequest.mobile)
}

// optional .BidRequest.Video video = 29;
inline bool BidRequest::has_video() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void BidRequest::set_has_video() {
  _has_bits_[0] |= 0x01000000u;
}
inline void BidRequest::clear_has_video() {
  _has_bits_[0] &= ~0x01000000u;
}
inline void BidRequest::clear_video() {
  if (video_ != NULL) video_->::BidRequest_Video::Clear();
  clear_has_video();
}
inline const ::BidRequest_Video& BidRequest::video() const {
  // @@protoc_insertion_point(field_get:BidRequest.video)
  return video_ != NULL ? *video_ : *default_instance_->video_;
}
inline ::BidRequest_Video* BidRequest::mutable_video() {
  set_has_video();
  if (video_ == NULL) {
    video_ = new ::BidRequest_Video;
  }
  // @@protoc_insertion_point(field_mutable:BidRequest.video)
  return video_;
}
inline ::BidRequest_Video* BidRequest::release_video() {
  clear_has_video();
  ::BidRequest_Video* temp = video_;
  video_ = NULL;
  return temp;
}
inline void BidRequest::set_allocated_video(::BidRequest_Video* video) {
  delete video_;
  video_ = video;
  if (video) {
    set_has_video();
  } else {
    clear_has_video();
  }
  // @@protoc_insertion_point(field_set_allocated:BidRequest.video)
}

// optional fixed64 publisher_settings_list_id = 42;
inline bool BidRequest::has_publisher_settings_list_id() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
inline void BidRequest::set_has_publisher_settings_list_id() {
  _has_bits_[0] |= 0x02000000u;
}
inline void BidRequest::clear_has_publisher_settings_list_id() {
  _has_bits_[0] &= ~0x02000000u;
}
inline void BidRequest::clear_publisher_settings_list_id() {
  publisher_settings_list_id_ = GOOGLE_ULONGLONG(0);
  clear_has_publisher_settings_list_id();
}
inline ::google::protobuf::uint64 BidRequest::publisher_settings_list_id() const {
  // @@protoc_insertion_point(field_get:BidRequest.publisher_settings_list_id)
  return publisher_settings_list_id_;
}
inline void BidRequest::set_publisher_settings_list_id(::google::protobuf::uint64 value) {
  set_has_publisher_settings_list_id();
  publisher_settings_list_id_ = value;
  // @@protoc_insertion_point(field_set:BidRequest.publisher_settings_list_id)
}

// repeated .BidRequest.AdSlot adslot = 14;
inline int BidRequest::adslot_size() const {
  return adslot_.size();
}
inline void BidRequest::clear_adslot() {
  adslot_.Clear();
}
inline const ::BidRequest_AdSlot& BidRequest::adslot(int index) const {
  // @@protoc_insertion_point(field_get:BidRequest.adslot)
  return adslot_.Get(index);
}
inline ::BidRequest_AdSlot* BidRequest::mutable_adslot(int index) {
  // @@protoc_insertion_point(field_mutable:BidRequest.adslot)
  return adslot_.Mutable(index);
}
inline ::BidRequest_AdSlot* BidRequest::add_adslot() {
  // @@protoc_insertion_point(field_add:BidRequest.adslot)
  return adslot_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::BidRequest_AdSlot >*
BidRequest::mutable_adslot() {
  // @@protoc_insertion_point(field_mutable_list:BidRequest.adslot)
  return &adslot_;
}
inline const ::google::protobuf::RepeatedPtrField< ::BidRequest_AdSlot >&
BidRequest::adslot() const {
  // @@protoc_insertion_point(field_list:BidRequest.adslot)
  return adslot_;
}

// repeated .BidRequest.BidResponseFeedback bid_response_feedback = 44;
inline int BidRequest::bid_response_feedback_size() const {
  return bid_response_feedback_.size();
}
inline void BidRequest::clear_bid_response_feedback() {
  bid_response_feedback_.Clear();
}
inline const ::BidRequest_BidResponseFeedback& BidRequest::bid_response_feedback(int index) const {
  // @@protoc_insertion_point(field_get:BidRequest.bid_response_feedback)
  return bid_response_feedback_.Get(index);
}
inline ::BidRequest_BidResponseFeedback* BidRequest::mutable_bid_response_feedback(int index) {
  // @@protoc_insertion_point(field_mutable:BidRequest.bid_response_feedback)
  return bid_response_feedback_.Mutable(index);
}
inline ::BidRequest_BidResponseFeedback* BidRequest::add_bid_response_feedback() {
  // @@protoc_insertion_point(field_add:BidRequest.bid_response_feedback)
  return bid_response_feedback_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::BidRequest_BidResponseFeedback >*
BidRequest::mutable_bid_response_feedback() {
  // @@protoc_insertion_point(field_mutable_list:BidRequest.bid_response_feedback)
  return &bid_response_feedback_;
}
inline const ::google::protobuf::RepeatedPtrField< ::BidRequest_BidResponseFeedback >&
BidRequest::bid_response_feedback() const {
  // @@protoc_insertion_point(field_list:BidRequest.bid_response_feedback)
  return bid_response_feedback_;
}

// optional bool is_test = 15 [default = false];
inline bool BidRequest::has_is_test() const {
  return (_has_bits_[0] & 0x10000000u) != 0;
}
inline void BidRequest::set_has_is_test() {
  _has_bits_[0] |= 0x10000000u;
}
inline void BidRequest::clear_has_is_test() {
  _has_bits_[0] &= ~0x10000000u;
}
inline void BidRequest::clear_is_test() {
  is_test_ = false;
  clear_has_is_test();
}
inline bool BidRequest::is_test() const {
  // @@protoc_insertion_point(field_get:BidRequest.is_test)
  return is_test_;
}
inline void BidRequest::set_is_test(bool value) {
  set_has_is_test();
  is_test_ = value;
  // @@protoc_insertion_point(field_set:BidRequest.is_test)
}

// optional bool is_ping = 17 [default = false];
inline bool BidRequest::has_is_ping() const {
  return (_has_bits_[0] & 0x20000000u) != 0;
}
inline void BidRequest::set_has_is_ping() {
  _has_bits_[0] |= 0x20000000u;
}
inline void BidRequest::clear_has_is_ping() {
  _has_bits_[0] &= ~0x20000000u;
}
inline void BidRequest::clear_is_ping() {
  is_ping_ = false;
  clear_has_is_ping();
}
inline bool BidRequest::is_ping() const {
  // @@protoc_insertion_point(field_get:BidRequest.is_ping)
  return is_ping_;
}
inline void BidRequest::set_is_ping(bool value) {
  set_has_is_ping();
  is_ping_ = value;
  // @@protoc_insertion_point(field_set:BidRequest.is_ping)
}

// optional bool is_predicted_to_be_ignored = 45 [default = false];
inline bool BidRequest::has_is_predicted_to_be_ignored() const {
  return (_has_bits_[0] & 0x40000000u) != 0;
}
inline void BidRequest::set_has_is_predicted_to_be_ignored() {
  _has_bits_[0] |= 0x40000000u;
}
inline void BidRequest::clear_has_is_predicted_to_be_ignored() {
  _has_bits_[0] &= ~0x40000000u;
}
inline void BidRequest::clear_is_predicted_to_be_ignored() {
  is_predicted_to_be_ignored_ = false;
  clear_has_is_predicted_to_be_ignored();
}
inline bool BidRequest::is_predicted_to_be_ignored() const {
  // @@protoc_insertion_point(field_get:BidRequest.is_predicted_to_be_ignored)
  return is_predicted_to_be_ignored_;
}
inline void BidRequest::set_is_predicted_to_be_ignored(bool value) {
  set_has_is_predicted_to_be_ignored();
  is_predicted_to_be_ignored_ = value;
  // @@protoc_insertion_point(field_set:BidRequest.is_predicted_to_be_ignored)
}

// optional int32 DEPRECATED_protocol_version = 1;
inline bool BidRequest::has_deprecated_protocol_version() const {
  return (_has_bits_[0] & 0x80000000u) != 0;
}
inline void BidRequest::set_has_deprecated_protocol_version() {
  _has_bits_[0] |= 0x80000000u;
}
inline void BidRequest::clear_has_deprecated_protocol_version() {
  _has_bits_[0] &= ~0x80000000u;
}
inline void BidRequest::clear_deprecated_protocol_version() {
  deprecated_protocol_version_ = 0;
  clear_has_deprecated_protocol_version();
}
inline ::google::protobuf::int32 BidRequest::deprecated_protocol_version() const {
  // @@protoc_insertion_point(field_get:BidRequest.DEPRECATED_protocol_version)
  return deprecated_protocol_version_;
}
inline void BidRequest::set_deprecated_protocol_version(::google::protobuf::int32 value) {
  set_has_deprecated_protocol_version();
  deprecated_protocol_version_ = value;
  // @@protoc_insertion_point(field_set:BidRequest.DEPRECATED_protocol_version)
}

// optional string DEPRECATED_click_tracking_url = 3;
inline bool BidRequest::has_deprecated_click_tracking_url() const {
  return (_has_bits_[1] & 0x00000001u) != 0;
}
inline void BidRequest::set_has_deprecated_click_tracking_url() {
  _has_bits_[1] |= 0x00000001u;
}
inline void BidRequest::clear_has_deprecated_click_tracking_url() {
  _has_bits_[1] &= ~0x00000001u;
}
inline void BidRequest::clear_deprecated_click_tracking_url() {
  deprecated_click_tracking_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_deprecated_click_tracking_url();
}
inline const ::std::string& BidRequest::deprecated_click_tracking_url() const {
  // @@protoc_insertion_point(field_get:BidRequest.DEPRECATED_click_tracking_url)
  return deprecated_click_tracking_url_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidRequest::set_deprecated_click_tracking_url(const ::std::string& value) {
  set_has_deprecated_click_tracking_url();
  deprecated_click_tracking_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:BidRequest.DEPRECATED_click_tracking_url)
}
inline void BidRequest::set_deprecated_click_tracking_url(const char* value) {
  set_has_deprecated_click_tracking_url();
  deprecated_click_tracking_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:BidRequest.DEPRECATED_click_tracking_url)
}
inline void BidRequest::set_deprecated_click_tracking_url(const char* value, size_t size) {
  set_has_deprecated_click_tracking_url();
  deprecated_click_tracking_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:BidRequest.DEPRECATED_click_tracking_url)
}
inline ::std::string* BidRequest::mutable_deprecated_click_tracking_url() {
  set_has_deprecated_click_tracking_url();
  // @@protoc_insertion_point(field_mutable:BidRequest.DEPRECATED_click_tracking_url)
  return deprecated_click_tracking_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BidRequest::release_deprecated_click_tracking_url() {
  clear_has_deprecated_click_tracking_url();
  return deprecated_click_tracking_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidRequest::set_allocated_deprecated_click_tracking_url(::std::string* deprecated_click_tracking_url) {
  if (deprecated_click_tracking_url != NULL) {
    set_has_deprecated_click_tracking_url();
  } else {
    clear_has_deprecated_click_tracking_url();
  }
  deprecated_click_tracking_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), deprecated_click_tracking_url);
  // @@protoc_insertion_point(field_set_allocated:BidRequest.DEPRECATED_click_tracking_url)
}

// optional uint64 DEPRECATED_cookie = 5;
inline bool BidRequest::has_deprecated_cookie() const {
  return (_has_bits_[1] & 0x00000002u) != 0;
}
inline void BidRequest::set_has_deprecated_cookie() {
  _has_bits_[1] |= 0x00000002u;
}
inline void BidRequest::clear_has_deprecated_cookie() {
  _has_bits_[1] &= ~0x00000002u;
}
inline void BidRequest::clear_deprecated_cookie() {
  deprecated_cookie_ = GOOGLE_ULONGLONG(0);
  clear_has_deprecated_cookie();
}
inline ::google::protobuf::uint64 BidRequest::deprecated_cookie() const {
  // @@protoc_insertion_point(field_get:BidRequest.DEPRECATED_cookie)
  return deprecated_cookie_;
}
inline void BidRequest::set_deprecated_cookie(::google::protobuf::uint64 value) {
  set_has_deprecated_cookie();
  deprecated_cookie_ = value;
  // @@protoc_insertion_point(field_set:BidRequest.DEPRECATED_cookie)
}

// optional string DEPRECATED_country = 7;
inline bool BidRequest::has_deprecated_country() const {
  return (_has_bits_[1] & 0x00000004u) != 0;
}
inline void BidRequest::set_has_deprecated_country() {
  _has_bits_[1] |= 0x00000004u;
}
inline void BidRequest::clear_has_deprecated_country() {
  _has_bits_[1] &= ~0x00000004u;
}
inline void BidRequest::clear_deprecated_country() {
  deprecated_country_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_deprecated_country();
}
inline const ::std::string& BidRequest::deprecated_country() const {
  // @@protoc_insertion_point(field_get:BidRequest.DEPRECATED_country)
  return deprecated_country_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidRequest::set_deprecated_country(const ::std::string& value) {
  set_has_deprecated_country();
  deprecated_country_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:BidRequest.DEPRECATED_country)
}
inline void BidRequest::set_deprecated_country(const char* value) {
  set_has_deprecated_country();
  deprecated_country_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:BidRequest.DEPRECATED_country)
}
inline void BidRequest::set_deprecated_country(const char* value, size_t size) {
  set_has_deprecated_country();
  deprecated_country_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:BidRequest.DEPRECATED_country)
}
inline ::std::string* BidRequest::mutable_deprecated_country() {
  set_has_deprecated_country();
  // @@protoc_insertion_point(field_mutable:BidRequest.DEPRECATED_country)
  return deprecated_country_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BidRequest::release_deprecated_country() {
  clear_has_deprecated_country();
  return deprecated_country_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidRequest::set_allocated_deprecated_country(::std::string* deprecated_country) {
  if (deprecated_country != NULL) {
    set_has_deprecated_country();
  } else {
    clear_has_deprecated_country();
  }
  deprecated_country_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), deprecated_country);
  // @@protoc_insertion_point(field_set_allocated:BidRequest.DEPRECATED_country)
}

// optional string DEPRECATED_region = 8;
inline bool BidRequest::has_deprecated_region() const {
  return (_has_bits_[1] & 0x00000008u) != 0;
}
inline void BidRequest::set_has_deprecated_region() {
  _has_bits_[1] |= 0x00000008u;
}
inline void BidRequest::clear_has_deprecated_region() {
  _has_bits_[1] &= ~0x00000008u;
}
inline void BidRequest::clear_deprecated_region() {
  deprecated_region_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_deprecated_region();
}
inline const ::std::string& BidRequest::deprecated_region() const {
  // @@protoc_insertion_point(field_get:BidRequest.DEPRECATED_region)
  return deprecated_region_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidRequest::set_deprecated_region(const ::std::string& value) {
  set_has_deprecated_region();
  deprecated_region_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:BidRequest.DEPRECATED_region)
}
inline void BidRequest::set_deprecated_region(const char* value) {
  set_has_deprecated_region();
  deprecated_region_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:BidRequest.DEPRECATED_region)
}
inline void BidRequest::set_deprecated_region(const char* value, size_t size) {
  set_has_deprecated_region();
  deprecated_region_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:BidRequest.DEPRECATED_region)
}
inline ::std::string* BidRequest::mutable_deprecated_region() {
  set_has_deprecated_region();
  // @@protoc_insertion_point(field_mutable:BidRequest.DEPRECATED_region)
  return deprecated_region_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BidRequest::release_deprecated_region() {
  clear_has_deprecated_region();
  return deprecated_region_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidRequest::set_allocated_deprecated_region(::std::string* deprecated_region) {
  if (deprecated_region != NULL) {
    set_has_deprecated_region();
  } else {
    clear_has_deprecated_region();
  }
  deprecated_region_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), deprecated_region);
  // @@protoc_insertion_point(field_set_allocated:BidRequest.DEPRECATED_region)
}

// optional string DEPRECATED_city = 9;
inline bool BidRequest::has_deprecated_city() const {
  return (_has_bits_[1] & 0x00000010u) != 0;
}
inline void BidRequest::set_has_deprecated_city() {
  _has_bits_[1] |= 0x00000010u;
}
inline void BidRequest::clear_has_deprecated_city() {
  _has_bits_[1] &= ~0x00000010u;
}
inline void BidRequest::clear_deprecated_city() {
  deprecated_city_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_deprecated_city();
}
inline const ::std::string& BidRequest::deprecated_city() const {
  // @@protoc_insertion_point(field_get:BidRequest.DEPRECATED_city)
  return deprecated_city_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidRequest::set_deprecated_city(const ::std::string& value) {
  set_has_deprecated_city();
  deprecated_city_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:BidRequest.DEPRECATED_city)
}
inline void BidRequest::set_deprecated_city(const char* value) {
  set_has_deprecated_city();
  deprecated_city_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:BidRequest.DEPRECATED_city)
}
inline void BidRequest::set_deprecated_city(const char* value, size_t size) {
  set_has_deprecated_city();
  deprecated_city_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:BidRequest.DEPRECATED_city)
}
inline ::std::string* BidRequest::mutable_deprecated_city() {
  set_has_deprecated_city();
  // @@protoc_insertion_point(field_mutable:BidRequest.DEPRECATED_city)
  return deprecated_city_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BidRequest::release_deprecated_city() {
  clear_has_deprecated_city();
  return deprecated_city_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidRequest::set_allocated_deprecated_city(::std::string* deprecated_city) {
  if (deprecated_city != NULL) {
    set_has_deprecated_city();
  } else {
    clear_has_deprecated_city();
  }
  deprecated_city_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), deprecated_city);
  // @@protoc_insertion_point(field_set_allocated:BidRequest.DEPRECATED_city)
}

// optional int32 DEPRECATED_metro = 10;
inline bool BidRequest::has_deprecated_metro() const {
  return (_has_bits_[1] & 0x00000020u) != 0;
}
inline void BidRequest::set_has_deprecated_metro() {
  _has_bits_[1] |= 0x00000020u;
}
inline void BidRequest::clear_has_deprecated_metro() {
  _has_bits_[1] &= ~0x00000020u;
}
inline void BidRequest::clear_deprecated_metro() {
  deprecated_metro_ = 0;
  clear_has_deprecated_metro();
}
inline ::google::protobuf::int32 BidRequest::deprecated_metro() const {
  // @@protoc_insertion_point(field_get:BidRequest.DEPRECATED_metro)
  return deprecated_metro_;
}
inline void BidRequest::set_deprecated_metro(::google::protobuf::int32 value) {
  set_has_deprecated_metro();
  deprecated_metro_ = value;
  // @@protoc_insertion_point(field_set:BidRequest.DEPRECATED_metro)
}

// optional bytes DEPRECATED_hashed_cookie = 16;
inline bool BidRequest::has_deprecated_hashed_cookie() const {
  return (_has_bits_[1] & 0x00000040u) != 0;
}
inline void BidRequest::set_has_deprecated_hashed_cookie() {
  _has_bits_[1] |= 0x00000040u;
}
inline void BidRequest::clear_has_deprecated_hashed_cookie() {
  _has_bits_[1] &= ~0x00000040u;
}
inline void BidRequest::clear_deprecated_hashed_cookie() {
  deprecated_hashed_cookie_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_deprecated_hashed_cookie();
}
inline const ::std::string& BidRequest::deprecated_hashed_cookie() const {
  // @@protoc_insertion_point(field_get:BidRequest.DEPRECATED_hashed_cookie)
  return deprecated_hashed_cookie_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidRequest::set_deprecated_hashed_cookie(const ::std::string& value) {
  set_has_deprecated_hashed_cookie();
  deprecated_hashed_cookie_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:BidRequest.DEPRECATED_hashed_cookie)
}
inline void BidRequest::set_deprecated_hashed_cookie(const char* value) {
  set_has_deprecated_hashed_cookie();
  deprecated_hashed_cookie_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:BidRequest.DEPRECATED_hashed_cookie)
}
inline void BidRequest::set_deprecated_hashed_cookie(const void* value, size_t size) {
  set_has_deprecated_hashed_cookie();
  deprecated_hashed_cookie_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:BidRequest.DEPRECATED_hashed_cookie)
}
inline ::std::string* BidRequest::mutable_deprecated_hashed_cookie() {
  set_has_deprecated_hashed_cookie();
  // @@protoc_insertion_point(field_mutable:BidRequest.DEPRECATED_hashed_cookie)
  return deprecated_hashed_cookie_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BidRequest::release_deprecated_hashed_cookie() {
  clear_has_deprecated_hashed_cookie();
  return deprecated_hashed_cookie_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidRequest::set_allocated_deprecated_hashed_cookie(::std::string* deprecated_hashed_cookie) {
  if (deprecated_hashed_cookie != NULL) {
    set_has_deprecated_hashed_cookie();
  } else {
    clear_has_deprecated_hashed_cookie();
  }
  deprecated_hashed_cookie_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), deprecated_hashed_cookie);
  // @@protoc_insertion_point(field_set_allocated:BidRequest.DEPRECATED_hashed_cookie)
}

// repeated string DEPRECATED_excluded_click_through_url = 18;
inline int BidRequest::deprecated_excluded_click_through_url_size() const {
  return deprecated_excluded_click_through_url_.size();
}
inline void BidRequest::clear_deprecated_excluded_click_through_url() {
  deprecated_excluded_click_through_url_.Clear();
}
inline const ::std::string& BidRequest::deprecated_excluded_click_through_url(int index) const {
  // @@protoc_insertion_point(field_get:BidRequest.DEPRECATED_excluded_click_through_url)
  return deprecated_excluded_click_through_url_.Get(index);
}
inline ::std::string* BidRequest::mutable_deprecated_excluded_click_through_url(int index) {
  // @@protoc_insertion_point(field_mutable:BidRequest.DEPRECATED_excluded_click_through_url)
  return deprecated_excluded_click_through_url_.Mutable(index);
}
inline void BidRequest::set_deprecated_excluded_click_through_url(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:BidRequest.DEPRECATED_excluded_click_through_url)
  deprecated_excluded_click_through_url_.Mutable(index)->assign(value);
}
inline void BidRequest::set_deprecated_excluded_click_through_url(int index, const char* value) {
  deprecated_excluded_click_through_url_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:BidRequest.DEPRECATED_excluded_click_through_url)
}
inline void BidRequest::set_deprecated_excluded_click_through_url(int index, const char* value, size_t size) {
  deprecated_excluded_click_through_url_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:BidRequest.DEPRECATED_excluded_click_through_url)
}
inline ::std::string* BidRequest::add_deprecated_excluded_click_through_url() {
  return deprecated_excluded_click_through_url_.Add();
}
inline void BidRequest::add_deprecated_excluded_click_through_url(const ::std::string& value) {
  deprecated_excluded_click_through_url_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:BidRequest.DEPRECATED_excluded_click_through_url)
}
inline void BidRequest::add_deprecated_excluded_click_through_url(const char* value) {
  deprecated_excluded_click_through_url_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:BidRequest.DEPRECATED_excluded_click_through_url)
}
inline void BidRequest::add_deprecated_excluded_click_through_url(const char* value, size_t size) {
  deprecated_excluded_click_through_url_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:BidRequest.DEPRECATED_excluded_click_through_url)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
BidRequest::deprecated_excluded_click_through_url() const {
  // @@protoc_insertion_point(field_list:BidRequest.DEPRECATED_excluded_click_through_url)
  return deprecated_excluded_click_through_url_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
BidRequest::mutable_deprecated_excluded_click_through_url() {
  // @@protoc_insertion_point(field_mutable_list:BidRequest.DEPRECATED_excluded_click_through_url)
  return &deprecated_excluded_click_through_url_;
}

// optional string DEPRECATED_seller_network = 22;
inline bool BidRequest::has_deprecated_seller_network() const {
  return (_has_bits_[1] & 0x00000100u) != 0;
}
inline void BidRequest::set_has_deprecated_seller_network() {
  _has_bits_[1] |= 0x00000100u;
}
inline void BidRequest::clear_has_deprecated_seller_network() {
  _has_bits_[1] &= ~0x00000100u;
}
inline void BidRequest::clear_deprecated_seller_network() {
  deprecated_seller_network_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_deprecated_seller_network();
}
inline const ::std::string& BidRequest::deprecated_seller_network() const {
  // @@protoc_insertion_point(field_get:BidRequest.DEPRECATED_seller_network)
  return deprecated_seller_network_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidRequest::set_deprecated_seller_network(const ::std::string& value) {
  set_has_deprecated_seller_network();
  deprecated_seller_network_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:BidRequest.DEPRECATED_seller_network)
}
inline void BidRequest::set_deprecated_seller_network(const char* value) {
  set_has_deprecated_seller_network();
  deprecated_seller_network_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:BidRequest.DEPRECATED_seller_network)
}
inline void BidRequest::set_deprecated_seller_network(const char* value, size_t size) {
  set_has_deprecated_seller_network();
  deprecated_seller_network_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:BidRequest.DEPRECATED_seller_network)
}
inline ::std::string* BidRequest::mutable_deprecated_seller_network() {
  set_has_deprecated_seller_network();
  // @@protoc_insertion_point(field_mutable:BidRequest.DEPRECATED_seller_network)
  return deprecated_seller_network_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BidRequest::release_deprecated_seller_network() {
  clear_has_deprecated_seller_network();
  return deprecated_seller_network_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidRequest::set_allocated_deprecated_seller_network(::std::string* deprecated_seller_network) {
  if (deprecated_seller_network != NULL) {
    set_has_deprecated_seller_network();
  } else {
    clear_has_deprecated_seller_network();
  }
  deprecated_seller_network_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), deprecated_seller_network);
  // @@protoc_insertion_point(field_set_allocated:BidRequest.DEPRECATED_seller_network)
}

// optional bytes DEPRECATED_publisher_settings_list_id = 23;
inline bool BidRequest::has_deprecated_publisher_settings_list_id() const {
  return (_has_bits_[1] & 0x00000200u) != 0;
}
inline void BidRequest::set_has_deprecated_publisher_settings_list_id() {
  _has_bits_[1] |= 0x00000200u;
}
inline void BidRequest::clear_has_deprecated_publisher_settings_list_id() {
  _has_bits_[1] &= ~0x00000200u;
}
inline void BidRequest::clear_deprecated_publisher_settings_list_id() {
  deprecated_publisher_settings_list_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_deprecated_publisher_settings_list_id();
}
inline const ::std::string& BidRequest::deprecated_publisher_settings_list_id() const {
  // @@protoc_insertion_point(field_get:BidRequest.DEPRECATED_publisher_settings_list_id)
  return deprecated_publisher_settings_list_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidRequest::set_deprecated_publisher_settings_list_id(const ::std::string& value) {
  set_has_deprecated_publisher_settings_list_id();
  deprecated_publisher_settings_list_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:BidRequest.DEPRECATED_publisher_settings_list_id)
}
inline void BidRequest::set_deprecated_publisher_settings_list_id(const char* value) {
  set_has_deprecated_publisher_settings_list_id();
  deprecated_publisher_settings_list_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:BidRequest.DEPRECATED_publisher_settings_list_id)
}
inline void BidRequest::set_deprecated_publisher_settings_list_id(const void* value, size_t size) {
  set_has_deprecated_publisher_settings_list_id();
  deprecated_publisher_settings_list_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:BidRequest.DEPRECATED_publisher_settings_list_id)
}
inline ::std::string* BidRequest::mutable_deprecated_publisher_settings_list_id() {
  set_has_deprecated_publisher_settings_list_id();
  // @@protoc_insertion_point(field_mutable:BidRequest.DEPRECATED_publisher_settings_list_id)
  return deprecated_publisher_settings_list_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BidRequest::release_deprecated_publisher_settings_list_id() {
  clear_has_deprecated_publisher_settings_list_id();
  return deprecated_publisher_settings_list_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidRequest::set_allocated_deprecated_publisher_settings_list_id(::std::string* deprecated_publisher_settings_list_id) {
  if (deprecated_publisher_settings_list_id != NULL) {
    set_has_deprecated_publisher_settings_list_id();
  } else {
    clear_has_deprecated_publisher_settings_list_id();
  }
  deprecated_publisher_settings_list_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), deprecated_publisher_settings_list_id);
  // @@protoc_insertion_point(field_set_allocated:BidRequest.DEPRECATED_publisher_settings_list_id)
}

// repeated .BidRequest.MatchingNetwork DEPRECATED_matching_network = 27;
inline int BidRequest::deprecated_matching_network_size() const {
  return deprecated_matching_network_.size();
}
inline void BidRequest::clear_deprecated_matching_network() {
  deprecated_matching_network_.Clear();
}
inline const ::BidRequest_MatchingNetwork& BidRequest::deprecated_matching_network(int index) const {
  // @@protoc_insertion_point(field_get:BidRequest.DEPRECATED_matching_network)
  return deprecated_matching_network_.Get(index);
}
inline ::BidRequest_MatchingNetwork* BidRequest::mutable_deprecated_matching_network(int index) {
  // @@protoc_insertion_point(field_mutable:BidRequest.DEPRECATED_matching_network)
  return deprecated_matching_network_.Mutable(index);
}
inline ::BidRequest_MatchingNetwork* BidRequest::add_deprecated_matching_network() {
  // @@protoc_insertion_point(field_add:BidRequest.DEPRECATED_matching_network)
  return deprecated_matching_network_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::BidRequest_MatchingNetwork >*
BidRequest::mutable_deprecated_matching_network() {
  // @@protoc_insertion_point(field_mutable_list:BidRequest.DEPRECATED_matching_network)
  return &deprecated_matching_network_;
}
inline const ::google::protobuf::RepeatedPtrField< ::BidRequest_MatchingNetwork >&
BidRequest::deprecated_matching_network() const {
  // @@protoc_insertion_point(field_list:BidRequest.DEPRECATED_matching_network)
  return deprecated_matching_network_;
}

// optional bool DEPRECATED_experimental_deadline = 35 [default = false];
inline bool BidRequest::has_deprecated_experimental_deadline() const {
  return (_has_bits_[1] & 0x00000800u) != 0;
}
inline void BidRequest::set_has_deprecated_experimental_deadline() {
  _has_bits_[1] |= 0x00000800u;
}
inline void BidRequest::clear_has_deprecated_experimental_deadline() {
  _has_bits_[1] &= ~0x00000800u;
}
inline void BidRequest::clear_deprecated_experimental_deadline() {
  deprecated_experimental_deadline_ = false;
  clear_has_deprecated_experimental_deadline();
}
inline bool BidRequest::deprecated_experimental_deadline() const {
  // @@protoc_insertion_point(field_get:BidRequest.DEPRECATED_experimental_deadline)
  return deprecated_experimental_deadline_;
}
inline void BidRequest::set_deprecated_experimental_deadline(bool value) {
  set_has_deprecated_experimental_deadline();
  deprecated_experimental_deadline_ = value;
  // @@protoc_insertion_point(field_set:BidRequest.DEPRECATED_experimental_deadline)
}

// -------------------------------------------------------------------

// BidResponse_Ad_TemplateParameter

// optional string parameter_value = 1;
inline bool BidResponse_Ad_TemplateParameter::has_parameter_value() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BidResponse_Ad_TemplateParameter::set_has_parameter_value() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BidResponse_Ad_TemplateParameter::clear_has_parameter_value() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BidResponse_Ad_TemplateParameter::clear_parameter_value() {
  parameter_value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_parameter_value();
}
inline const ::std::string& BidResponse_Ad_TemplateParameter::parameter_value() const {
  // @@protoc_insertion_point(field_get:BidResponse.Ad.TemplateParameter.parameter_value)
  return parameter_value_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidResponse_Ad_TemplateParameter::set_parameter_value(const ::std::string& value) {
  set_has_parameter_value();
  parameter_value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:BidResponse.Ad.TemplateParameter.parameter_value)
}
inline void BidResponse_Ad_TemplateParameter::set_parameter_value(const char* value) {
  set_has_parameter_value();
  parameter_value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:BidResponse.Ad.TemplateParameter.parameter_value)
}
inline void BidResponse_Ad_TemplateParameter::set_parameter_value(const char* value, size_t size) {
  set_has_parameter_value();
  parameter_value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:BidResponse.Ad.TemplateParameter.parameter_value)
}
inline ::std::string* BidResponse_Ad_TemplateParameter::mutable_parameter_value() {
  set_has_parameter_value();
  // @@protoc_insertion_point(field_mutable:BidResponse.Ad.TemplateParameter.parameter_value)
  return parameter_value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BidResponse_Ad_TemplateParameter::release_parameter_value() {
  clear_has_parameter_value();
  return parameter_value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidResponse_Ad_TemplateParameter::set_allocated_parameter_value(::std::string* parameter_value) {
  if (parameter_value != NULL) {
    set_has_parameter_value();
  } else {
    clear_has_parameter_value();
  }
  parameter_value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), parameter_value);
  // @@protoc_insertion_point(field_set_allocated:BidResponse.Ad.TemplateParameter.parameter_value)
}

// optional string blank_ad_parameter_value = 8;
inline bool BidResponse_Ad_TemplateParameter::has_blank_ad_parameter_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BidResponse_Ad_TemplateParameter::set_has_blank_ad_parameter_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BidResponse_Ad_TemplateParameter::clear_has_blank_ad_parameter_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BidResponse_Ad_TemplateParameter::clear_blank_ad_parameter_value() {
  blank_ad_parameter_value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_blank_ad_parameter_value();
}
inline const ::std::string& BidResponse_Ad_TemplateParameter::blank_ad_parameter_value() const {
  // @@protoc_insertion_point(field_get:BidResponse.Ad.TemplateParameter.blank_ad_parameter_value)
  return blank_ad_parameter_value_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidResponse_Ad_TemplateParameter::set_blank_ad_parameter_value(const ::std::string& value) {
  set_has_blank_ad_parameter_value();
  blank_ad_parameter_value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:BidResponse.Ad.TemplateParameter.blank_ad_parameter_value)
}
inline void BidResponse_Ad_TemplateParameter::set_blank_ad_parameter_value(const char* value) {
  set_has_blank_ad_parameter_value();
  blank_ad_parameter_value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:BidResponse.Ad.TemplateParameter.blank_ad_parameter_value)
}
inline void BidResponse_Ad_TemplateParameter::set_blank_ad_parameter_value(const char* value, size_t size) {
  set_has_blank_ad_parameter_value();
  blank_ad_parameter_value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:BidResponse.Ad.TemplateParameter.blank_ad_parameter_value)
}
inline ::std::string* BidResponse_Ad_TemplateParameter::mutable_blank_ad_parameter_value() {
  set_has_blank_ad_parameter_value();
  // @@protoc_insertion_point(field_mutable:BidResponse.Ad.TemplateParameter.blank_ad_parameter_value)
  return blank_ad_parameter_value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BidResponse_Ad_TemplateParameter::release_blank_ad_parameter_value() {
  clear_has_blank_ad_parameter_value();
  return blank_ad_parameter_value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidResponse_Ad_TemplateParameter::set_allocated_blank_ad_parameter_value(::std::string* blank_ad_parameter_value) {
  if (blank_ad_parameter_value != NULL) {
    set_has_blank_ad_parameter_value();
  } else {
    clear_has_blank_ad_parameter_value();
  }
  blank_ad_parameter_value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), blank_ad_parameter_value);
  // @@protoc_insertion_point(field_set_allocated:BidResponse.Ad.TemplateParameter.blank_ad_parameter_value)
}

// optional string buyer_creative_id = 2;
inline bool BidResponse_Ad_TemplateParameter::has_buyer_creative_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BidResponse_Ad_TemplateParameter::set_has_buyer_creative_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BidResponse_Ad_TemplateParameter::clear_has_buyer_creative_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BidResponse_Ad_TemplateParameter::clear_buyer_creative_id() {
  buyer_creative_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_buyer_creative_id();
}
inline const ::std::string& BidResponse_Ad_TemplateParameter::buyer_creative_id() const {
  // @@protoc_insertion_point(field_get:BidResponse.Ad.TemplateParameter.buyer_creative_id)
  return buyer_creative_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidResponse_Ad_TemplateParameter::set_buyer_creative_id(const ::std::string& value) {
  set_has_buyer_creative_id();
  buyer_creative_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:BidResponse.Ad.TemplateParameter.buyer_creative_id)
}
inline void BidResponse_Ad_TemplateParameter::set_buyer_creative_id(const char* value) {
  set_has_buyer_creative_id();
  buyer_creative_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:BidResponse.Ad.TemplateParameter.buyer_creative_id)
}
inline void BidResponse_Ad_TemplateParameter::set_buyer_creative_id(const char* value, size_t size) {
  set_has_buyer_creative_id();
  buyer_creative_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:BidResponse.Ad.TemplateParameter.buyer_creative_id)
}
inline ::std::string* BidResponse_Ad_TemplateParameter::mutable_buyer_creative_id() {
  set_has_buyer_creative_id();
  // @@protoc_insertion_point(field_mutable:BidResponse.Ad.TemplateParameter.buyer_creative_id)
  return buyer_creative_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BidResponse_Ad_TemplateParameter::release_buyer_creative_id() {
  clear_has_buyer_creative_id();
  return buyer_creative_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidResponse_Ad_TemplateParameter::set_allocated_buyer_creative_id(::std::string* buyer_creative_id) {
  if (buyer_creative_id != NULL) {
    set_has_buyer_creative_id();
  } else {
    clear_has_buyer_creative_id();
  }
  buyer_creative_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), buyer_creative_id);
  // @@protoc_insertion_point(field_set_allocated:BidResponse.Ad.TemplateParameter.buyer_creative_id)
}

// optional string click_through_url = 3;
inline bool BidResponse_Ad_TemplateParameter::has_click_through_url() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BidResponse_Ad_TemplateParameter::set_has_click_through_url() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BidResponse_Ad_TemplateParameter::clear_has_click_through_url() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BidResponse_Ad_TemplateParameter::clear_click_through_url() {
  click_through_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_click_through_url();
}
inline const ::std::string& BidResponse_Ad_TemplateParameter::click_through_url() const {
  // @@protoc_insertion_point(field_get:BidResponse.Ad.TemplateParameter.click_through_url)
  return click_through_url_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidResponse_Ad_TemplateParameter::set_click_through_url(const ::std::string& value) {
  set_has_click_through_url();
  click_through_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:BidResponse.Ad.TemplateParameter.click_through_url)
}
inline void BidResponse_Ad_TemplateParameter::set_click_through_url(const char* value) {
  set_has_click_through_url();
  click_through_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:BidResponse.Ad.TemplateParameter.click_through_url)
}
inline void BidResponse_Ad_TemplateParameter::set_click_through_url(const char* value, size_t size) {
  set_has_click_through_url();
  click_through_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:BidResponse.Ad.TemplateParameter.click_through_url)
}
inline ::std::string* BidResponse_Ad_TemplateParameter::mutable_click_through_url() {
  set_has_click_through_url();
  // @@protoc_insertion_point(field_mutable:BidResponse.Ad.TemplateParameter.click_through_url)
  return click_through_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BidResponse_Ad_TemplateParameter::release_click_through_url() {
  clear_has_click_through_url();
  return click_through_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidResponse_Ad_TemplateParameter::set_allocated_click_through_url(::std::string* click_through_url) {
  if (click_through_url != NULL) {
    set_has_click_through_url();
  } else {
    clear_has_click_through_url();
  }
  click_through_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), click_through_url);
  // @@protoc_insertion_point(field_set_allocated:BidResponse.Ad.TemplateParameter.click_through_url)
}

// optional int32 left = 4;
inline bool BidResponse_Ad_TemplateParameter::has_left() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BidResponse_Ad_TemplateParameter::set_has_left() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BidResponse_Ad_TemplateParameter::clear_has_left() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BidResponse_Ad_TemplateParameter::clear_left() {
  left_ = 0;
  clear_has_left();
}
inline ::google::protobuf::int32 BidResponse_Ad_TemplateParameter::left() const {
  // @@protoc_insertion_point(field_get:BidResponse.Ad.TemplateParameter.left)
  return left_;
}
inline void BidResponse_Ad_TemplateParameter::set_left(::google::protobuf::int32 value) {
  set_has_left();
  left_ = value;
  // @@protoc_insertion_point(field_set:BidResponse.Ad.TemplateParameter.left)
}

// optional int32 right = 5;
inline bool BidResponse_Ad_TemplateParameter::has_right() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void BidResponse_Ad_TemplateParameter::set_has_right() {
  _has_bits_[0] |= 0x00000020u;
}
inline void BidResponse_Ad_TemplateParameter::clear_has_right() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void BidResponse_Ad_TemplateParameter::clear_right() {
  right_ = 0;
  clear_has_right();
}
inline ::google::protobuf::int32 BidResponse_Ad_TemplateParameter::right() const {
  // @@protoc_insertion_point(field_get:BidResponse.Ad.TemplateParameter.right)
  return right_;
}
inline void BidResponse_Ad_TemplateParameter::set_right(::google::protobuf::int32 value) {
  set_has_right();
  right_ = value;
  // @@protoc_insertion_point(field_set:BidResponse.Ad.TemplateParameter.right)
}

// optional int32 top = 6;
inline bool BidResponse_Ad_TemplateParameter::has_top() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void BidResponse_Ad_TemplateParameter::set_has_top() {
  _has_bits_[0] |= 0x00000040u;
}
inline void BidResponse_Ad_TemplateParameter::clear_has_top() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void BidResponse_Ad_TemplateParameter::clear_top() {
  top_ = 0;
  clear_has_top();
}
inline ::google::protobuf::int32 BidResponse_Ad_TemplateParameter::top() const {
  // @@protoc_insertion_point(field_get:BidResponse.Ad.TemplateParameter.top)
  return top_;
}
inline void BidResponse_Ad_TemplateParameter::set_top(::google::protobuf::int32 value) {
  set_has_top();
  top_ = value;
  // @@protoc_insertion_point(field_set:BidResponse.Ad.TemplateParameter.top)
}

// optional int32 bottom = 7;
inline bool BidResponse_Ad_TemplateParameter::has_bottom() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void BidResponse_Ad_TemplateParameter::set_has_bottom() {
  _has_bits_[0] |= 0x00000080u;
}
inline void BidResponse_Ad_TemplateParameter::clear_has_bottom() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void BidResponse_Ad_TemplateParameter::clear_bottom() {
  bottom_ = 0;
  clear_has_bottom();
}
inline ::google::protobuf::int32 BidResponse_Ad_TemplateParameter::bottom() const {
  // @@protoc_insertion_point(field_get:BidResponse.Ad.TemplateParameter.bottom)
  return bottom_;
}
inline void BidResponse_Ad_TemplateParameter::set_bottom(::google::protobuf::int32 value) {
  set_has_bottom();
  bottom_ = value;
  // @@protoc_insertion_point(field_set:BidResponse.Ad.TemplateParameter.bottom)
}

// optional int32 backup_index = 9;
inline bool BidResponse_Ad_TemplateParameter::has_backup_index() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void BidResponse_Ad_TemplateParameter::set_has_backup_index() {
  _has_bits_[0] |= 0x00000100u;
}
inline void BidResponse_Ad_TemplateParameter::clear_has_backup_index() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void BidResponse_Ad_TemplateParameter::clear_backup_index() {
  backup_index_ = 0;
  clear_has_backup_index();
}
inline ::google::protobuf::int32 BidResponse_Ad_TemplateParameter::backup_index() const {
  // @@protoc_insertion_point(field_get:BidResponse.Ad.TemplateParameter.backup_index)
  return backup_index_;
}
inline void BidResponse_Ad_TemplateParameter::set_backup_index(::google::protobuf::int32 value) {
  set_has_backup_index();
  backup_index_ = value;
  // @@protoc_insertion_point(field_set:BidResponse.Ad.TemplateParameter.backup_index)
}

// -------------------------------------------------------------------

// BidResponse_Ad_AdSlot

// required int32 id = 1;
inline bool BidResponse_Ad_AdSlot::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BidResponse_Ad_AdSlot::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BidResponse_Ad_AdSlot::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BidResponse_Ad_AdSlot::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 BidResponse_Ad_AdSlot::id() const {
  // @@protoc_insertion_point(field_get:BidResponse.Ad.AdSlot.id)
  return id_;
}
inline void BidResponse_Ad_AdSlot::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:BidResponse.Ad.AdSlot.id)
}

// required int64 max_cpm_micros = 2;
inline bool BidResponse_Ad_AdSlot::has_max_cpm_micros() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BidResponse_Ad_AdSlot::set_has_max_cpm_micros() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BidResponse_Ad_AdSlot::clear_has_max_cpm_micros() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BidResponse_Ad_AdSlot::clear_max_cpm_micros() {
  max_cpm_micros_ = GOOGLE_LONGLONG(0);
  clear_has_max_cpm_micros();
}
inline ::google::protobuf::int64 BidResponse_Ad_AdSlot::max_cpm_micros() const {
  // @@protoc_insertion_point(field_get:BidResponse.Ad.AdSlot.max_cpm_micros)
  return max_cpm_micros_;
}
inline void BidResponse_Ad_AdSlot::set_max_cpm_micros(::google::protobuf::int64 value) {
  set_has_max_cpm_micros();
  max_cpm_micros_ = value;
  // @@protoc_insertion_point(field_set:BidResponse.Ad.AdSlot.max_cpm_micros)
}

// optional int64 min_cpm_micros = 3;
inline bool BidResponse_Ad_AdSlot::has_min_cpm_micros() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BidResponse_Ad_AdSlot::set_has_min_cpm_micros() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BidResponse_Ad_AdSlot::clear_has_min_cpm_micros() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BidResponse_Ad_AdSlot::clear_min_cpm_micros() {
  min_cpm_micros_ = GOOGLE_LONGLONG(0);
  clear_has_min_cpm_micros();
}
inline ::google::protobuf::int64 BidResponse_Ad_AdSlot::min_cpm_micros() const {
  // @@protoc_insertion_point(field_get:BidResponse.Ad.AdSlot.min_cpm_micros)
  return min_cpm_micros_;
}
inline void BidResponse_Ad_AdSlot::set_min_cpm_micros(::google::protobuf::int64 value) {
  set_has_min_cpm_micros();
  min_cpm_micros_ = value;
  // @@protoc_insertion_point(field_set:BidResponse.Ad.AdSlot.min_cpm_micros)
}

// optional int64 adgroup_id = 4;
inline bool BidResponse_Ad_AdSlot::has_adgroup_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BidResponse_Ad_AdSlot::set_has_adgroup_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BidResponse_Ad_AdSlot::clear_has_adgroup_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BidResponse_Ad_AdSlot::clear_adgroup_id() {
  adgroup_id_ = GOOGLE_LONGLONG(0);
  clear_has_adgroup_id();
}
inline ::google::protobuf::int64 BidResponse_Ad_AdSlot::adgroup_id() const {
  // @@protoc_insertion_point(field_get:BidResponse.Ad.AdSlot.adgroup_id)
  return adgroup_id_;
}
inline void BidResponse_Ad_AdSlot::set_adgroup_id(::google::protobuf::int64 value) {
  set_has_adgroup_id();
  adgroup_id_ = value;
  // @@protoc_insertion_point(field_set:BidResponse.Ad.AdSlot.adgroup_id)
}

// optional int64 deal_id = 5 [default = 0];
inline bool BidResponse_Ad_AdSlot::has_deal_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BidResponse_Ad_AdSlot::set_has_deal_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BidResponse_Ad_AdSlot::clear_has_deal_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BidResponse_Ad_AdSlot::clear_deal_id() {
  deal_id_ = GOOGLE_LONGLONG(0);
  clear_has_deal_id();
}
inline ::google::protobuf::int64 BidResponse_Ad_AdSlot::deal_id() const {
  // @@protoc_insertion_point(field_get:BidResponse.Ad.AdSlot.deal_id)
  return deal_id_;
}
inline void BidResponse_Ad_AdSlot::set_deal_id(::google::protobuf::int64 value) {
  set_has_deal_id();
  deal_id_ = value;
  // @@protoc_insertion_point(field_set:BidResponse.Ad.AdSlot.deal_id)
}

// -------------------------------------------------------------------

// BidResponse_Ad

// optional string buyer_creative_id = 10;
inline bool BidResponse_Ad::has_buyer_creative_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BidResponse_Ad::set_has_buyer_creative_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BidResponse_Ad::clear_has_buyer_creative_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BidResponse_Ad::clear_buyer_creative_id() {
  buyer_creative_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_buyer_creative_id();
}
inline const ::std::string& BidResponse_Ad::buyer_creative_id() const {
  // @@protoc_insertion_point(field_get:BidResponse.Ad.buyer_creative_id)
  return buyer_creative_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidResponse_Ad::set_buyer_creative_id(const ::std::string& value) {
  set_has_buyer_creative_id();
  buyer_creative_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:BidResponse.Ad.buyer_creative_id)
}
inline void BidResponse_Ad::set_buyer_creative_id(const char* value) {
  set_has_buyer_creative_id();
  buyer_creative_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:BidResponse.Ad.buyer_creative_id)
}
inline void BidResponse_Ad::set_buyer_creative_id(const char* value, size_t size) {
  set_has_buyer_creative_id();
  buyer_creative_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:BidResponse.Ad.buyer_creative_id)
}
inline ::std::string* BidResponse_Ad::mutable_buyer_creative_id() {
  set_has_buyer_creative_id();
  // @@protoc_insertion_point(field_mutable:BidResponse.Ad.buyer_creative_id)
  return buyer_creative_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BidResponse_Ad::release_buyer_creative_id() {
  clear_has_buyer_creative_id();
  return buyer_creative_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidResponse_Ad::set_allocated_buyer_creative_id(::std::string* buyer_creative_id) {
  if (buyer_creative_id != NULL) {
    set_has_buyer_creative_id();
  } else {
    clear_has_buyer_creative_id();
  }
  buyer_creative_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), buyer_creative_id);
  // @@protoc_insertion_point(field_set_allocated:BidResponse.Ad.buyer_creative_id)
}

// optional string html_snippet = 1;
inline bool BidResponse_Ad::has_html_snippet() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BidResponse_Ad::set_has_html_snippet() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BidResponse_Ad::clear_has_html_snippet() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BidResponse_Ad::clear_html_snippet() {
  html_snippet_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_html_snippet();
}
inline const ::std::string& BidResponse_Ad::html_snippet() const {
  // @@protoc_insertion_point(field_get:BidResponse.Ad.html_snippet)
  return html_snippet_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidResponse_Ad::set_html_snippet(const ::std::string& value) {
  set_has_html_snippet();
  html_snippet_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:BidResponse.Ad.html_snippet)
}
inline void BidResponse_Ad::set_html_snippet(const char* value) {
  set_has_html_snippet();
  html_snippet_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:BidResponse.Ad.html_snippet)
}
inline void BidResponse_Ad::set_html_snippet(const char* value, size_t size) {
  set_has_html_snippet();
  html_snippet_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:BidResponse.Ad.html_snippet)
}
inline ::std::string* BidResponse_Ad::mutable_html_snippet() {
  set_has_html_snippet();
  // @@protoc_insertion_point(field_mutable:BidResponse.Ad.html_snippet)
  return html_snippet_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BidResponse_Ad::release_html_snippet() {
  clear_has_html_snippet();
  return html_snippet_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidResponse_Ad::set_allocated_html_snippet(::std::string* html_snippet) {
  if (html_snippet != NULL) {
    set_has_html_snippet();
  } else {
    clear_has_html_snippet();
  }
  html_snippet_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), html_snippet);
  // @@protoc_insertion_point(field_set_allocated:BidResponse.Ad.html_snippet)
}

// optional string video_url = 9;
inline bool BidResponse_Ad::has_video_url() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BidResponse_Ad::set_has_video_url() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BidResponse_Ad::clear_has_video_url() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BidResponse_Ad::clear_video_url() {
  video_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_video_url();
}
inline const ::std::string& BidResponse_Ad::video_url() const {
  // @@protoc_insertion_point(field_get:BidResponse.Ad.video_url)
  return video_url_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidResponse_Ad::set_video_url(const ::std::string& value) {
  set_has_video_url();
  video_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:BidResponse.Ad.video_url)
}
inline void BidResponse_Ad::set_video_url(const char* value) {
  set_has_video_url();
  video_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:BidResponse.Ad.video_url)
}
inline void BidResponse_Ad::set_video_url(const char* value, size_t size) {
  set_has_video_url();
  video_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:BidResponse.Ad.video_url)
}
inline ::std::string* BidResponse_Ad::mutable_video_url() {
  set_has_video_url();
  // @@protoc_insertion_point(field_mutable:BidResponse.Ad.video_url)
  return video_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BidResponse_Ad::release_video_url() {
  clear_has_video_url();
  return video_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidResponse_Ad::set_allocated_video_url(::std::string* video_url) {
  if (video_url != NULL) {
    set_has_video_url();
  } else {
    clear_has_video_url();
  }
  video_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), video_url);
  // @@protoc_insertion_point(field_set_allocated:BidResponse.Ad.video_url)
}

// optional string snippet_template = 12;
inline bool BidResponse_Ad::has_snippet_template() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BidResponse_Ad::set_has_snippet_template() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BidResponse_Ad::clear_has_snippet_template() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BidResponse_Ad::clear_snippet_template() {
  snippet_template_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_snippet_template();
}
inline const ::std::string& BidResponse_Ad::snippet_template() const {
  // @@protoc_insertion_point(field_get:BidResponse.Ad.snippet_template)
  return snippet_template_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidResponse_Ad::set_snippet_template(const ::std::string& value) {
  set_has_snippet_template();
  snippet_template_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:BidResponse.Ad.snippet_template)
}
inline void BidResponse_Ad::set_snippet_template(const char* value) {
  set_has_snippet_template();
  snippet_template_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:BidResponse.Ad.snippet_template)
}
inline void BidResponse_Ad::set_snippet_template(const char* value, size_t size) {
  set_has_snippet_template();
  snippet_template_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:BidResponse.Ad.snippet_template)
}
inline ::std::string* BidResponse_Ad::mutable_snippet_template() {
  set_has_snippet_template();
  // @@protoc_insertion_point(field_mutable:BidResponse.Ad.snippet_template)
  return snippet_template_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BidResponse_Ad::release_snippet_template() {
  clear_has_snippet_template();
  return snippet_template_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidResponse_Ad::set_allocated_snippet_template(::std::string* snippet_template) {
  if (snippet_template != NULL) {
    set_has_snippet_template();
  } else {
    clear_has_snippet_template();
  }
  snippet_template_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), snippet_template);
  // @@protoc_insertion_point(field_set_allocated:BidResponse.Ad.snippet_template)
}

// repeated .BidResponse.Ad.TemplateParameter template_parameter = 13;
inline int BidResponse_Ad::template_parameter_size() const {
  return template_parameter_.size();
}
inline void BidResponse_Ad::clear_template_parameter() {
  template_parameter_.Clear();
}
inline const ::BidResponse_Ad_TemplateParameter& BidResponse_Ad::template_parameter(int index) const {
  // @@protoc_insertion_point(field_get:BidResponse.Ad.template_parameter)
  return template_parameter_.Get(index);
}
inline ::BidResponse_Ad_TemplateParameter* BidResponse_Ad::mutable_template_parameter(int index) {
  // @@protoc_insertion_point(field_mutable:BidResponse.Ad.template_parameter)
  return template_parameter_.Mutable(index);
}
inline ::BidResponse_Ad_TemplateParameter* BidResponse_Ad::add_template_parameter() {
  // @@protoc_insertion_point(field_add:BidResponse.Ad.template_parameter)
  return template_parameter_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::BidResponse_Ad_TemplateParameter >*
BidResponse_Ad::mutable_template_parameter() {
  // @@protoc_insertion_point(field_mutable_list:BidResponse.Ad.template_parameter)
  return &template_parameter_;
}
inline const ::google::protobuf::RepeatedPtrField< ::BidResponse_Ad_TemplateParameter >&
BidResponse_Ad::template_parameter() const {
  // @@protoc_insertion_point(field_list:BidResponse.Ad.template_parameter)
  return template_parameter_;
}

// repeated string click_through_url = 4;
inline int BidResponse_Ad::click_through_url_size() const {
  return click_through_url_.size();
}
inline void BidResponse_Ad::clear_click_through_url() {
  click_through_url_.Clear();
}
inline const ::std::string& BidResponse_Ad::click_through_url(int index) const {
  // @@protoc_insertion_point(field_get:BidResponse.Ad.click_through_url)
  return click_through_url_.Get(index);
}
inline ::std::string* BidResponse_Ad::mutable_click_through_url(int index) {
  // @@protoc_insertion_point(field_mutable:BidResponse.Ad.click_through_url)
  return click_through_url_.Mutable(index);
}
inline void BidResponse_Ad::set_click_through_url(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:BidResponse.Ad.click_through_url)
  click_through_url_.Mutable(index)->assign(value);
}
inline void BidResponse_Ad::set_click_through_url(int index, const char* value) {
  click_through_url_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:BidResponse.Ad.click_through_url)
}
inline void BidResponse_Ad::set_click_through_url(int index, const char* value, size_t size) {
  click_through_url_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:BidResponse.Ad.click_through_url)
}
inline ::std::string* BidResponse_Ad::add_click_through_url() {
  return click_through_url_.Add();
}
inline void BidResponse_Ad::add_click_through_url(const ::std::string& value) {
  click_through_url_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:BidResponse.Ad.click_through_url)
}
inline void BidResponse_Ad::add_click_through_url(const char* value) {
  click_through_url_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:BidResponse.Ad.click_through_url)
}
inline void BidResponse_Ad::add_click_through_url(const char* value, size_t size) {
  click_through_url_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:BidResponse.Ad.click_through_url)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
BidResponse_Ad::click_through_url() const {
  // @@protoc_insertion_point(field_list:BidResponse.Ad.click_through_url)
  return click_through_url_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
BidResponse_Ad::mutable_click_through_url() {
  // @@protoc_insertion_point(field_mutable_list:BidResponse.Ad.click_through_url)
  return &click_through_url_;
}

// repeated int32 vendor_type = 5;
inline int BidResponse_Ad::vendor_type_size() const {
  return vendor_type_.size();
}
inline void BidResponse_Ad::clear_vendor_type() {
  vendor_type_.Clear();
}
inline ::google::protobuf::int32 BidResponse_Ad::vendor_type(int index) const {
  // @@protoc_insertion_point(field_get:BidResponse.Ad.vendor_type)
  return vendor_type_.Get(index);
}
inline void BidResponse_Ad::set_vendor_type(int index, ::google::protobuf::int32 value) {
  vendor_type_.Set(index, value);
  // @@protoc_insertion_point(field_set:BidResponse.Ad.vendor_type)
}
inline void BidResponse_Ad::add_vendor_type(::google::protobuf::int32 value) {
  vendor_type_.Add(value);
  // @@protoc_insertion_point(field_add:BidResponse.Ad.vendor_type)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
BidResponse_Ad::vendor_type() const {
  // @@protoc_insertion_point(field_list:BidResponse.Ad.vendor_type)
  return vendor_type_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
BidResponse_Ad::mutable_vendor_type() {
  // @@protoc_insertion_point(field_mutable_list:BidResponse.Ad.vendor_type)
  return &vendor_type_;
}

// repeated int32 attribute = 6;
inline int BidResponse_Ad::attribute_size() const {
  return attribute_.size();
}
inline void BidResponse_Ad::clear_attribute() {
  attribute_.Clear();
}
inline ::google::protobuf::int32 BidResponse_Ad::attribute(int index) const {
  // @@protoc_insertion_point(field_get:BidResponse.Ad.attribute)
  return attribute_.Get(index);
}
inline void BidResponse_Ad::set_attribute(int index, ::google::protobuf::int32 value) {
  attribute_.Set(index, value);
  // @@protoc_insertion_point(field_set:BidResponse.Ad.attribute)
}
inline void BidResponse_Ad::add_attribute(::google::protobuf::int32 value) {
  attribute_.Add(value);
  // @@protoc_insertion_point(field_add:BidResponse.Ad.attribute)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
BidResponse_Ad::attribute() const {
  // @@protoc_insertion_point(field_list:BidResponse.Ad.attribute)
  return attribute_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
BidResponse_Ad::mutable_attribute() {
  // @@protoc_insertion_point(field_mutable_list:BidResponse.Ad.attribute)
  return &attribute_;
}

// repeated int32 category = 7;
inline int BidResponse_Ad::category_size() const {
  return category_.size();
}
inline void BidResponse_Ad::clear_category() {
  category_.Clear();
}
inline ::google::protobuf::int32 BidResponse_Ad::category(int index) const {
  // @@protoc_insertion_point(field_get:BidResponse.Ad.category)
  return category_.Get(index);
}
inline void BidResponse_Ad::set_category(int index, ::google::protobuf::int32 value) {
  category_.Set(index, value);
  // @@protoc_insertion_point(field_set:BidResponse.Ad.category)
}
inline void BidResponse_Ad::add_category(::google::protobuf::int32 value) {
  category_.Add(value);
  // @@protoc_insertion_point(field_add:BidResponse.Ad.category)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
BidResponse_Ad::category() const {
  // @@protoc_insertion_point(field_list:BidResponse.Ad.category)
  return category_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
BidResponse_Ad::mutable_category() {
  // @@protoc_insertion_point(field_mutable_list:BidResponse.Ad.category)
  return &category_;
}

// repeated int32 restricted_category = 17;
inline int BidResponse_Ad::restricted_category_size() const {
  return restricted_category_.size();
}
inline void BidResponse_Ad::clear_restricted_category() {
  restricted_category_.Clear();
}
inline ::google::protobuf::int32 BidResponse_Ad::restricted_category(int index) const {
  // @@protoc_insertion_point(field_get:BidResponse.Ad.restricted_category)
  return restricted_category_.Get(index);
}
inline void BidResponse_Ad::set_restricted_category(int index, ::google::protobuf::int32 value) {
  restricted_category_.Set(index, value);
  // @@protoc_insertion_point(field_set:BidResponse.Ad.restricted_category)
}
inline void BidResponse_Ad::add_restricted_category(::google::protobuf::int32 value) {
  restricted_category_.Add(value);
  // @@protoc_insertion_point(field_add:BidResponse.Ad.restricted_category)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
BidResponse_Ad::restricted_category() const {
  // @@protoc_insertion_point(field_list:BidResponse.Ad.restricted_category)
  return restricted_category_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
BidResponse_Ad::mutable_restricted_category() {
  // @@protoc_insertion_point(field_mutable_list:BidResponse.Ad.restricted_category)
  return &restricted_category_;
}

// repeated string advertiser_name = 11;
inline int BidResponse_Ad::advertiser_name_size() const {
  return advertiser_name_.size();
}
inline void BidResponse_Ad::clear_advertiser_name() {
  advertiser_name_.Clear();
}
inline const ::std::string& BidResponse_Ad::advertiser_name(int index) const {
  // @@protoc_insertion_point(field_get:BidResponse.Ad.advertiser_name)
  return advertiser_name_.Get(index);
}
inline ::std::string* BidResponse_Ad::mutable_advertiser_name(int index) {
  // @@protoc_insertion_point(field_mutable:BidResponse.Ad.advertiser_name)
  return advertiser_name_.Mutable(index);
}
inline void BidResponse_Ad::set_advertiser_name(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:BidResponse.Ad.advertiser_name)
  advertiser_name_.Mutable(index)->assign(value);
}
inline void BidResponse_Ad::set_advertiser_name(int index, const char* value) {
  advertiser_name_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:BidResponse.Ad.advertiser_name)
}
inline void BidResponse_Ad::set_advertiser_name(int index, const char* value, size_t size) {
  advertiser_name_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:BidResponse.Ad.advertiser_name)
}
inline ::std::string* BidResponse_Ad::add_advertiser_name() {
  return advertiser_name_.Add();
}
inline void BidResponse_Ad::add_advertiser_name(const ::std::string& value) {
  advertiser_name_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:BidResponse.Ad.advertiser_name)
}
inline void BidResponse_Ad::add_advertiser_name(const char* value) {
  advertiser_name_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:BidResponse.Ad.advertiser_name)
}
inline void BidResponse_Ad::add_advertiser_name(const char* value, size_t size) {
  advertiser_name_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:BidResponse.Ad.advertiser_name)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
BidResponse_Ad::advertiser_name() const {
  // @@protoc_insertion_point(field_list:BidResponse.Ad.advertiser_name)
  return advertiser_name_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
BidResponse_Ad::mutable_advertiser_name() {
  // @@protoc_insertion_point(field_mutable_list:BidResponse.Ad.advertiser_name)
  return &advertiser_name_;
}

// optional int32 width = 14;
inline bool BidResponse_Ad::has_width() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void BidResponse_Ad::set_has_width() {
  _has_bits_[0] |= 0x00000800u;
}
inline void BidResponse_Ad::clear_has_width() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void BidResponse_Ad::clear_width() {
  width_ = 0;
  clear_has_width();
}
inline ::google::protobuf::int32 BidResponse_Ad::width() const {
  // @@protoc_insertion_point(field_get:BidResponse.Ad.width)
  return width_;
}
inline void BidResponse_Ad::set_width(::google::protobuf::int32 value) {
  set_has_width();
  width_ = value;
  // @@protoc_insertion_point(field_set:BidResponse.Ad.width)
}

// optional int32 height = 15;
inline bool BidResponse_Ad::has_height() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void BidResponse_Ad::set_has_height() {
  _has_bits_[0] |= 0x00001000u;
}
inline void BidResponse_Ad::clear_has_height() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void BidResponse_Ad::clear_height() {
  height_ = 0;
  clear_has_height();
}
inline ::google::protobuf::int32 BidResponse_Ad::height() const {
  // @@protoc_insertion_point(field_get:BidResponse.Ad.height)
  return height_;
}
inline void BidResponse_Ad::set_height(::google::protobuf::int32 value) {
  set_has_height();
  height_ = value;
  // @@protoc_insertion_point(field_set:BidResponse.Ad.height)
}

// optional int64 agency_id = 16;
inline bool BidResponse_Ad::has_agency_id() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void BidResponse_Ad::set_has_agency_id() {
  _has_bits_[0] |= 0x00002000u;
}
inline void BidResponse_Ad::clear_has_agency_id() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void BidResponse_Ad::clear_agency_id() {
  agency_id_ = GOOGLE_LONGLONG(0);
  clear_has_agency_id();
}
inline ::google::protobuf::int64 BidResponse_Ad::agency_id() const {
  // @@protoc_insertion_point(field_get:BidResponse.Ad.agency_id)
  return agency_id_;
}
inline void BidResponse_Ad::set_agency_id(::google::protobuf::int64 value) {
  set_has_agency_id();
  agency_id_ = value;
  // @@protoc_insertion_point(field_set:BidResponse.Ad.agency_id)
}

// repeated .BidResponse.Ad.AdSlot adslot = 3;
inline int BidResponse_Ad::adslot_size() const {
  return adslot_.size();
}
inline void BidResponse_Ad::clear_adslot() {
  adslot_.Clear();
}
inline const ::BidResponse_Ad_AdSlot& BidResponse_Ad::adslot(int index) const {
  // @@protoc_insertion_point(field_get:BidResponse.Ad.adslot)
  return adslot_.Get(index);
}
inline ::BidResponse_Ad_AdSlot* BidResponse_Ad::mutable_adslot(int index) {
  // @@protoc_insertion_point(field_mutable:BidResponse.Ad.adslot)
  return adslot_.Mutable(index);
}
inline ::BidResponse_Ad_AdSlot* BidResponse_Ad::add_adslot() {
  // @@protoc_insertion_point(field_add:BidResponse.Ad.adslot)
  return adslot_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::BidResponse_Ad_AdSlot >*
BidResponse_Ad::mutable_adslot() {
  // @@protoc_insertion_point(field_mutable_list:BidResponse.Ad.adslot)
  return &adslot_;
}
inline const ::google::protobuf::RepeatedPtrField< ::BidResponse_Ad_AdSlot >&
BidResponse_Ad::adslot() const {
  // @@protoc_insertion_point(field_list:BidResponse.Ad.adslot)
  return adslot_;
}

// optional int64 DEPRECATED_creative_id = 8;
inline bool BidResponse_Ad::has_deprecated_creative_id() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void BidResponse_Ad::set_has_deprecated_creative_id() {
  _has_bits_[0] |= 0x00008000u;
}
inline void BidResponse_Ad::clear_has_deprecated_creative_id() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void BidResponse_Ad::clear_deprecated_creative_id() {
  deprecated_creative_id_ = GOOGLE_LONGLONG(0);
  clear_has_deprecated_creative_id();
}
inline ::google::protobuf::int64 BidResponse_Ad::deprecated_creative_id() const {
  // @@protoc_insertion_point(field_get:BidResponse.Ad.DEPRECATED_creative_id)
  return deprecated_creative_id_;
}
inline void BidResponse_Ad::set_deprecated_creative_id(::google::protobuf::int64 value) {
  set_has_deprecated_creative_id();
  deprecated_creative_id_ = value;
  // @@protoc_insertion_point(field_set:BidResponse.Ad.DEPRECATED_creative_id)
}

// optional string DEPRECATED_click_through_url = 2;
inline bool BidResponse_Ad::has_deprecated_click_through_url() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void BidResponse_Ad::set_has_deprecated_click_through_url() {
  _has_bits_[0] |= 0x00010000u;
}
inline void BidResponse_Ad::clear_has_deprecated_click_through_url() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void BidResponse_Ad::clear_deprecated_click_through_url() {
  deprecated_click_through_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_deprecated_click_through_url();
}
inline const ::std::string& BidResponse_Ad::deprecated_click_through_url() const {
  // @@protoc_insertion_point(field_get:BidResponse.Ad.DEPRECATED_click_through_url)
  return deprecated_click_through_url_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidResponse_Ad::set_deprecated_click_through_url(const ::std::string& value) {
  set_has_deprecated_click_through_url();
  deprecated_click_through_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:BidResponse.Ad.DEPRECATED_click_through_url)
}
inline void BidResponse_Ad::set_deprecated_click_through_url(const char* value) {
  set_has_deprecated_click_through_url();
  deprecated_click_through_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:BidResponse.Ad.DEPRECATED_click_through_url)
}
inline void BidResponse_Ad::set_deprecated_click_through_url(const char* value, size_t size) {
  set_has_deprecated_click_through_url();
  deprecated_click_through_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:BidResponse.Ad.DEPRECATED_click_through_url)
}
inline ::std::string* BidResponse_Ad::mutable_deprecated_click_through_url() {
  set_has_deprecated_click_through_url();
  // @@protoc_insertion_point(field_mutable:BidResponse.Ad.DEPRECATED_click_through_url)
  return deprecated_click_through_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BidResponse_Ad::release_deprecated_click_through_url() {
  clear_has_deprecated_click_through_url();
  return deprecated_click_through_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidResponse_Ad::set_allocated_deprecated_click_through_url(::std::string* deprecated_click_through_url) {
  if (deprecated_click_through_url != NULL) {
    set_has_deprecated_click_through_url();
  } else {
    clear_has_deprecated_click_through_url();
  }
  deprecated_click_through_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), deprecated_click_through_url);
  // @@protoc_insertion_point(field_set_allocated:BidResponse.Ad.DEPRECATED_click_through_url)
}

// -------------------------------------------------------------------

// BidResponse

// repeated .BidResponse.Ad ad = 2;
inline int BidResponse::ad_size() const {
  return ad_.size();
}
inline void BidResponse::clear_ad() {
  ad_.Clear();
}
inline const ::BidResponse_Ad& BidResponse::ad(int index) const {
  // @@protoc_insertion_point(field_get:BidResponse.ad)
  return ad_.Get(index);
}
inline ::BidResponse_Ad* BidResponse::mutable_ad(int index) {
  // @@protoc_insertion_point(field_mutable:BidResponse.ad)
  return ad_.Mutable(index);
}
inline ::BidResponse_Ad* BidResponse::add_ad() {
  // @@protoc_insertion_point(field_add:BidResponse.ad)
  return ad_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::BidResponse_Ad >*
BidResponse::mutable_ad() {
  // @@protoc_insertion_point(field_mutable_list:BidResponse.ad)
  return &ad_;
}
inline const ::google::protobuf::RepeatedPtrField< ::BidResponse_Ad >&
BidResponse::ad() const {
  // @@protoc_insertion_point(field_list:BidResponse.ad)
  return ad_;
}

// optional string debug_string = 5;
inline bool BidResponse::has_debug_string() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BidResponse::set_has_debug_string() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BidResponse::clear_has_debug_string() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BidResponse::clear_debug_string() {
  debug_string_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_debug_string();
}
inline const ::std::string& BidResponse::debug_string() const {
  // @@protoc_insertion_point(field_get:BidResponse.debug_string)
  return debug_string_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidResponse::set_debug_string(const ::std::string& value) {
  set_has_debug_string();
  debug_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:BidResponse.debug_string)
}
inline void BidResponse::set_debug_string(const char* value) {
  set_has_debug_string();
  debug_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:BidResponse.debug_string)
}
inline void BidResponse::set_debug_string(const char* value, size_t size) {
  set_has_debug_string();
  debug_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:BidResponse.debug_string)
}
inline ::std::string* BidResponse::mutable_debug_string() {
  set_has_debug_string();
  // @@protoc_insertion_point(field_mutable:BidResponse.debug_string)
  return debug_string_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BidResponse::release_debug_string() {
  clear_has_debug_string();
  return debug_string_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidResponse::set_allocated_debug_string(::std::string* debug_string) {
  if (debug_string != NULL) {
    set_has_debug_string();
  } else {
    clear_has_debug_string();
  }
  debug_string_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), debug_string);
  // @@protoc_insertion_point(field_set_allocated:BidResponse.debug_string)
}

// optional int32 processing_time_ms = 4;
inline bool BidResponse::has_processing_time_ms() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BidResponse::set_has_processing_time_ms() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BidResponse::clear_has_processing_time_ms() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BidResponse::clear_processing_time_ms() {
  processing_time_ms_ = 0;
  clear_has_processing_time_ms();
}
inline ::google::protobuf::int32 BidResponse::processing_time_ms() const {
  // @@protoc_insertion_point(field_get:BidResponse.processing_time_ms)
  return processing_time_ms_;
}
inline void BidResponse::set_processing_time_ms(::google::protobuf::int32 value) {
  set_has_processing_time_ms();
  processing_time_ms_ = value;
  // @@protoc_insertion_point(field_set:BidResponse.processing_time_ms)
}

// optional int32 DEPRECATED_protocol_version = 1;
inline bool BidResponse::has_deprecated_protocol_version() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BidResponse::set_has_deprecated_protocol_version() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BidResponse::clear_has_deprecated_protocol_version() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BidResponse::clear_deprecated_protocol_version() {
  deprecated_protocol_version_ = 0;
  clear_has_deprecated_protocol_version();
}
inline ::google::protobuf::int32 BidResponse::deprecated_protocol_version() const {
  // @@protoc_insertion_point(field_get:BidResponse.DEPRECATED_protocol_version)
  return deprecated_protocol_version_;
}
inline void BidResponse::set_deprecated_protocol_version(::google::protobuf::int32 value) {
  set_has_deprecated_protocol_version();
  deprecated_protocol_version_ = value;
  // @@protoc_insertion_point(field_set:BidResponse.DEPRECATED_protocol_version)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::BidRequest_Mobile_MobileDeviceType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::BidRequest_Mobile_MobileDeviceType>() {
  return ::BidRequest_Mobile_MobileDeviceType_descriptor();
}
template <> struct is_proto_enum< ::BidRequest_Mobile_ScreenOrientation> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::BidRequest_Mobile_ScreenOrientation>() {
  return ::BidRequest_Mobile_ScreenOrientation_descriptor();
}
template <> struct is_proto_enum< ::BidRequest_Video_CompanionSlot_CreativeFormat> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::BidRequest_Video_CompanionSlot_CreativeFormat>() {
  return ::BidRequest_Video_CompanionSlot_CreativeFormat_descriptor();
}
template <> struct is_proto_enum< ::BidRequest_Video_InventoryType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::BidRequest_Video_InventoryType>() {
  return ::BidRequest_Video_InventoryType_descriptor();
}
template <> struct is_proto_enum< ::BidRequest_Video_SkippableBidRequestType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::BidRequest_Video_SkippableBidRequestType>() {
  return ::BidRequest_Video_SkippableBidRequestType_descriptor();
}
template <> struct is_proto_enum< ::BidRequest_Video_VideoFormat> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::BidRequest_Video_VideoFormat>() {
  return ::BidRequest_Video_VideoFormat_descriptor();
}
template <> struct is_proto_enum< ::BidRequest_AdSlot_SlotVisibility> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::BidRequest_AdSlot_SlotVisibility>() {
  return ::BidRequest_AdSlot_SlotVisibility_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_realtime_2dbidding_2eproto__INCLUDED
